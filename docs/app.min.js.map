{"version":3,"sources":["webpack:///app.min.js","webpack:///webpack/bootstrap 20300bc1538fc69e4695","webpack:///./src/index.js","webpack:///../~/skeleton-css/css/normalize.css?d9c9","webpack:///../~/skeleton-css/css/normalize.css","webpack:///../~/css-loader/lib/css-base.js","webpack:///../~/style-loader/addStyles.js","webpack:///../~/skeleton-css/css/skeleton.css?d650","webpack:///../~/skeleton-css/css/skeleton.css","webpack:///../~/lodash/lodash.js","webpack:///(webpack)/buildin/module.js","webpack:///./../support/js/index.js","webpack:///./../support/js/Mash.js","webpack:///./../support/js/Invwk.js","webpack:///./../support/js/Alea.js","webpack:///./../support/js/KISS07.js","webpack:///./../support/js/Kybos.js","webpack:///./../support/js/LFib.js","webpack:///./../support/js/LFIB4.js","webpack:///./../support/js/MRG32k3a.js","webpack:///./../support/js/Xorshift03.js","webpack:///./src/renderHistogram.js","webpack:///../~/d3/build/d3.js"],"names":["PRNG","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_interopRequireWildcard","newObj","key","Object","prototype","hasOwnProperty","renderAlg","alg","data","_","times","numSamples","_index2","seed","bind","this","undefined","_renderHistogram2","_normalize","_skeleton","_lodash","_index","_renderHistogram","_d","Date","content","locals","push","list","toString","result","i","length","item","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","createLinkElement","linkElement","rel","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","__WEBPACK_AMD_DEFINE_RESULT__","global","addMapEntry","map","pair","set","addSetEntry","value","add","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","object","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","next","done","mapToArray","size","forEach","overArg","transform","arg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","baseAssignValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","defineProperty","configurable","enumerable","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","TypeError","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","slice","allocUnsafe","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","createToPairs","createWrap","mergeData","baseSetData","isPartial","arrValue","othValue","compared","name","message","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","proto","memoizeCapped","srcBitmask","newBitmask","isCombo","mergeDefaults","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","sign","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","endsWith","target","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","toPath","uniqueId","prefix","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","filtered","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","webpackPolyfill","deprecate","children","generator","from","to","_Mash","_Mash2","_Invwk","_Invwk2","_Alea","_Alea2","_KISS","_KISS2","_Kybos","_Kybos2","_LFib","_LFib2","_LFIB","_LFIB2","_MRG32k3a","_MRG32k3a2","_Xorshift","_Xorshift2","Invwk","Mash","Alea","KISS07","Kybos","LFib","LFib4","MRG32k3a","Xorshift03","mash","charCodeAt","h","version","uint32","fract53","s0","s1","s2","t","x","y","z","w","s","k","a","r","addNoise","k0","k1","k2","LFIB4","k3","m1","m2","s10","s11","s12","s20","s21","s22","p1","p2","a12","a13n","a21","a23n","v","renderHistogram","formatCount","d3","format","svg","select","margin","top","right","bottom","left","width","attr","height","g","append","scaleLinear","rangeRound","bins","histogram","domain","thresholds","ticks","d","bar","selectAll","enter","x0","x1","text","axisBottom","factory","ascendingComparator","f","ascending","tickStep","stop","step0","abs","step1","pow","log","LN10","error","e10","e5","e2","map$1","o","createObject","setObject","createMap","setMap","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","sqrt","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","lexicographicOrder","b","computeUpperHullIndexes","points","cross","Path","_x0","_y0","_x1","_y1","tree","xm","ym","xp","yp","node","_root","leaf","y0","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","leaf_copy","Queue","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","q","abort","noabort","maybeNotify","queue","concurrency","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x2","y2","x3","y3","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","_context","Radial","curve","_curve","curveRadial","radial","radialLine","l","angle","radius","point","that","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","epsilon$1","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","slope2","point$3","t0","t1","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$1","series","definition","Color","color","reHex3","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","rgbConvert","rgb","opacity","Hsl","hslConvert","hsl","hsl2rgb","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","atan2","rad2deg","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","cubehelix","basis$1","v0","v1","v2","v3","linear$1","exponential$1","hue","constant$3","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssRoot","documentElement","cssView","defaultView","style","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","createElementNS","baseVal","consolidate","matrix","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateNumber","rotate","skewX","scale","translateX","translateY","scaleX","scaleY","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","dispatch","Dispatch","parseTypenames","typenames","types","set$2","noop$1","objectConverter","columns","customConverter","row","inferColumns","rows","columnSet","column","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke$1","pokeDelay","taskTail","sleep","interval","clearInterval","setInterval","newInterval","floori","offseti","field","date","d0","d1","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","FormatSpecifier","specifier","re","align","comma","formatTypes","identity$3","defaultLocale","locale$1","formatLocale","formatPrefix","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pads","newParse","newDate","parseSpecifier","day$$1","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","slice$3","band","rescale","range$$1","paddingInner","paddingOuter","bandwidth","ordinalRange","padding","pointish","point$4","deinterpolateLinear","constant$4","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","bimap","r0","polymap","bisectRight","continuous","piecewise","output","interpolate$$1","unit","map$3","number$1","interpolateRound","linearish","tickFormat","nice","linear$2","identity$4","pow10","powp","base","logp","log10","log2","reflect","logs","pows","u","raise","exponent","quantile$$1","threshold","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","ramp","sequential","interpolator","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","space","local","Local","nextId","filterContextListener","listener","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","parseTypenames$1","onRemove","typename","on","__on","removeEventListener","capture","onAdd","filterEvents","addEventListener","customEvent","sourceEvent","none$2","empty","EnterNode","datum","_parent","bindIndex","exit","groupLength","dataLength","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$2","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","classList","ClassList","_node","_names","getAttribute","classedAdd","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise$1","previousSibling","constantNull","dispatchEvent","params","window$$1","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","selection","init","schedule","__transition","state","CREATED","set$3","STARTING","get$1","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tick","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","start$1","onFunction","on0","on1","sit","removeFunction","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","inherit","timing","defaultTiming","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","identity$5","spacing","tickSizeInner","tickPadding","range0","range1","tickExit","tickEnter","line","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisLeft","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","circle","l2","l0","l1","enclose1","enclose2","enclose3","r2","x21","y21","r21","r3","a2","c2","a3","c3","ab","place","ax","ay","da","db","dc","intersects","distance2","Node$1","packEnclose","circles","sj","sk","aa","ba","ca","oa","pack","enclose","optional","required","constantZero","defaultRadius","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","i0","i1","dice","treemapDice","treemapSlice","x$1","vx","y$1","vy","index$2","nodeById","nodeId","x$2","y$2","nopropagation","stopImmediatePropagation","yesdrag","noclick","selection$$1","noevent","MozUserSelect","__noselect","DragEvent","subject","active","identifier","defaultFilter","button","defaultContainer","defaultSubject","x$4","y$4","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","defaultFilter$1","defaultExtent","SVGElement","ownerSVGElement","clientWidth","clientHeight","defaultTransform","nopropagation$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","moving","noevent$2","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","w0","e0","w1","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","starting","BrushEvent","constant$11","compareValue","compare","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","Adder","reset","add$1","adder","bv","av","acos","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","link$1","clipExtent","visible","a1","corner","comparePoint","compareIntersection","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","v_","x_","y_","x__","y__","v__","rejoin","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","graticuleX","graticuleY","graticule","lines","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","PathString","_string","circle$2","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$7","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","sy0","r0y","sign$1","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","log$1","tan","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","hi","ascendingBisect","bisectLeft","descending","variance","deviation","constant$1","sturges","LN2","tz","bin","freedmanDiaconis","scott","median","numbers","merged","permute","permutes","scan","xi","xj","transpose","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","area","centroid","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","inside","length$1","perimeter","pi$1","tau$1","epsilon","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","rect","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","slice$1","await","results","awaitAll","constant$2","pi$2","tau$2","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","_line","areaEnd","_point","curveLinear","defined0","defined","x$$1","y$$1","area$1","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","arcs","pa","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","draw","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","basis","_x3","_x4","_y3","_y4","basisClosed","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$2","none","none$1","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","sij0","sij1","s3","skj0","skj1","ascending$1","sums","descending$2","insideOut","tops","bottoms","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","basis$2","basisClosed$1","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","T","dsv","delimiter","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","open","setRequestHeader","overrideMimeType","defaultMimeType","html","createContextualFragment","json","xml","responseXML","dsv$1","csv$1","tsv$1","performance","requestAnimationFrame","interval$1","total","millisecond","milliseconds","durationSecond","durationHour","durationDay","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","prefixExponent","utcYears","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","formatSpecifier","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","-","0","isoSpecifier","formatIso","parseIso","array$2","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","namespaces","xlink","xmlns","namespace","creator","matcher","selector","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","element$1","mouseenter","mouseleave","selection_on","point$5","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$5","selection_data","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","emptyOn","emptyTween","selection_interrupt","transition_tween","interpolate$1","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","selection_transition","root$1","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","descendants","shuffle$1","siblings","constant$6","roundNode","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","resquarify","_squarify","center$1","force","sx","sy","constant$7","jiggle","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","distance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$3","y$3","preventDefault","constant$8","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","constant$9","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$10","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$1","zoom","wheeled","dblclicked","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","xy","XY","nw","ne","se","sw","pi$3","halfPi$2","tau$3","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$5","constant$12","ribbon","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","epsilon2$2","streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area$2","bounds","deltaMax","centroid$1","constant$13","circle$1","pointEqual","isSubject","extent$1","length$2","object$1","interpolate$2","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_circle","index$3","contextStream","projectionStream","sum$2","polygonContains","sinPhi1","absDelta","phiArc","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","transform$1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$8","reflectX","reflectY","orthographic","stereographic","transverseMercator","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeek","utcWeeks","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","dragEnable","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoGraticule10","geoIdentity","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw"],"mappings":"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,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAEAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,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","file":"./app.min.js","sourcesContent":["var PRNG =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _normalize = __webpack_require__(1);\n\t\n\tvar normalize = _interopRequireWildcard(_normalize);\n\t\n\tvar _skeleton = __webpack_require__(5);\n\t\n\tvar skeletoncss = _interopRequireWildcard(_skeleton);\n\t\n\tvar _lodash = __webpack_require__(7);\n\t\n\tvar _ = _interopRequireWildcard(_lodash);\n\t\n\tvar _index = __webpack_require__(9);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _renderHistogram = __webpack_require__(19);\n\t\n\tvar _renderHistogram2 = _interopRequireDefault(_renderHistogram);\n\t\n\tvar _d = __webpack_require__(20);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar seed = +new Date();\n\tvar numSamples = 100000;\n\t\n\tfunction renderAlg(alg) {\n\t    var data = _.times(numSamples, _index2.default[alg](seed).bind(this, undefined, undefined));\n\t    (0, _renderHistogram2.default)('#' + alg, data);\n\t}\n\t\n\trenderAlg('Alea');\n\trenderAlg('KISS07');\n\trenderAlg('Kybos');\n\trenderAlg('LFib');\n\trenderAlg('LFib4');\n\trenderAlg('MRG32k3a');\n\trenderAlg('Xorshift03');\n\trenderAlg('Invwk');\n\t\n\t// let AleaData = _.times(numSamples, PRNG.Alea(seed).bind(this, undefined, undefined));\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(2);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./normalize.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./normalize.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(3)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(6);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./skeleton.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./skeleton.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(3)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".container{position:relative;max-width:960px;margin:0 auto;padding:0 20px}.column,.columns,.container{width:100%;box-sizing:border-box}.column,.columns{float:left}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:Raleway,HelveticaNeue,Helvetica Neue,Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2}h1,h2{letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:focus,.button:hover,button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=button].button-primary,input[type=reset].button-primary,input[type=submit].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:focus,.button.button-primary:hover,button.button-primary:focus,button.button-primary:hover,input[type=button].button-primary:focus,input[type=button].button-primary:hover,input[type=reset].button-primary:focus,input[type=reset].button-primary:hover,input[type=submit].button-primary:focus,input[type=submit].button-primary:hover{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],select,textarea{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,select:focus,textarea:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ol ol,ol ul,ul ol,ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}td,th{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}.button,button{margin-bottom:1rem}fieldset,input,select,textarea{margin-bottom:1.5rem}blockquote,dl,figure,form,ol,p,pre,table,ul{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:\\\"\\\";display:table;clear:both}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * Lodash <https://lodash.com/>\n\t * Copyright JS Foundation and other contributors <https://js.foundation/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.17.2';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Error message constants. */\n\t  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n\t      FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the maximum memoize cache size. */\n\t  var MAX_MEMOIZE_SIZE = 500;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for cloning. */\n\t  var CLONE_DEEP_FLAG = 1,\n\t      CLONE_FLAT_FLAG = 2,\n\t      CLONE_SYMBOLS_FLAG = 4;\n\t\n\t  /** Used to compose bitmasks for value comparisons. */\n\t  var COMPARE_PARTIAL_FLAG = 1,\n\t      COMPARE_UNORDERED_FLAG = 2;\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var WRAP_BIND_FLAG = 1,\n\t      WRAP_BIND_KEY_FLAG = 2,\n\t      WRAP_CURRY_BOUND_FLAG = 4,\n\t      WRAP_CURRY_FLAG = 8,\n\t      WRAP_CURRY_RIGHT_FLAG = 16,\n\t      WRAP_PARTIAL_FLAG = 32,\n\t      WRAP_PARTIAL_RIGHT_FLAG = 64,\n\t      WRAP_ARY_FLAG = 128,\n\t      WRAP_REARG_FLAG = 256,\n\t      WRAP_FLIP_FLAG = 512;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 800,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', WRAP_ARY_FLAG],\n\t    ['bind', WRAP_BIND_FLAG],\n\t    ['bindKey', WRAP_BIND_KEY_FLAG],\n\t    ['curry', WRAP_CURRY_FLAG],\n\t    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n\t    ['flip', WRAP_FLIP_FLAG],\n\t    ['partial', WRAP_PARTIAL_FLAG],\n\t    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n\t    ['rearg', WRAP_REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      asyncTag = '[object AsyncFunction]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      domExcTag = '[object DOMException]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      nullTag = '[object Null]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      proxyTag = '[object Proxy]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      undefinedTag = '[object Undefined]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n\t      reUnescapedHtml = /[&<>\"']/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match words composed of alphanumeric characters. */\n\t  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n\t  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n\t      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n\t      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n\t      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reUnicodeWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n\t    rsUpper + '+' + rsOptContrUpper,\n\t    rsOrdUpper,\n\t    rsOrdLower,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map Latin Unicode letters to basic Latin letters. */\n\t  var deburredLetters = {\n\t    // Latin-1 Supplement block.\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss',\n\t    // Latin Extended-A block.\n\t    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n\t    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n\t    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n\t    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n\t    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n\t    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n\t    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n\t    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n\t    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n\t    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n\t    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n\t    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n\t    '\\u0134': 'J',  '\\u0135': 'j',\n\t    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n\t    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n\t    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n\t    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n\t    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n\t    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n\t    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n\t    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n\t    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n\t    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n\t    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n\t    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n\t    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n\t    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n\t    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n\t    '\\u0174': 'W',  '\\u0175': 'w',\n\t    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n\t    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n\t    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n\t    '\\u0132': 'IJ', '\\u0133': 'ij',\n\t    '\\u0152': 'Oe', '\\u0153': 'oe',\n\t    '\\u0149': \"'n\", '\\u017f': 's'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\"\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array == null ? 0 : array.length;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array == null ? 0 : array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Gets the size of an ASCII `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  var asciiSize = baseProperty('length');\n\t\n\t  /**\n\t   * Converts an ASCII `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function asciiToArray(string) {\n\t    return string.split('');\n\t  }\n\t\n\t  /**\n\t   * Splits an ASCII `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function asciiWords(string) {\n\t    return string.match(reAsciiWord) || [];\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    return value === value\n\t      ? strictIndexOf(array, value, fromIndex)\n\t      : baseFindIndex(array, baseIsNaN, fromIndex);\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a `cache` value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        ++result;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n\t   * letters to basic Latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n\t   */\n\t  function hasUnicode(string) {\n\t    return reHasUnicode.test(string);\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains a word composed of Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a word is found, else `false`.\n\t   */\n\t  function hasUnicodeWord(string) {\n\t    return reHasUnicodeWord.test(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a unary function that invokes `func` with its argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.indexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.lastIndexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictLastIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex + 1;\n\t    while (index--) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeSize(string)\n\t      : asciiSize(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeToArray(string)\n\t      : asciiToArray(string);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /**\n\t   * Gets the size of a Unicode `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function unicodeSize(string) {\n\t    var result = reUnicode.lastIndex = 0;\n\t    while (reUnicode.test(string)) {\n\t      ++result;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts a Unicode `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function unicodeToArray(string) {\n\t    return string.match(reUnicode) || [];\n\t  }\n\t\n\t  /**\n\t   * Splits a Unicode `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function unicodeWords(string) {\n\t    return string.match(reUnicodeWord) || [];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  var runInContext = (function runInContext(context) {\n\t    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = Array.prototype,\n\t        funcProto = Function.prototype,\n\t        objectProto = Object.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = funcProto.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var nativeObjectToString = objectProto.toString;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n\t        getPrototype = overArg(Object.getPrototypeOf, Object),\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n\t        symIterator = Symbol ? Symbol.iterator : undefined,\n\t        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t    var defineProperty = (function() {\n\t      try {\n\t        var func = getNative(Object, 'defineProperty');\n\t        func({}, '', {});\n\t        return func;\n\t      } catch (e) {}\n\t    }());\n\t\n\t    /** Mocked built-ins. */\n\t    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n\t        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n\t        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = overArg(Object.keys, Object),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = Date.now,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} proto The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(proto) {\n\t        if (!isObject(proto)) {\n\t          return {};\n\t        }\n\t        if (objectCreate) {\n\t          return objectCreate(proto);\n\t        }\n\t        object.prototype = proto;\n\t        var result = new object;\n\t        object.prototype = undefined;\n\t        return result;\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      var result = this.has(key) && delete this.__data__[key];\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      this.size += this.has(key) ? 0 : 1;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      --this.size;\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        ++this.size;\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.size = 0;\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      var result = getMapData(this, key)['delete'](key);\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      var data = getMapData(this, key),\n\t          size = data.size;\n\t\n\t      data.set(key, value);\n\t      this.size += data.size == size ? 0 : 1;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values == null ? 0 : values.length;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      var data = this.__data__ = new ListCache(entries);\n\t      this.size = data.size;\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          result = data['delete'](key);\n\t\n\t      this.size = data.size;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__;\n\t      if (data instanceof ListCache) {\n\t        var pairs = data.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          this.size = ++data.size;\n\t          return this;\n\t        }\n\t        data = this.__data__ = new MapCache(pairs);\n\t      }\n\t      data.set(key, value);\n\t      this.size = data.size;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of the enumerable property names of the array-like `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @param {boolean} inherited Specify returning inherited property names.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function arrayLikeKeys(value, inherited) {\n\t      var isArr = isArray(value),\n\t          isArg = !isArr && isArguments(value),\n\t          isBuff = !isArr && !isArg && isBuffer(value),\n\t          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t          skipIndexes = isArr || isArg || isBuff || isType,\n\t          result = skipIndexes ? baseTimes(value.length, String) : [],\n\t          length = result.length;\n\t\n\t      for (var key in value) {\n\t        if ((inherited || hasOwnProperty.call(value, key)) &&\n\t            !(skipIndexes && (\n\t               // Safari 9 has enumerable `arguments.length` in strict mode.\n\t               key == 'length' ||\n\t               // Node.js 0.10 has enumerable non-index properties on buffers.\n\t               (isBuff && (key == 'offset' || key == 'parent')) ||\n\t               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t               // Skip index properties.\n\t               isIndex(key, length)\n\t            ))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sample` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function arraySample(array) {\n\t      var length = array.length;\n\t      return length ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sampleSize` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function arraySampleSize(array, n) {\n\t      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function arrayShuffle(array) {\n\t      return shuffleSelf(copyArray(array));\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assignIn` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssignIn(object, source) {\n\t      return object && copyObject(source, keysIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `assignValue` and `assignMergeValue` without\n\t     * value checks.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function baseAssignValue(object, key, value) {\n\t      if (key == '__proto__' && defineProperty) {\n\t        defineProperty(object, key, {\n\t          'configurable': true,\n\t          'enumerable': true,\n\t          'value': value,\n\t          'writable': true\n\t        });\n\t      } else {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = Array(length),\n\t          skip = object == null;\n\t\n\t      while (++index < length) {\n\t        result[index] = skip ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Deep clone\n\t     *  2 - Flatten inherited properties\n\t     *  4 - Clone symbols\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, bitmask, customizer, key, object, stack) {\n\t      var result,\n\t          isDeep = bitmask & CLONE_DEEP_FLAG,\n\t          isFlat = bitmask & CLONE_FLAT_FLAG,\n\t          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t          if (!isDeep) {\n\t            return isFlat\n\t              ? copySymbolsIn(value, baseAssignIn(result, value))\n\t              : copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      var keysFunc = isFull\n\t        ? (isFlat ? getAllKeysIn : getAllKeys)\n\t        : (isFlat ? keysIn : keys);\n\t\n\t      var props = isArr ? undefined : keysFunc(value);\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (length--) {\n\t        var key = props[length],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined && !(key in object)) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee == null ? value : iteratee(value);\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = castPath(path, object);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag` without fallbacks for buggy environments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      if (value == null) {\n\t        return value === undefined ? undefinedTag : nullTag;\n\t      }\n\t      value = Object(value);\n\t      return (symToStringTag && symToStringTag in value)\n\t        ? getRawTag(value)\n\t        : objectToString(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      return object != null && hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      var func = object == null ? object : object[toKey(last(path))];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArguments`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     */\n\t    function baseIsArguments(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Unordered comparison\n\t     *  2 - Partial comparison\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, bitmask, customizer, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && isBuffer(object)) {\n\t        if (!isBuffer(other)) {\n\t          return false;\n\t        }\n\t        objIsArr = true;\n\t        objIsObj = false;\n\t      }\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n\t          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n\t      }\n\t      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      if (!isPrototype(object)) {\n\t        return nativeKeys(object);\n\t      }\n\t      var result = [];\n\t      for (var key in Object(object)) {\n\t        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      if (!isObject(object)) {\n\t        return nativeKeysIn(object);\n\t      }\n\t      var isProto = isPrototype(object),\n\t          result = [];\n\t\n\t      for (var key in object) {\n\t        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      baseFor(source, function(srcValue, key) {\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      }, keysIn);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        var isArr = isArray(srcValue),\n\t            isBuff = !isArr && isBuffer(srcValue),\n\t            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\t\n\t        newValue = srcValue;\n\t        if (isArr || isBuff || isTyped) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else if (isBuff) {\n\t            isCommon = false;\n\t            newValue = cloneBuffer(srcValue, true);\n\t          }\n\t          else if (isTyped) {\n\t            isCommon = false;\n\t            newValue = cloneTypedArray(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = [];\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          newValue = objValue;\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            newValue = initCloneObject(srcValue);\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, paths) {\n\t      object = Object(object);\n\t      return basePickBy(object, paths, function(value, path) {\n\t        return hasIn(object, path);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, paths, predicate) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var path = paths[index],\n\t            value = baseGet(object, path);\n\t\n\t        if (predicate(value, path)) {\n\t          baseSet(result, castPath(path, object), value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          } else {\n\t            baseUnset(array, index);\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      return setToString(overRest(func, start, identity), func + '');\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sample`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function baseSample(collection) {\n\t      return arraySample(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sampleSize` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function baseSampleSize(collection, n) {\n\t      var array = values(collection);\n\t      return shuffleSelf(array, baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]),\n\t            newValue = value;\n\t\n\t        if (index != lastIndex) {\n\t          var objValue = nested[key];\n\t          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = isObject(objValue)\n\t              ? objValue\n\t              : (isIndex(path[index + 1]) ? [] : {});\n\t          }\n\t        }\n\t        assignValue(nested, key, newValue);\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `setToString` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetToString = !defineProperty ? identity : function(func, string) {\n\t      return defineProperty(func, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(string),\n\t        'writable': true\n\t      });\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.shuffle`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function baseShuffle(collection) {\n\t      return shuffleSelf(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array == null ? low : array.length;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array == null ? 0 : array.length,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isArray(value)) {\n\t        // Recursively convert values (susceptible to call stack limits).\n\t        return arrayMap(value, baseToString) + '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The property path to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      return object == null || delete object[toKey(last(path))];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var length = arrays.length;\n\t      if (length < 2) {\n\t        return length ? baseUniq(arrays[0]) : [];\n\t      }\n\t      var index = -1,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var array = arrays[index],\n\t            othIndex = -1;\n\t\n\t        while (++othIndex < length) {\n\t          if (othIndex != index) {\n\t            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n\t          }\n\t        }\n\t      }\n\t      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value, object) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      return isKey(value, object) ? [value] : stringToPath(toString(value));\n\t    }\n\t\n\t    /**\n\t     * A `baseRest` alias which can be replaced with `identity` by module\n\t     * replacement plugins.\n\t     *\n\t     * @private\n\t     * @type {Function}\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    var castRest = baseRest;\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n\t     *\n\t     * @private\n\t     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n\t     */\n\t    var clearTimeout = ctxClearTimeout || function(id) {\n\t      return root.clearTimeout(id);\n\t    };\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var length = buffer.length,\n\t          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      var isNew = !object;\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        if (newValue === undefined) {\n\t          newValue = source[key];\n\t        }\n\t        if (isNew) {\n\t          baseAssignValue(object, key, newValue);\n\t        } else {\n\t          assignValue(object, key, newValue);\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Copies own and inherited symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbolsIn(source, object) {\n\t      return copyObject(source, getSymbolsIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = hasUnicode(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return flatRest(function(funcs) {\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & WRAP_ARY_FLAG,\n\t          isBind = bitmask & WRAP_BIND_FLAG,\n\t          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n\t          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & WRAP_FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return flatRest(function(iteratees) {\n\t        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return hasUnicode(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & WRAP_CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *    1 - `_.bind`\n\t     *    2 - `_.bindKey`\n\t     *    4 - `_.curry` or `_.curryRight` of a bound function\n\t     *    8 - `_.curry`\n\t     *   16 - `_.curryRight`\n\t     *   32 - `_.partial`\n\t     *   64 - `_.partialRight`\n\t     *  128 - `_.rearg`\n\t     *  256 - `_.ary`\n\t     *  512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!cacheHas(seen, othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n\t                  return seen.push(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= COMPARE_UNORDERED_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which flattens the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function flatRest(func) {\n\t      return setToString(overRest(func, undefined, flatten), func + '');\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the raw `toStringTag`.\n\t     */\n\t    function getRawTag(value) {\n\t      var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t          tag = value[symToStringTag];\n\t\n\t      try {\n\t        value[symToStringTag] = undefined;\n\t        var unmasked = true;\n\t      } catch (e) {}\n\t\n\t      var result = nativeObjectToString.call(value);\n\t      if (unmasked) {\n\t        if (isOwn) {\n\t          value[symToStringTag] = tag;\n\t        } else {\n\t          delete value[symToStringTag];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = baseGetTag(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          result = false;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result || ++index != length) {\n\t        return result;\n\t      }\n\t      length = object == null ? 0 : object.length;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length;\n\t      if (!length) {\n\t        return source;\n\t      }\n\t      var lastIndex = length - 1;\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.memoize` which clears the memoized function's\n\t     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @returns {Function} Returns the new memoized function.\n\t     */\n\t    function memoizeCapped(func) {\n\t      var result = memoize(func, function(key) {\n\t        if (cache.size === MAX_MEMOIZE_SIZE) {\n\t          cache.clear();\n\t        }\n\t        return key;\n\t      });\n\t\n\t      var cache = result.cache;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & WRAP_BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & WRAP_ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like\n\t     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * except that it includes inherited enumerable properties.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function nativeKeysIn(object) {\n\t      var result = [];\n\t      if (object != null) {\n\t        for (var key in Object(object)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string using `Object.prototype.toString`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     */\n\t    function objectToString(value) {\n\t      return nativeObjectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which transforms the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @param {Function} transform The rest array transform.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function overRest(func, start, transform) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = transform(array);\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = shortOut(baseSetData);\n\t\n\t    /**\n\t     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    var setTimeout = ctxSetTimeout || function(func, wait) {\n\t      return root.setTimeout(func, wait);\n\t    };\n\t\n\t    /**\n\t     * Sets the `toString` method of `func` to return `string`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setToString = shortOut(baseSetToString);\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    function setWrapToString(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that'll short out and invoke `identity` instead\n\t     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t     * milliseconds.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new shortable function.\n\t     */\n\t    function shortOut(func) {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function() {\n\t        var stamp = nativeNow(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return arguments[0];\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return func.apply(undefined, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @param {number} [size=array.length] The size of `array`.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function shuffleSelf(array, size) {\n\t      var index = -1,\n\t          length = array.length,\n\t          lastIndex = length - 1;\n\t\n\t      size = size === undefined ? length : size;\n\t      while (++index < size) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = array[rand];\n\t\n\t        array[rand] = array[index];\n\t        array[index] = value;\n\t      }\n\t      array.length = size;\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoizeCapped(function(string) {\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to convert.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array == null ? 0 : array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var args = Array(length - 1),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The order and\n\t     * references of result values are determined by the first array. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs == null ? 0 : pairs.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 0, -1) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The order and references\n\t     * of result values are determined by the first array. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      if (comparator) {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array == null ? '' : nativeJoin.call(array, separator);\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n\t      }\n\t      return value === value\n\t        ? strictLastIndexOf(array, value, index)\n\t        : baseFindIndex(array, baseIsNaN, index, true);\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = flatRest(function(array, indexes) {\n\t      var length = array == null ? 0 : array.length,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array == null ? array : nativeReverse.call(array);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 1, length) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept. The order of result values is determined by the order they occur\n\t     * in the array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length) ? baseUniq(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The order of result values is determined by the\n\t     * order they occur in the array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The order of result values is\n\t     * determined by the order they occur in the array.The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The order of result values is determined\n\t     * by the order they occur in the arrays. The iteratee is invoked with one\n\t     * argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The order of result values is\n\t     * determined by the order they occur in the arrays. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = flatRest(function(paths) {\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        ++result[key];\n\t      } else {\n\t        baseAssignValue(result, key, 1);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** This method returns `true` for\n\t     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n\t     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n\t     * elements of empty collections.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _.forEach([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        baseAssignValue(result, key, [value]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      baseAssignValue(result, key, value);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var func = isArray(collection) ? arraySample : baseSample;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n\t      return func(collection, n);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        return isString(collection) ? stringSize(collection) : collection.length;\n\t      }\n\t      var tag = getTag(collection);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return collection.size;\n\t      }\n\t      return baseKeys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, [function(o) { return o.user; }]);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    var now = ctxNow || function() {\n\t      return root.Date.now();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = WRAP_BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one millisecond.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, WRAP_FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result) || cache;\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Expose `MapCache`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = castRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = flatRest(function(func, indexes) {\n\t      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      return partial(castFunction(wrapper), value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t        !propertyIsEnumerable.call(value, 'callee');\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(value.length) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && baseGetTag(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n\t            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      var tag = getTag(value);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return !value.size;\n\t      }\n\t      if (isPrototype(value)) {\n\t        return !baseKeys(value).length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      var tag = baseGetTag(value);\n\t      return tag == errorTag || tag == domExcTag ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      if (!isObject(value)) {\n\t        return false;\n\t      }\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t      var tag = baseGetTag(value);\n\t      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return value != null && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return value != null && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method is equivalent to `_.matches` when `source` is\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error(CORE_ERROR_TEXT);\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && baseGetTag(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t        funcToString.call(Ctor) == objectCtorString;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (symIterator && value[symIterator]) {\n\t        return iteratorToArray(value[symIterator]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = flatRest(baseAt);\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties == null ? result : baseAssign(result, properties);\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, iteratee(value, key, object), value);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, key, iteratee(value, key, object));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with six arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable property paths of `object` that are not omitted.\n\t     *\n\t     * **Note:** This method is considerably slower than `_.pick`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = flatRest(function(object, paths) {\n\t      var result = {};\n\t      if (object == null) {\n\t        return result;\n\t      }\n\t      var isDeep = false;\n\t      paths = arrayMap(paths, function(path) {\n\t        path = castPath(path, object);\n\t        isDeep || (isDeep = path.length > 1);\n\t        return path;\n\t      });\n\t      copyObject(object, getAllKeysIn(object), result);\n\t      if (isDeep) {\n\t        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);\n\t      }\n\t      var length = paths.length;\n\t      while (length--) {\n\t        baseUnset(result, paths[length]);\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = flatRest(function(object, paths) {\n\t      return object == null ? {} : basePick(object, paths);\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      var props = arrayMap(getAllKeysIn(object), function(prop) {\n\t        return [prop];\n\t      });\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, props, function(value, path) {\n\t        return predicate(value, path[0]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        length = 1;\n\t        object = undefined;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object),\n\t          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\t\n\t      iteratee = getIteratee(iteratee, 4);\n\t      if (accumulator == null) {\n\t        var Ctor = object && object.constructor;\n\t        if (isArrLike) {\n\t          accumulator = isArr ? new Ctor : [];\n\t        }\n\t        else if (isObject(object)) {\n\t          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t        }\n\t        else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object == null ? [] : baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n\t     * letters to basic Latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n\t     * corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (!separator && hasUnicode(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return string.split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n\t     * // Disable support by replacing the \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (hasUnicode(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = flatRest(function(object, methodNames) {\n\t      arrayEach(methodNames, function(key) {\n\t        key = toKey(key);\n\t        baseAssignValue(object, key, bind(object[key], object));\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs == null ? 0 : pairs.length,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** Partial comparisons will match empty array and empty object\n\t     * `srcValue` values against any array or object value, respectively. See\n\t     * `_.isEqual` for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (symIterator) {\n\t      lodash.prototype[symIterator] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  });\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(8)(module)))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tvar _Invwk = __webpack_require__(11);\n\t\n\tvar _Invwk2 = _interopRequireDefault(_Invwk);\n\t\n\tvar _Alea = __webpack_require__(12);\n\t\n\tvar _Alea2 = _interopRequireDefault(_Alea);\n\t\n\tvar _KISS = __webpack_require__(13);\n\t\n\tvar _KISS2 = _interopRequireDefault(_KISS);\n\t\n\tvar _Kybos = __webpack_require__(14);\n\t\n\tvar _Kybos2 = _interopRequireDefault(_Kybos);\n\t\n\tvar _LFib = __webpack_require__(15);\n\t\n\tvar _LFib2 = _interopRequireDefault(_LFib);\n\t\n\tvar _LFIB = __webpack_require__(16);\n\t\n\tvar _LFIB2 = _interopRequireDefault(_LFIB);\n\t\n\tvar _MRG32k3a = __webpack_require__(17);\n\t\n\tvar _MRG32k3a2 = _interopRequireDefault(_MRG32k3a);\n\t\n\tvar _Xorshift = __webpack_require__(18);\n\t\n\tvar _Xorshift2 = _interopRequireDefault(_Xorshift);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction random(generator) {\n\t  var rand = null;\n\t  return function () {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    rand = args.length ? generator.apply(this, args) : generator();\n\t\n\t    function range(from, to) {\n\t      if (typeof from !== 'undefined' && typeof to === 'undefined') {\n\t        return from * rand() | 0;\n\t      } else if (typeof from !== 'undefined' && typeof to !== 'undefined') {\n\t        return (to - from) * rand() + from | 0;\n\t      } else {\n\t        return rand();\n\t      }\n\t    }\n\t\n\t    return Object.assign(range, rand);\n\t  };\n\t}\n\t\n\tvar rand = random(_Alea2.default);\n\trand.Invwk = random(_Invwk2.default);\n\trand.Mash = _Mash2.default;\n\trand.Alea = random(_Alea2.default);\n\trand.KISS07 = random(_KISS2.default);\n\trand.Kybos = random(_Kybos2.default);\n\trand.LFib = random(_LFib2.default);\n\trand.LFib4 = random(_LFIB2.default);\n\trand.MRG32k3a = random(_MRG32k3a2.default);\n\trand.Xorshift03 = random(_Xorshift2.default);\n\t\n\tmodule.exports = rand;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Mash;\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\t// Johannes Baagøe <baagoe@baagoe.com>, 2010\n\tfunction Mash() {\n\t  var n = 0xefc8249d;\n\t\n\t  var mash = function mash(data) {\n\t    data = data.toString();\n\t    for (var i = 0; i < data.length; i++) {\n\t      n += data.charCodeAt(i);\n\t      var h = 0.02519603282416938 * n;\n\t      n = h >>> 0;\n\t      h -= n;\n\t      h *= n;\n\t      n = h >>> 0;\n\t      h -= n;\n\t      n += h * 0x100000000; // 2^32\n\t    }\n\t    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n\t  };\n\t\n\t  mash.version = 'Mash 0.9';\n\t  return mash;\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = Invwk;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//Webkit2's crazy invertible mapping generator\n\t//Based on Andy Hyland's implementation: https://bocoup.com/weblog/random-numbers\n\tfunction Invwk() {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    var mash = (0, _Mash2.default)();\n\t    var max = 0x100000000; // 2 ^ 32\n\t\n\t    if (args.length == 0) {\n\t        args = [+new Date()];\n\t    }\n\t\n\t    var seed = mash(args.join('')) * max | 0;\n\t    // var seed = (Math.random() * max) | 0;\n\t\n\t    var random = function random() {\n\t        seed += seed * seed | 5;\n\t        // Shift off bits, discarding the sign. Discarding the sign is\n\t        // important because OR w/ 5 can give us + or - numbers.\n\t        return (seed >>> 32) * 2.3283064365386963e-10;\n\t    };\n\t\n\t    random.uint32 = function () {\n\t        seed += seed * seed | 5;\n\t        // Shift off bits, discarding the sign. Discarding the sign is\n\t        // important because OR w/ 5 can give us + or - numbers.\n\t        return seed >>> 0;\n\t    };\n\t    random.fract53 = function () {\n\t        return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n\t    };\n\t    random.version = 'Alea 0.9';\n\t    random.args = args;\n\t\n\t    return random;\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Alea;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction Alea() {\n\t  // Johannes Baagøe <baagoe@baagoe.com>, 2010\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var s0 = 0;\n\t  var s1 = 0;\n\t  var s2 = 0;\n\t  var c = 1;\n\t\n\t  if (args.length == 0) {\n\t    args = [+new Date()];\n\t  }\n\t  var mash = (0, _Mash2.default)();\n\t  s0 = mash(' ');\n\t  s1 = mash(' ');\n\t  s2 = mash(' ');\n\t\n\t  for (var i = 0; i < args.length; i++) {\n\t    s0 -= mash(args[i]);\n\t    if (s0 < 0) {\n\t      s0 += 1;\n\t    }\n\t    s1 -= mash(args[i]);\n\t    if (s1 < 0) {\n\t      s1 += 1;\n\t    }\n\t    s2 -= mash(args[i]);\n\t    if (s2 < 0) {\n\t      s2 += 1;\n\t    }\n\t  }\n\t  mash = null;\n\t\n\t  var random = function random() {\n\t    var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n\t    s0 = s1;\n\t    s1 = s2;\n\t    return s2 = t - (c = t | 0);\n\t  };\n\t  random.uint32 = function () {\n\t    return random() * 0x100000000; // 2^32\n\t  };\n\t  random.fract53 = function () {\n\t    return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  random.version = 'Alea 0.9';\n\t  random.args = args;\n\t  return random;\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = KISS07;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction KISS07() {\n\t  // George Marsaglia, 2007-06-23\n\t  //http://groups.google.com/group/comp.lang.fortran/msg/6edb8ad6ec5421a5\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var x = 123456789;\n\t  var y = 362436069;\n\t  var z = 21288629;\n\t  var w = 14921776;\n\t  var c = 0;\n\t\n\t  if (args.length == 0) {\n\t    args = [+new Date()];\n\t  }\n\t  var mash = (0, _Mash2.default)();\n\t  for (var i = 0; i < args.length; i++) {\n\t    x ^= mash(args[i]) * 0x100000000; // 2^32\n\t    y ^= mash(args[i]) * 0x100000000;\n\t    z ^= mash(args[i]) * 0x100000000;\n\t    w ^= mash(args[i]) * 0x100000000;\n\t  }\n\t  if (y === 0) {\n\t    y = 1;\n\t  }\n\t  c ^= z >>> 31;\n\t  z &= 0x7fffffff;\n\t  if (z % 7559 === 0) {\n\t    z++;\n\t  }\n\t  w &= 0x7fffffff;\n\t  if (w % 7559 === 0) {\n\t    w++;\n\t  }\n\t  mash = null;\n\t\n\t  var uint32 = function uint32() {\n\t    var t;\n\t\n\t    x += 545925293;\n\t    x >>>= 0;\n\t\n\t    y ^= y << 13;\n\t    y ^= y >>> 17;\n\t    y ^= y << 5;\n\t\n\t    t = z + w + c;\n\t    z = w;\n\t    c = t >>> 31;\n\t    w = t & 0x7fffffff;\n\t\n\t    return x + y + w >>> 0;\n\t  };\n\t\n\t  var random = function random() {\n\t    return uint32() * 2.3283064365386963e-10; // 2^-32\n\t  };\n\t  random.uint32 = uint32;\n\t  random.fract53 = function () {\n\t    return random() + (uint32() & 0x1fffff) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  random.args = args;\n\t  random.version = 'KISS07 0.9';\n\t\n\t  return random;\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Kybos;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction Kybos() {\n\t  // Johannes Baagøe <baagoe@baagoe.com>, 2010\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var s0 = 0;\n\t  var s1 = 0;\n\t  var s2 = 0;\n\t  var c = 1;\n\t  var s = [];\n\t  var k = 0;\n\t\n\t  var mash = (0, _Mash2.default)();\n\t  var s0 = mash(' ');\n\t  var s1 = mash(' ');\n\t  var s2 = mash(' ');\n\t  for (var j = 0; j < 8; j++) {\n\t    s[j] = mash(' ');\n\t  }\n\t\n\t  if (args.length == 0) {\n\t    args = [+new Date()];\n\t  }\n\t  for (var i = 0; i < args.length; i++) {\n\t    s0 -= mash(args[i]);\n\t    if (s0 < 0) {\n\t      s0 += 1;\n\t    }\n\t    s1 -= mash(args[i]);\n\t    if (s1 < 0) {\n\t      s1 += 1;\n\t    }\n\t    s2 -= mash(args[i]);\n\t    if (s2 < 0) {\n\t      s2 += 1;\n\t    }\n\t    for (var j = 0; j < 8; j++) {\n\t      s[j] -= mash(args[i]);\n\t      if (s[j] < 0) {\n\t        s[j] += 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  var random = function random() {\n\t    var a = 2091639;\n\t    k = s[k] * 8 | 0;\n\t    var r = s[k];\n\t    var t = a * s0 + c * 2.3283064365386963e-10; // 2^-32\n\t    s0 = s1;\n\t    s1 = s2;\n\t    s2 = t - (c = t | 0);\n\t    s[k] -= s2;\n\t    if (s[k] < 0) {\n\t      s[k] += 1;\n\t    }\n\t    return r;\n\t  };\n\t  random.uint32 = function () {\n\t    return random() * 0x100000000; // 2^32\n\t  };\n\t  random.fract53 = function () {\n\t    return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  random.addNoise = function () {\n\t    for (var i = arguments.length - 1; i >= 0; i--) {\n\t      for (j = 0; j < 8; j++) {\n\t        s[j] -= mash(arguments[i]);\n\t        if (s[j] < 0) {\n\t          s[j] += 1;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  random.version = 'Kybos 0.9';\n\t  random.args = args;\n\t  return random;\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = LFib;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction LFib() {\n\t  // Johannes Baagøe <baagoe@baagoe.com>, 2010\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var k0 = 255,\n\t      k1 = 52,\n\t      k2 = 0;\n\t  var s = [];\n\t\n\t  var mash = (0, _Mash2.default)();\n\t  if (args.length === 0) {\n\t    args = [+new Date()];\n\t  }\n\t  for (var j = 0; j < 256; j++) {\n\t    s[j] = mash(' ');\n\t    s[j] -= mash(' ') * 4.76837158203125e-7; // 2^-21\n\t    if (s[j] < 0) {\n\t      s[j] += 1;\n\t    }\n\t  }\n\t  for (var i = 0; i < args.length; i++) {\n\t    for (var j = 0; j < 256; j++) {\n\t      s[j] -= mash(args[i]);\n\t      s[j] -= mash(args[i]) * 4.76837158203125e-7; // 2^-21\n\t      if (s[j] < 0) {\n\t        s[j] += 1;\n\t      }\n\t    }\n\t  }\n\t  mash = null;\n\t\n\t  var random = function random() {\n\t    k0 = k0 + 1 & 255;\n\t    k1 = k1 + 1 & 255;\n\t    k2 = k2 + 1 & 255;\n\t\n\t    var x = s[k0] - s[k1];\n\t    if (x < 0.0) {\n\t      x += 1.0;\n\t    }\n\t    x -= s[k2];\n\t    if (x < 0.0) {\n\t      x += 1.0;\n\t    }\n\t    return s[k0] = x;\n\t  };\n\t\n\t  random.uint32 = function () {\n\t    return random() * 0x100000000 >>> 0; // 2^32\n\t  };\n\t  random.fract53 = random;\n\t  random.version = 'LFib 0.9';\n\t  random.args = args;\n\t\n\t  return random;\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = LFIB4;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction LFIB4() {\n\t  // George Marsaglia's LFIB4,\n\t  //http://groups.google.com/group/sci.crypt/msg/eb4ddde782b17051\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var k0 = 0,\n\t      k1 = 58,\n\t      k2 = 119,\n\t      k3 = 178;\n\t\n\t  var s = [];\n\t\n\t  var mash = (0, _Mash2.default)();\n\t  if (args.length === 0) {\n\t    args = [+new Date()];\n\t  }\n\t  for (var j = 0; j < 256; j++) {\n\t    s[j] = mash(' ');\n\t    s[j] -= mash(' ') * 4.76837158203125e-7; // 2^-21\n\t    if (s[j] < 0) {\n\t      s[j] += 1;\n\t    }\n\t  }\n\t  for (var i = 0; i < args.length; i++) {\n\t    for (var j = 0; j < 256; j++) {\n\t      s[j] -= mash(args[i]);\n\t      s[j] -= mash(args[i]) * 4.76837158203125e-7; // 2^-21\n\t      if (s[j] < 0) {\n\t        s[j] += 1;\n\t      }\n\t    }\n\t  }\n\t  mash = null;\n\t\n\t  var random = function random() {\n\t    var x;\n\t\n\t    k0 = k0 + 1 & 255;\n\t    k1 = k1 + 1 & 255;\n\t    k2 = k2 + 1 & 255;\n\t    k3 = k3 + 1 & 255;\n\t\n\t    x = s[k0] - s[k1];\n\t    if (x < 0) {\n\t      x += 1;\n\t    }\n\t    x -= s[k2];\n\t    if (x < 0) {\n\t      x += 1;\n\t    }\n\t    x -= s[k3];\n\t    if (x < 0) {\n\t      x += 1;\n\t    }\n\t\n\t    return s[k0] = x;\n\t  };\n\t\n\t  random.uint32 = function () {\n\t    return random() * 0x100000000 >>> 0; // 2^32\n\t  };\n\t  random.fract53 = random;\n\t  random.version = 'LFIB4 0.9';\n\t  random.args = args;\n\t\n\t  return random;\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = MRG32k3a;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction MRG32k3a() {\n\t  // Copyright (c) 1998, 2002 Pierre L'Ecuyer, DIRO, Université de Montréal.\n\t  // http://www.iro.umontreal.ca/~lecuyer/\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var m1 = 4294967087;\n\t  var m2 = 4294944443;\n\t  var s10 = 12345,\n\t      s11 = 12345,\n\t      s12 = 123,\n\t      s20 = 12345,\n\t      s21 = 12345,\n\t      s22 = 123;\n\t\n\t  if (args.length === 0) {\n\t    args = [+new Date()];\n\t  }\n\t  var mash = (0, _Mash2.default)();\n\t  for (var i = 0; i < args.length; i++) {\n\t    s10 += mash(args[i]) * 0x100000000; // 2 ^ 32\n\t    s11 += mash(args[i]) * 0x100000000;\n\t    s12 += mash(args[i]) * 0x100000000;\n\t    s20 += mash(args[i]) * 0x100000000;\n\t    s21 += mash(args[i]) * 0x100000000;\n\t    s22 += mash(args[i]) * 0x100000000;\n\t  }\n\t  s10 %= m1;\n\t  s11 %= m1;\n\t  s12 %= m1;\n\t  s20 %= m2;\n\t  s21 %= m2;\n\t  s22 %= m2;\n\t  mash = null;\n\t\n\t  var uint32 = function uint32() {\n\t    var m1 = 4294967087;\n\t    var m2 = 4294944443;\n\t    var a12 = 1403580;\n\t    var a13n = 810728;\n\t    var a21 = 527612;\n\t    var a23n = 1370589;\n\t\n\t    var k, p1, p2;\n\t\n\t    /* Component 1 */\n\t    p1 = a12 * s11 - a13n * s10;\n\t    k = p1 / m1 | 0;\n\t    p1 -= k * m1;\n\t    if (p1 < 0) p1 += m1;\n\t    s10 = s11;\n\t    s11 = s12;\n\t    s12 = p1;\n\t\n\t    /* Component 2 */\n\t    p2 = a21 * s22 - a23n * s20;\n\t    k = p2 / m2 | 0;\n\t    p2 -= k * m2;\n\t    if (p2 < 0) p2 += m2;\n\t    s20 = s21;\n\t    s21 = s22;\n\t    s22 = p2;\n\t\n\t    /* Combination */\n\t    if (p1 <= p2) return p1 - p2 + m1;else return p1 - p2;\n\t  };\n\t\n\t  var random = function random() {\n\t    return uint32() * 2.3283064365386963e-10; // 2^-32\n\t  };\n\t  random.uint32 = uint32;\n\t  random.fract53 = function () {\n\t    return random() + (uint32() & 0x1fffff) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  random.version = 'MRG32k3a 0.9';\n\t  random.args = args;\n\t\n\t  return random;\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = Xorshift03;\n\t\n\tvar _Mash = __webpack_require__(10);\n\t\n\tvar _Mash2 = _interopRequireDefault(_Mash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// From http://baagoe.com/en/RandomMusings/javascript/\n\tfunction Xorshift03() {\n\t  // George Marsaglia, 13 May 2003\n\t  // http://groups.google.com/group/comp.lang.c/msg/e3c4ea1169e463ae\n\t  var args = Array.prototype.slice.call(arguments);\n\t  var x = 123456789,\n\t      y = 362436069,\n\t      z = 521288629,\n\t      w = 88675123,\n\t      v = 886756453;\n\t\n\t  if (args.length == 0) {\n\t    args = [+new Date()];\n\t  }\n\t  var mash = (0, _Mash2.default)();\n\t  for (var i = 0; i < args.length; i++) {\n\t    x ^= mash(args[i]) * 0x100000000; // 2^32\n\t    y ^= mash(args[i]) * 0x100000000;\n\t    z ^= mash(args[i]) * 0x100000000;\n\t    v ^= mash(args[i]) * 0x100000000;\n\t    w ^= mash(args[i]) * 0x100000000;\n\t  }\n\t  mash = null;\n\t\n\t  var uint32 = function uint32() {\n\t    var t = (x ^ x >>> 7) >>> 0;\n\t    x = y;\n\t    y = z;\n\t    z = w;\n\t    w = v;\n\t    v = v ^ v << 6 ^ (t ^ t << 13) >>> 0;\n\t    return (y + y + 1) * v >>> 0;\n\t  };\n\t\n\t  var random = function random() {\n\t    return uint32() * 2.3283064365386963e-10; // 2^-32\n\t  };\n\t  random.uint32 = uint32;\n\t  random.fract53 = function () {\n\t    return random() + (uint32() & 0x1fffff) * 1.1102230246251565e-16; // 2^-53\n\t  };\n\t  random.version = 'Xorshift03 0.9';\n\t  random.args = args;\n\t  return random;\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = renderHistogram;\n\t\n\tvar _d = __webpack_require__(20);\n\t\n\tvar d3 = _interopRequireWildcard(_d);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction renderHistogram(id, data) {\n\t\n\t    var formatCount = d3.format(\",.0f\");\n\t\n\t    var svg = d3.select(id),\n\t        margin = { top: 10, right: 30, bottom: 30, left: 30 },\n\t        width = +svg.attr(\"width\") - margin.left - margin.right,\n\t        height = +svg.attr(\"height\") - margin.top - margin.bottom,\n\t        g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t\n\t    var x = d3.scaleLinear().rangeRound([0, width]);\n\t\n\t    var bins = d3.histogram().domain(x.domain()).thresholds(x.ticks(20))(data);\n\t\n\t    var y = d3.scaleLinear().domain([0, d3.max(bins, function (d) {\n\t        return d.length;\n\t    })]).range([height, 0]);\n\t\n\t    var bar = g.selectAll(\".bar\").data(bins).enter().append(\"g\").attr(\"class\", \"bar\").attr(\"transform\", function (d) {\n\t        return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\";\n\t    });\n\t\n\t    bar.append(\"rect\").attr(\"x\", 1).attr(\"width\", x(bins[0].x1) - x(bins[0].x0) - 1).attr(\"height\", function (d) {\n\t        return height - y(d.length);\n\t    });\n\t\n\t    bar.append(\"text\").attr(\"dy\", \".75em\").attr(\"y\", 6).attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2).attr(\"text-anchor\", \"middle\").text(function (d) {\n\t        return formatCount(d.length);\n\t    });\n\t\n\t    g.append(\"g\").attr(\"class\", \"axis axis--x\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\n\t}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\tvar version = \"4.4.0\";\n\t\n\tvar ascending = function(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t};\n\t\n\tvar bisector = function(compare) {\n\t  if (compare.length === 1) compare = ascendingComparator(compare);\n\t  return {\n\t    left: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) < 0) lo = mid + 1;\n\t        else hi = mid;\n\t      }\n\t      return lo;\n\t    },\n\t    right: function(a, x, lo, hi) {\n\t      if (lo == null) lo = 0;\n\t      if (hi == null) hi = a.length;\n\t      while (lo < hi) {\n\t        var mid = lo + hi >>> 1;\n\t        if (compare(a[mid], x) > 0) hi = mid;\n\t        else lo = mid + 1;\n\t      }\n\t      return lo;\n\t    }\n\t  };\n\t};\n\t\n\tfunction ascendingComparator(f) {\n\t  return function(d, x) {\n\t    return ascending(f(d), x);\n\t  };\n\t}\n\t\n\tvar ascendingBisect = bisector(ascending);\n\tvar bisectRight = ascendingBisect.right;\n\tvar bisectLeft = ascendingBisect.left;\n\t\n\tvar descending = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar number = function(x) {\n\t  return x === null ? NaN : +x;\n\t};\n\t\n\tvar variance = function(array, f) {\n\t  var n = array.length,\n\t      m = 0,\n\t      a,\n\t      d,\n\t      s = 0,\n\t      i = -1,\n\t      j = 0;\n\t\n\t  if (f == null) {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(array[i]))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) {\n\t      if (!isNaN(a = number(f(array[i], i, array)))) {\n\t        d = a - m;\n\t        m += d / ++j;\n\t        s += d * (a - m);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (j > 1) return s / (j - 1);\n\t};\n\t\n\tvar deviation = function(array, f) {\n\t  var v = variance(array, f);\n\t  return v ? Math.sqrt(v) : v;\n\t};\n\t\n\tvar extent = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b,\n\t      c;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t      if (a > b) a = b;\n\t      if (c < b) c = b;\n\t    }\n\t  }\n\t\n\t  return [a, c];\n\t};\n\t\n\tvar array = Array.prototype;\n\t\n\tvar slice = array.slice;\n\tvar map = array.map;\n\t\n\tvar constant$1 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar identity = function(x) {\n\t  return x;\n\t};\n\t\n\tvar range = function(start, stop, step) {\n\t  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t  var i = -1,\n\t      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t      range = new Array(n);\n\t\n\t  while (++i < n) {\n\t    range[i] = start + i * step;\n\t  }\n\t\n\t  return range;\n\t};\n\t\n\tvar e10 = Math.sqrt(50);\n\tvar e5 = Math.sqrt(10);\n\tvar e2 = Math.sqrt(2);\n\t\n\tvar ticks = function(start, stop, count) {\n\t  var step = tickStep(start, stop, count);\n\t  return range(\n\t    Math.ceil(start / step) * step,\n\t    Math.floor(stop / step) * step + step / 2, // inclusive\n\t    step\n\t  );\n\t};\n\t\n\tfunction tickStep(start, stop, count) {\n\t  var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t      error = step0 / step1;\n\t  if (error >= e10) step1 *= 10;\n\t  else if (error >= e5) step1 *= 5;\n\t  else if (error >= e2) step1 *= 2;\n\t  return stop < start ? -step1 : step1;\n\t}\n\t\n\tvar sturges = function(values) {\n\t  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t};\n\t\n\tvar histogram = function() {\n\t  var value = identity,\n\t      domain = extent,\n\t      threshold = sturges;\n\t\n\t  function histogram(data) {\n\t    var i,\n\t        n = data.length,\n\t        x,\n\t        values = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      values[i] = value(data[i], i, data);\n\t    }\n\t\n\t    var xz = domain(values),\n\t        x0 = xz[0],\n\t        x1 = xz[1],\n\t        tz = threshold(values, x0, x1);\n\t\n\t    // Convert number of thresholds into uniform thresholds.\n\t    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t    // Remove any thresholds outside the domain.\n\t    var m = tz.length;\n\t    while (tz[0] <= x0) tz.shift(), --m;\n\t    while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t    var bins = new Array(m + 1),\n\t        bin;\n\t\n\t    // Initialize bins.\n\t    for (i = 0; i <= m; ++i) {\n\t      bin = bins[i] = [];\n\t      bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t      bin.x1 = i < m ? tz[i] : x1;\n\t    }\n\t\n\t    // Assign data to bins by value, ignoring any outside the domain.\n\t    for (i = 0; i < n; ++i) {\n\t      x = values[i];\n\t      if (x0 <= x && x <= x1) {\n\t        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t      }\n\t    }\n\t\n\t    return bins;\n\t  }\n\t\n\t  histogram.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n\t  };\n\t\n\t  histogram.domain = function(_) {\n\t    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n\t  };\n\t\n\t  histogram.thresholds = function(_) {\n\t    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n\t  };\n\t\n\t  return histogram;\n\t};\n\t\n\tvar threshold = function(array, p, f) {\n\t  if (f == null) f = number;\n\t  if (!(n = array.length)) return;\n\t  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t  if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t  var n,\n\t      h = (n - 1) * p,\n\t      i = Math.floor(h),\n\t      a = +f(array[i], i, array),\n\t      b = +f(array[i + 1], i + 1, array);\n\t  return a + (b - a) * (h - i);\n\t};\n\t\n\tvar freedmanDiaconis = function(values, min, max) {\n\t  values = map.call(values, number).sort(ascending);\n\t  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar scott = function(values, min, max) {\n\t  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t};\n\t\n\tvar max = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar mean = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1,\n\t      j = n;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t  }\n\t\n\t  if (j) return s / j;\n\t};\n\t\n\tvar median = function(array, f) {\n\t  var numbers = [],\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t  }\n\t\n\t  return threshold(numbers.sort(ascending), 0.5);\n\t};\n\t\n\tvar merge = function(arrays) {\n\t  var n = arrays.length,\n\t      m,\n\t      i = -1,\n\t      j = 0,\n\t      merged,\n\t      array;\n\t\n\t  while (++i < n) j += arrays[i].length;\n\t  merged = new Array(j);\n\t\n\t  while (--n >= 0) {\n\t    array = arrays[n];\n\t    m = array.length;\n\t    while (--m >= 0) {\n\t      merged[--j] = array[m];\n\t    }\n\t  }\n\t\n\t  return merged;\n\t};\n\t\n\tvar min = function(array, f) {\n\t  var i = -1,\n\t      n = array.length,\n\t      a,\n\t      b;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t  }\n\t\n\t  return a;\n\t};\n\t\n\tvar pairs = function(array) {\n\t  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t  while (i < n) pairs[i] = [p, p = array[++i]];\n\t  return pairs;\n\t};\n\t\n\tvar permute = function(array, indexes) {\n\t  var i = indexes.length, permutes = new Array(i);\n\t  while (i--) permutes[i] = array[indexes[i]];\n\t  return permutes;\n\t};\n\t\n\tvar scan = function(array, compare) {\n\t  if (!(n = array.length)) return;\n\t  var i = 0,\n\t      n,\n\t      j = 0,\n\t      xi,\n\t      xj = array[j];\n\t\n\t  if (!compare) compare = ascending;\n\t\n\t  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t  if (compare(xj, xj) === 0) return j;\n\t};\n\t\n\tvar shuffle = function(array, i0, i1) {\n\t  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t      t,\n\t      i;\n\t\n\t  while (m) {\n\t    i = Math.random() * m-- | 0;\n\t    t = array[m + i0];\n\t    array[m + i0] = array[i + i0];\n\t    array[i + i0] = t;\n\t  }\n\t\n\t  return array;\n\t};\n\t\n\tvar sum = function(array, f) {\n\t  var s = 0,\n\t      n = array.length,\n\t      a,\n\t      i = -1;\n\t\n\t  if (f == null) {\n\t    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t  }\n\t\n\t  else {\n\t    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t  }\n\t\n\t  return s;\n\t};\n\t\n\tvar transpose = function(matrix) {\n\t  if (!(n = matrix.length)) return [];\n\t  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t      row[j] = matrix[j][i];\n\t    }\n\t  }\n\t  return transpose;\n\t};\n\t\n\tfunction length(d) {\n\t  return d.length;\n\t}\n\t\n\tvar zip = function() {\n\t  return transpose(arguments);\n\t};\n\t\n\tvar prefix = \"$\";\n\t\n\tfunction Map() {}\n\t\n\tMap.prototype = map$1.prototype = {\n\t  constructor: Map,\n\t  has: function(key) {\n\t    return (prefix + key) in this;\n\t  },\n\t  get: function(key) {\n\t    return this[prefix + key];\n\t  },\n\t  set: function(key, value) {\n\t    this[prefix + key] = value;\n\t    return this;\n\t  },\n\t  remove: function(key) {\n\t    var property = prefix + key;\n\t    return property in this && delete this[property];\n\t  },\n\t  clear: function() {\n\t    for (var property in this) if (property[0] === prefix) delete this[property];\n\t  },\n\t  keys: function() {\n\t    var keys = [];\n\t    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t    return keys;\n\t  },\n\t  values: function() {\n\t    var values = [];\n\t    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t    return values;\n\t  },\n\t  entries: function() {\n\t    var entries = [];\n\t    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t    return entries;\n\t  },\n\t  size: function() {\n\t    var size = 0;\n\t    for (var property in this) if (property[0] === prefix) ++size;\n\t    return size;\n\t  },\n\t  empty: function() {\n\t    for (var property in this) if (property[0] === prefix) return false;\n\t    return true;\n\t  },\n\t  each: function(f) {\n\t    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t  }\n\t};\n\t\n\tfunction map$1(object, f) {\n\t  var map = new Map;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t  // Index array by numeric index or specified key function.\n\t  else if (Array.isArray(object)) {\n\t    var i = -1,\n\t        n = object.length,\n\t        o;\n\t\n\t    if (f == null) while (++i < n) map.set(i, object[i]);\n\t    else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t  }\n\t\n\t  // Convert object to map.\n\t  else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t  return map;\n\t}\n\t\n\tvar nest = function() {\n\t  var keys = [],\n\t      sortKeys = [],\n\t      sortValues,\n\t      rollup,\n\t      nest;\n\t\n\t  function apply(array, depth, createResult, setResult) {\n\t    if (depth >= keys.length) return rollup != null\n\t        ? rollup(array) : (sortValues != null\n\t        ? array.sort(sortValues)\n\t        : array);\n\t\n\t    var i = -1,\n\t        n = array.length,\n\t        key = keys[depth++],\n\t        keyValue,\n\t        value,\n\t        valuesByKey = map$1(),\n\t        values,\n\t        result = createResult();\n\t\n\t    while (++i < n) {\n\t      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t        values.push(value);\n\t      } else {\n\t        valuesByKey.set(keyValue, [value]);\n\t      }\n\t    }\n\t\n\t    valuesByKey.each(function(values, key) {\n\t      setResult(result, key, apply(values, depth, createResult, setResult));\n\t    });\n\t\n\t    return result;\n\t  }\n\t\n\t  function entries(map, depth) {\n\t    if (++depth > keys.length) return map;\n\t    var array, sortKey = sortKeys[depth - 1];\n\t    if (rollup != null && depth >= keys.length) array = map.entries();\n\t    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t  }\n\t\n\t  return nest = {\n\t    object: function(array) { return apply(array, 0, createObject, setObject); },\n\t    map: function(array) { return apply(array, 0, createMap, setMap); },\n\t    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t    key: function(d) { keys.push(d); return nest; },\n\t    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t    sortValues: function(order) { sortValues = order; return nest; },\n\t    rollup: function(f) { rollup = f; return nest; }\n\t  };\n\t};\n\t\n\tfunction createObject() {\n\t  return {};\n\t}\n\t\n\tfunction setObject(object, key, value) {\n\t  object[key] = value;\n\t}\n\t\n\tfunction createMap() {\n\t  return map$1();\n\t}\n\t\n\tfunction setMap(map, key, value) {\n\t  map.set(key, value);\n\t}\n\t\n\tfunction Set() {}\n\t\n\tvar proto = map$1.prototype;\n\t\n\tSet.prototype = set.prototype = {\n\t  constructor: Set,\n\t  has: proto.has,\n\t  add: function(value) {\n\t    value += \"\";\n\t    this[prefix + value] = value;\n\t    return this;\n\t  },\n\t  remove: proto.remove,\n\t  clear: proto.clear,\n\t  values: proto.keys,\n\t  size: proto.size,\n\t  empty: proto.empty,\n\t  each: proto.each\n\t};\n\t\n\tfunction set(object, f) {\n\t  var set = new Set;\n\t\n\t  // Copy constructor.\n\t  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t  // Otherwise, assume it’s an array.\n\t  else if (object) {\n\t    var i = -1, n = object.length;\n\t    if (f == null) while (++i < n) set.add(object[i]);\n\t    else while (++i < n) set.add(f(object[i], i, object));\n\t  }\n\t\n\t  return set;\n\t}\n\t\n\tvar keys = function(map) {\n\t  var keys = [];\n\t  for (var key in map) keys.push(key);\n\t  return keys;\n\t};\n\t\n\tvar values = function(map) {\n\t  var values = [];\n\t  for (var key in map) values.push(map[key]);\n\t  return values;\n\t};\n\t\n\tvar entries = function(map) {\n\t  var entries = [];\n\t  for (var key in map) entries.push({key: key, value: map[key]});\n\t  return entries;\n\t};\n\t\n\tvar uniform = function(min, max) {\n\t  min = min == null ? 0 : +min;\n\t  max = max == null ? 1 : +max;\n\t  if (arguments.length === 1) max = min, min = 0;\n\t  else max -= min;\n\t  return function() {\n\t    return Math.random() * max + min;\n\t  };\n\t};\n\t\n\tvar normal = function(mu, sigma) {\n\t  var x, r;\n\t  mu = mu == null ? 0 : +mu;\n\t  sigma = sigma == null ? 1 : +sigma;\n\t  return function() {\n\t    var y;\n\t\n\t    // If available, use the second previously-generated uniform random.\n\t    if (x != null) y = x, x = null;\n\t\n\t    // Otherwise, generate a new x and y.\n\t    else do {\n\t      x = Math.random() * 2 - 1;\n\t      y = Math.random() * 2 - 1;\n\t      r = x * x + y * y;\n\t    } while (!r || r > 1);\n\t\n\t    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t  };\n\t};\n\t\n\tvar logNormal = function() {\n\t  var randomNormal = normal.apply(this, arguments);\n\t  return function() {\n\t    return Math.exp(randomNormal());\n\t  };\n\t};\n\t\n\tvar irwinHall = function(n) {\n\t  return function() {\n\t    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t    return sum;\n\t  };\n\t};\n\t\n\tvar bates = function(n) {\n\t  var randomIrwinHall = irwinHall(n);\n\t  return function() {\n\t    return randomIrwinHall() / n;\n\t  };\n\t};\n\t\n\tvar exponential = function(lambda) {\n\t  return function() {\n\t    return -Math.log(1 - Math.random()) / lambda;\n\t  };\n\t};\n\t\n\tfunction linear(t) {\n\t  return +t;\n\t}\n\t\n\tfunction quadIn(t) {\n\t  return t * t;\n\t}\n\t\n\tfunction quadOut(t) {\n\t  return t * (2 - t);\n\t}\n\t\n\tfunction quadInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t}\n\t\n\tfunction cubicIn(t) {\n\t  return t * t * t;\n\t}\n\t\n\tfunction cubicOut(t) {\n\t  return --t * t * t + 1;\n\t}\n\t\n\tfunction cubicInOut(t) {\n\t  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t}\n\t\n\tvar exponent = 3;\n\t\n\tvar polyIn = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyIn(t) {\n\t    return Math.pow(t, e);\n\t  }\n\t\n\t  polyIn.exponent = custom;\n\t\n\t  return polyIn;\n\t})(exponent);\n\t\n\tvar polyOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyOut(t) {\n\t    return 1 - Math.pow(1 - t, e);\n\t  }\n\t\n\t  polyOut.exponent = custom;\n\t\n\t  return polyOut;\n\t})(exponent);\n\t\n\tvar polyInOut = (function custom(e) {\n\t  e = +e;\n\t\n\t  function polyInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t  }\n\t\n\t  polyInOut.exponent = custom;\n\t\n\t  return polyInOut;\n\t})(exponent);\n\t\n\tvar pi = Math.PI;\n\tvar halfPi = pi / 2;\n\t\n\tfunction sinIn(t) {\n\t  return 1 - Math.cos(t * halfPi);\n\t}\n\t\n\tfunction sinOut(t) {\n\t  return Math.sin(t * halfPi);\n\t}\n\t\n\tfunction sinInOut(t) {\n\t  return (1 - Math.cos(pi * t)) / 2;\n\t}\n\t\n\tfunction expIn(t) {\n\t  return Math.pow(2, 10 * t - 10);\n\t}\n\t\n\tfunction expOut(t) {\n\t  return 1 - Math.pow(2, -10 * t);\n\t}\n\t\n\tfunction expInOut(t) {\n\t  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t}\n\t\n\tfunction circleIn(t) {\n\t  return 1 - Math.sqrt(1 - t * t);\n\t}\n\t\n\tfunction circleOut(t) {\n\t  return Math.sqrt(1 - --t * t);\n\t}\n\t\n\tfunction circleInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t}\n\t\n\tvar b1 = 4 / 11;\n\tvar b2 = 6 / 11;\n\tvar b3 = 8 / 11;\n\tvar b4 = 3 / 4;\n\tvar b5 = 9 / 11;\n\tvar b6 = 10 / 11;\n\tvar b7 = 15 / 16;\n\tvar b8 = 21 / 22;\n\tvar b9 = 63 / 64;\n\tvar b0 = 1 / b1 / b1;\n\t\n\tfunction bounceIn(t) {\n\t  return 1 - bounceOut(1 - t);\n\t}\n\t\n\tfunction bounceOut(t) {\n\t  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t}\n\t\n\tfunction bounceInOut(t) {\n\t  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t}\n\t\n\tvar overshoot = 1.70158;\n\t\n\tvar backIn = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backIn(t) {\n\t    return t * t * ((s + 1) * t - s);\n\t  }\n\t\n\t  backIn.overshoot = custom;\n\t\n\t  return backIn;\n\t})(overshoot);\n\t\n\tvar backOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backOut(t) {\n\t    return --t * t * ((s + 1) * t + s) + 1;\n\t  }\n\t\n\t  backOut.overshoot = custom;\n\t\n\t  return backOut;\n\t})(overshoot);\n\t\n\tvar backInOut = (function custom(s) {\n\t  s = +s;\n\t\n\t  function backInOut(t) {\n\t    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t  }\n\t\n\t  backInOut.overshoot = custom;\n\t\n\t  return backInOut;\n\t})(overshoot);\n\t\n\tvar tau = 2 * Math.PI;\n\tvar amplitude = 1;\n\tvar period = 0.3;\n\t\n\tvar elasticIn = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticIn(t) {\n\t    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t  }\n\t\n\t  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticIn;\n\t})(amplitude, period);\n\t\n\tvar elasticOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticOut(t) {\n\t    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t  }\n\t\n\t  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticOut;\n\t})(amplitude, period);\n\t\n\tvar elasticInOut = (function custom(a, p) {\n\t  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t  function elasticInOut(t) {\n\t    return ((t = t * 2 - 1) < 0\n\t        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t  }\n\t\n\t  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t  elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t  return elasticInOut;\n\t})(amplitude, period);\n\t\n\tvar area = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      a,\n\t      b = polygon[n - 1],\n\t      area = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    area += a[1] * b[0] - a[0] * b[1];\n\t  }\n\t\n\t  return area / 2;\n\t};\n\t\n\tvar centroid = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      x = 0,\n\t      y = 0,\n\t      a,\n\t      b = polygon[n - 1],\n\t      c,\n\t      k = 0;\n\t\n\t  while (++i < n) {\n\t    a = b;\n\t    b = polygon[i];\n\t    k += c = a[0] * b[1] - b[0] * a[1];\n\t    x += (a[0] + b[0]) * c;\n\t    y += (a[1] + b[1]) * c;\n\t  }\n\t\n\t  return k *= 3, [x / k, y / k];\n\t};\n\t\n\t// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t// negative if clockwise, and zero if the points are collinear.\n\tvar cross = function(a, b, c) {\n\t  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t};\n\t\n\tfunction lexicographicOrder(a, b) {\n\t  return a[0] - b[0] || a[1] - b[1];\n\t}\n\t\n\t// Computes the upper convex hull per the monotone chain algorithm.\n\t// Assumes points.length >= 3, is sorted by x, unique in y.\n\t// Returns an array of indices into points in left-to-right order.\n\tfunction computeUpperHullIndexes(points) {\n\t  var n = points.length,\n\t      indexes = [0, 1],\n\t      size = 2;\n\t\n\t  for (var i = 2; i < n; ++i) {\n\t    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t    indexes[size++] = i;\n\t  }\n\t\n\t  return indexes.slice(0, size); // remove popped points\n\t}\n\t\n\tvar hull = function(points) {\n\t  if ((n = points.length) < 3) return null;\n\t\n\t  var i,\n\t      n,\n\t      sortedPoints = new Array(n),\n\t      flippedPoints = new Array(n);\n\t\n\t  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t  sortedPoints.sort(lexicographicOrder);\n\t  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t  // Construct the hull polygon, removing possible duplicate endpoints.\n\t  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t      hull = [];\n\t\n\t  // Add upper hull in right-to-l order.\n\t  // Then add lower hull in left-to-right order.\n\t  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t  return hull;\n\t};\n\t\n\tvar contains = function(polygon, point) {\n\t  var n = polygon.length,\n\t      p = polygon[n - 1],\n\t      x = point[0], y = point[1],\n\t      x0 = p[0], y0 = p[1],\n\t      x1, y1,\n\t      inside = false;\n\t\n\t  for (var i = 0; i < n; ++i) {\n\t    p = polygon[i], x1 = p[0], y1 = p[1];\n\t    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t    x0 = x1, y0 = y1;\n\t  }\n\t\n\t  return inside;\n\t};\n\t\n\tvar length$1 = function(polygon) {\n\t  var i = -1,\n\t      n = polygon.length,\n\t      b = polygon[n - 1],\n\t      xa,\n\t      ya,\n\t      xb = b[0],\n\t      yb = b[1],\n\t      perimeter = 0;\n\t\n\t  while (++i < n) {\n\t    xa = xb;\n\t    ya = yb;\n\t    b = polygon[i];\n\t    xb = b[0];\n\t    yb = b[1];\n\t    xa -= xb;\n\t    ya -= yb;\n\t    perimeter += Math.sqrt(xa * xa + ya * ya);\n\t  }\n\t\n\t  return perimeter;\n\t};\n\t\n\tvar pi$1 = Math.PI;\n\tvar tau$1 = 2 * pi$1;\n\tvar epsilon = 1e-6;\n\tvar tauEpsilon = tau$1 - epsilon;\n\t\n\tfunction Path() {\n\t  this._x0 = this._y0 = // start of current subpath\n\t  this._x1 = this._y1 = null; // end of current subpath\n\t  this._ = \"\";\n\t}\n\t\n\tfunction path() {\n\t  return new Path;\n\t}\n\t\n\tPath.prototype = path.prototype = {\n\t  constructor: Path,\n\t  moveTo: function(x, y) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n\t  },\n\t  closePath: function() {\n\t    if (this._x1 !== null) {\n\t      this._x1 = this._x0, this._y1 = this._y0;\n\t      this._ += \"Z\";\n\t    }\n\t  },\n\t  lineTo: function(x, y) {\n\t    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  quadraticCurveTo: function(x1, y1, x, y) {\n\t    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n\t  },\n\t  arcTo: function(x1, y1, x2, y2, r) {\n\t    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t    var x0 = this._x1,\n\t        y0 = this._y1,\n\t        x21 = x2 - x1,\n\t        y21 = y2 - y1,\n\t        x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        l01_2 = x01 * x01 + y01 * y01;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x1,y1).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t    else if (!(l01_2 > epsilon)) {}\n\t\n\t    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t    // Or, is the radius zero? Line to (x1,y1).\n\t    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      var x20 = x2 - x0,\n\t          y20 = y2 - y0,\n\t          l21_2 = x21 * x21 + y21 * y21,\n\t          l20_2 = x20 * x20 + y20 * y20,\n\t          l21 = Math.sqrt(l21_2),\n\t          l01 = Math.sqrt(l01_2),\n\t          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t          t01 = l / l01,\n\t          t21 = l / l21;\n\t\n\t      // If the start tangent is not coincident with (x0,y0), line to.\n\t      if (Math.abs(t01 - 1) > epsilon) {\n\t        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n\t      }\n\t\n\t      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n\t    }\n\t  },\n\t  arc: function(x, y, r, a0, a1, ccw) {\n\t    x = +x, y = +y, r = +r;\n\t    var dx = r * Math.cos(a0),\n\t        dy = r * Math.sin(a0),\n\t        x0 = x + dx,\n\t        y0 = y + dy,\n\t        cw = 1 ^ ccw,\n\t        da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t    // Is the radius negative? Error.\n\t    if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t    // Is this path empty? Move to (x0,y0).\n\t    if (this._x1 === null) {\n\t      this._ += \"M\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t      this._ += \"L\" + x0 + \",\" + y0;\n\t    }\n\t\n\t    // Is this arc empty? We’re done.\n\t    if (!r) return;\n\t\n\t    // Is this a complete circle? Draw two arcs to complete the circle.\n\t    if (da > tauEpsilon) {\n\t      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n\t    }\n\t\n\t    // Otherwise, draw an arc!\n\t    else {\n\t      if (da < 0) da = da % tau$1 + tau$1;\n\t      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n\t    }\n\t  },\n\t  rect: function(x, y, w, h) {\n\t    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar tree_add = function(d) {\n\t  var x = +this._x.call(null, d),\n\t      y = +this._y.call(null, d);\n\t  return add(this.cover(x, y), x, y, d);\n\t};\n\t\n\tfunction add(tree, x, y, d) {\n\t  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t  var parent,\n\t      node = tree._root,\n\t      leaf = {data: d},\n\t      x0 = tree._x0,\n\t      y0 = tree._y0,\n\t      x1 = tree._x1,\n\t      y1 = tree._y1,\n\t      xm,\n\t      ym,\n\t      xp,\n\t      yp,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return tree._root = leaf, tree;\n\t\n\t  // Find the existing leaf for the new point, or add it.\n\t  while (node.length) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t  }\n\t\n\t  // Is the new point is exactly coincident with the existing point?\n\t  xp = +tree._x.call(null, node.data);\n\t  yp = +tree._y.call(null, node.data);\n\t  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t  // Otherwise, split the leaf node until the old and new point are separated.\n\t  do {\n\t    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t  return parent[j] = node, parent[i] = leaf, tree;\n\t}\n\t\n\tfunction addAll(data) {\n\t  var d, i, n = data.length,\n\t      x,\n\t      y,\n\t      xz = new Array(n),\n\t      yz = new Array(n),\n\t      x0 = Infinity,\n\t      y0 = Infinity,\n\t      x1 = -Infinity,\n\t      y1 = -Infinity;\n\t\n\t  // Compute the points and their extent.\n\t  for (i = 0; i < n; ++i) {\n\t    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t    xz[i] = x;\n\t    yz[i] = y;\n\t    if (x < x0) x0 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0) y0 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\t  // If there were no (valid) points, inherit the existing extent.\n\t  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t  // Expand the tree to cover the new points.\n\t  this.cover(x0, y0).cover(x1, y1);\n\t\n\t  // Add the new points.\n\t  for (i = 0; i < n; ++i) {\n\t    add(this, xz[i], yz[i], data[i]);\n\t  }\n\t\n\t  return this;\n\t}\n\t\n\tvar tree_cover = function(x, y) {\n\t  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t  var x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1;\n\t\n\t  // If the quadtree has no extent, initialize them.\n\t  // Integer extent are necessary so that if we later double the extent,\n\t  // the existing quadrant boundaries don’t change due to floating point error!\n\t  if (isNaN(x0)) {\n\t    x1 = (x0 = Math.floor(x)) + 1;\n\t    y1 = (y0 = Math.floor(y)) + 1;\n\t  }\n\t\n\t  // Otherwise, double repeatedly to cover.\n\t  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t    var z = x1 - x0,\n\t        node = this._root,\n\t        parent,\n\t        i;\n\t\n\t    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t      case 0: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t        break;\n\t      }\n\t      case 1: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t        break;\n\t      }\n\t      case 2: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t        break;\n\t      }\n\t      case 3: {\n\t        do parent = new Array(4), parent[i] = node, node = parent;\n\t        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (this._root && this._root.length) this._root = node;\n\t  }\n\t\n\t  // If the quadtree covers the point already, just return.\n\t  else return this;\n\t\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  return this;\n\t};\n\t\n\tvar tree_data = function() {\n\t  var data = [];\n\t  this.visit(function(node) {\n\t    if (!node.length) do data.push(node.data); while (node = node.next)\n\t  });\n\t  return data;\n\t};\n\t\n\tvar tree_extent = function(_) {\n\t  return arguments.length\n\t      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t};\n\t\n\tvar Quad = function(node, x0, y0, x1, y1) {\n\t  this.node = node;\n\t  this.x0 = x0;\n\t  this.y0 = y0;\n\t  this.x1 = x1;\n\t  this.y1 = y1;\n\t};\n\t\n\tvar tree_find = function(x, y, radius) {\n\t  var data,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1,\n\t      y1,\n\t      x2,\n\t      y2,\n\t      x3 = this._x1,\n\t      y3 = this._y1,\n\t      quads = [],\n\t      node = this._root,\n\t      q,\n\t      i;\n\t\n\t  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t  if (radius == null) radius = Infinity;\n\t  else {\n\t    x0 = x - radius, y0 = y - radius;\n\t    x3 = x + radius, y3 = y + radius;\n\t    radius *= radius;\n\t  }\n\t\n\t  while (q = quads.pop()) {\n\t\n\t    // Stop searching if this quadrant can’t contain a closer node.\n\t    if (!(node = q.node)\n\t        || (x1 = q.x0) > x3\n\t        || (y1 = q.y0) > y3\n\t        || (x2 = q.x1) < x0\n\t        || (y2 = q.y1) < y0) continue;\n\t\n\t    // Bisect the current quadrant.\n\t    if (node.length) {\n\t      var xm = (x1 + x2) / 2,\n\t          ym = (y1 + y2) / 2;\n\t\n\t      quads.push(\n\t        new Quad(node[3], xm, ym, x2, y2),\n\t        new Quad(node[2], x1, ym, xm, y2),\n\t        new Quad(node[1], xm, y1, x2, ym),\n\t        new Quad(node[0], x1, y1, xm, ym)\n\t      );\n\t\n\t      // Visit the closest quadrant first.\n\t      if (i = (y >= ym) << 1 | (x >= xm)) {\n\t        q = quads[quads.length - 1];\n\t        quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t        quads[quads.length - 1 - i] = q;\n\t      }\n\t    }\n\t\n\t    // Visit this point. (Visiting coincident points isn’t necessary!)\n\t    else {\n\t      var dx = x - +this._x.call(null, node.data),\n\t          dy = y - +this._y.call(null, node.data),\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 < radius) {\n\t        var d = Math.sqrt(radius = d2);\n\t        x0 = x - d, y0 = y - d;\n\t        x3 = x + d, y3 = y + d;\n\t        data = node.data;\n\t      }\n\t    }\n\t  }\n\t\n\t  return data;\n\t};\n\t\n\tvar tree_remove = function(d) {\n\t  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t  var parent,\n\t      node = this._root,\n\t      retainer,\n\t      previous,\n\t      next,\n\t      x0 = this._x0,\n\t      y0 = this._y0,\n\t      x1 = this._x1,\n\t      y1 = this._y1,\n\t      x,\n\t      y,\n\t      xm,\n\t      ym,\n\t      right,\n\t      bottom,\n\t      i,\n\t      j;\n\t\n\t  // If the tree is empty, initialize the root as a leaf.\n\t  if (!node) return this;\n\t\n\t  // Find the leaf node for the point.\n\t  // While descending, also retain the deepest parent with a non-removed sibling.\n\t  if (node.length) while (true) {\n\t    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t    if (!node.length) break;\n\t    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t  }\n\t\n\t  // Find the point to remove.\n\t  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t  if (next = node.next) delete node.next;\n\t\n\t  // If there are multiple coincident points, remove just the point.\n\t  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t  // If this is the root point, remove it.\n\t  if (!parent) return this._root = next, this;\n\t\n\t  // Remove this leaf.\n\t  next ? parent[i] = next : delete parent[i];\n\t\n\t  // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t      && !node.length) {\n\t    if (retainer) retainer[j] = node;\n\t    else this._root = node;\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction removeAll(data) {\n\t  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t  return this;\n\t}\n\t\n\tvar tree_root = function() {\n\t  return this._root;\n\t};\n\t\n\tvar tree_size = function() {\n\t  var size = 0;\n\t  this.visit(function(node) {\n\t    if (!node.length) do ++size; while (node = node.next)\n\t  });\n\t  return size;\n\t};\n\t\n\tvar tree_visit = function(callback) {\n\t  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar tree_visitAfter = function(callback) {\n\t  var quads = [], next = [], q;\n\t  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t  while (q = quads.pop()) {\n\t    var node = q.node;\n\t    if (node.length) {\n\t      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t    }\n\t    next.push(q);\n\t  }\n\t  while (q = next.pop()) {\n\t    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction defaultX(d) {\n\t  return d[0];\n\t}\n\t\n\tvar tree_x = function(_) {\n\t  return arguments.length ? (this._x = _, this) : this._x;\n\t};\n\t\n\tfunction defaultY(d) {\n\t  return d[1];\n\t}\n\t\n\tvar tree_y = function(_) {\n\t  return arguments.length ? (this._y = _, this) : this._y;\n\t};\n\t\n\tfunction quadtree(nodes, x, y) {\n\t  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t  return nodes == null ? tree : tree.addAll(nodes);\n\t}\n\t\n\tfunction Quadtree(x, y, x0, y0, x1, y1) {\n\t  this._x = x;\n\t  this._y = y;\n\t  this._x0 = x0;\n\t  this._y0 = y0;\n\t  this._x1 = x1;\n\t  this._y1 = y1;\n\t  this._root = undefined;\n\t}\n\t\n\tfunction leaf_copy(leaf) {\n\t  var copy = {data: leaf.data}, next = copy;\n\t  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t  return copy;\n\t}\n\t\n\tvar treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\ttreeProto.copy = function() {\n\t  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t      node = this._root,\n\t      nodes,\n\t      child;\n\t\n\t  if (!node) return copy;\n\t\n\t  if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t  nodes = [{source: node, target: copy._root = new Array(4)}];\n\t  while (node = nodes.pop()) {\n\t    for (var i = 0; i < 4; ++i) {\n\t      if (child = node.source[i]) {\n\t        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t        else node.target[i] = leaf_copy(child);\n\t      }\n\t    }\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\ttreeProto.add = tree_add;\n\ttreeProto.addAll = addAll;\n\ttreeProto.cover = tree_cover;\n\ttreeProto.data = tree_data;\n\ttreeProto.extent = tree_extent;\n\ttreeProto.find = tree_find;\n\ttreeProto.remove = tree_remove;\n\ttreeProto.removeAll = removeAll;\n\ttreeProto.root = tree_root;\n\ttreeProto.size = tree_size;\n\ttreeProto.visit = tree_visit;\n\ttreeProto.visitAfter = tree_visitAfter;\n\ttreeProto.x = tree_x;\n\ttreeProto.y = tree_y;\n\t\n\tvar slice$1 = [].slice;\n\t\n\tvar noabort = {};\n\t\n\tfunction Queue(size) {\n\t  if (!(size >= 1)) throw new Error;\n\t  this._size = size;\n\t  this._call =\n\t  this._error = null;\n\t  this._tasks = [];\n\t  this._data = [];\n\t  this._waiting =\n\t  this._active =\n\t  this._ended =\n\t  this._start = 0; // inside a synchronous task callback?\n\t}\n\t\n\tQueue.prototype = queue.prototype = {\n\t  constructor: Queue,\n\t  defer: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    if (this._error != null) return this;\n\t    var t = slice$1.call(arguments, 1);\n\t    t.push(callback);\n\t    ++this._waiting, this._tasks.push(t);\n\t    poke(this);\n\t    return this;\n\t  },\n\t  abort: function() {\n\t    if (this._error == null) abort(this, new Error(\"abort\"));\n\t    return this;\n\t  },\n\t  await: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t    maybeNotify(this);\n\t    return this;\n\t  },\n\t  awaitAll: function(callback) {\n\t    if (typeof callback !== \"function\" || this._call) throw new Error;\n\t    this._call = callback;\n\t    maybeNotify(this);\n\t    return this;\n\t  }\n\t};\n\t\n\tfunction poke(q) {\n\t  if (!q._start) {\n\t    try { start(q); } // let the current task complete\n\t    catch (e) {\n\t      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n\t      else if (!q._data) throw e; // await callback errored synchronously\n\t    }\n\t  }\n\t}\n\t\n\tfunction start(q) {\n\t  while (q._start = q._waiting && q._active < q._size) {\n\t    var i = q._ended + q._active,\n\t        t = q._tasks[i],\n\t        j = t.length - 1,\n\t        c = t[j];\n\t    t[j] = end(q, i);\n\t    --q._waiting, ++q._active;\n\t    t = c.apply(null, t);\n\t    if (!q._tasks[i]) continue; // task finished synchronously\n\t    q._tasks[i] = t || noabort;\n\t  }\n\t}\n\t\n\tfunction end(q, i) {\n\t  return function(e, r) {\n\t    if (!q._tasks[i]) return; // ignore multiple callbacks\n\t    --q._active, ++q._ended;\n\t    q._tasks[i] = null;\n\t    if (q._error != null) return; // ignore secondary errors\n\t    if (e != null) {\n\t      abort(q, e);\n\t    } else {\n\t      q._data[i] = r;\n\t      if (q._waiting) poke(q);\n\t      else maybeNotify(q);\n\t    }\n\t  };\n\t}\n\t\n\tfunction abort(q, e) {\n\t  var i = q._tasks.length, t;\n\t  q._error = e; // ignore active callbacks\n\t  q._data = undefined; // allow gc\n\t  q._waiting = NaN; // prevent starting\n\t\n\t  while (--i >= 0) {\n\t    if (t = q._tasks[i]) {\n\t      q._tasks[i] = null;\n\t      if (t.abort) {\n\t        try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t  }\n\t\n\t  q._active = NaN; // allow notification\n\t  maybeNotify(q);\n\t}\n\t\n\tfunction maybeNotify(q) {\n\t  if (!q._active && q._call) {\n\t    var d = q._data;\n\t    q._data = undefined; // allow gc\n\t    q._call(q._error, d);\n\t  }\n\t}\n\t\n\tfunction queue(concurrency) {\n\t  return new Queue(arguments.length ? +concurrency : Infinity);\n\t}\n\t\n\tvar constant$2 = function(x) {\n\t  return function constant() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar epsilon$1 = 1e-12;\n\tvar pi$2 = Math.PI;\n\tvar halfPi$1 = pi$2 / 2;\n\tvar tau$2 = 2 * pi$2;\n\t\n\tfunction arcInnerRadius(d) {\n\t  return d.innerRadius;\n\t}\n\t\n\tfunction arcOuterRadius(d) {\n\t  return d.outerRadius;\n\t}\n\t\n\tfunction arcStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction arcEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tfunction arcPadAngle(d) {\n\t  return d && d.padAngle; // Note: optional!\n\t}\n\t\n\tfunction asin(x) {\n\t  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t}\n\t\n\tfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t  var x10 = x1 - x0, y10 = y1 - y0,\n\t      x32 = x3 - x2, y32 = y3 - y2,\n\t      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t  return [x0 + t * x10, y0 + t * y10];\n\t}\n\t\n\t// Compute perpendicular offset line of length rc.\n\t// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\tfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t  var x01 = x0 - x1,\n\t      y01 = y0 - y1,\n\t      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t      ox = lo * y01,\n\t      oy = -lo * x01,\n\t      x11 = x0 + ox,\n\t      y11 = y0 + oy,\n\t      x10 = x1 + ox,\n\t      y10 = y1 + oy,\n\t      x00 = (x11 + x10) / 2,\n\t      y00 = (y11 + y10) / 2,\n\t      dx = x10 - x11,\n\t      dy = y10 - y11,\n\t      d2 = dx * dx + dy * dy,\n\t      r = r1 - rc,\n\t      D = x11 * y10 - x10 * y11,\n\t      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t      cx0 = (D * dy - dx * d) / d2,\n\t      cy0 = (-D * dx - dy * d) / d2,\n\t      cx1 = (D * dy + dx * d) / d2,\n\t      cy1 = (-D * dx + dy * d) / d2,\n\t      dx0 = cx0 - x00,\n\t      dy0 = cy0 - y00,\n\t      dx1 = cx1 - x00,\n\t      dy1 = cy1 - y00;\n\t\n\t  // Pick the closer of the two intersection points.\n\t  // TODO Is there a faster way to determine which intersection to use?\n\t  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t  return {\n\t    cx: cx0,\n\t    cy: cy0,\n\t    x01: -ox,\n\t    y01: -oy,\n\t    x11: cx0 * (r1 / r - 1),\n\t    y11: cy0 * (r1 / r - 1)\n\t  };\n\t}\n\t\n\tvar arc = function() {\n\t  var innerRadius = arcInnerRadius,\n\t      outerRadius = arcOuterRadius,\n\t      cornerRadius = constant$2(0),\n\t      padRadius = null,\n\t      startAngle = arcStartAngle,\n\t      endAngle = arcEndAngle,\n\t      padAngle = arcPadAngle,\n\t      context = null;\n\t\n\t  function arc() {\n\t    var buffer,\n\t        r,\n\t        r0 = +innerRadius.apply(this, arguments),\n\t        r1 = +outerRadius.apply(this, arguments),\n\t        a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t        a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t        da = Math.abs(a1 - a0),\n\t        cw = a1 > a0;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    // Ensure that the outer radius is always larger than the inner radius.\n\t    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t    // Is it a point?\n\t    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t    // Or is it a circle or annulus?\n\t    else if (da > tau$2 - epsilon$1) {\n\t      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t      context.arc(0, 0, r1, a0, a1, !cw);\n\t      if (r0 > epsilon$1) {\n\t        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t        context.arc(0, 0, r0, a1, a0, cw);\n\t      }\n\t    }\n\t\n\t    // Or is it a circular or annular sector?\n\t    else {\n\t      var a01 = a0,\n\t          a11 = a1,\n\t          a00 = a0,\n\t          a10 = a1,\n\t          da0 = da,\n\t          da1 = da,\n\t          ap = padAngle.apply(this, arguments) / 2,\n\t          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t          rc0 = rc,\n\t          rc1 = rc,\n\t          t0,\n\t          t1;\n\t\n\t      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t      if (rp > epsilon$1) {\n\t        var p0 = asin(rp / r0 * Math.sin(ap)),\n\t            p1 = asin(rp / r1 * Math.sin(ap));\n\t        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t      }\n\t\n\t      var x01 = r1 * Math.cos(a01),\n\t          y01 = r1 * Math.sin(a01),\n\t          x10 = r0 * Math.cos(a10),\n\t          y10 = r0 * Math.sin(a10);\n\t\n\t      // Apply rounded corners?\n\t      if (rc > epsilon$1) {\n\t        var x11 = r1 * Math.cos(a11),\n\t            y11 = r1 * Math.sin(a11),\n\t            x00 = r0 * Math.cos(a00),\n\t            y00 = r0 * Math.sin(a00);\n\t\n\t        // Restrict the corner radius according to the sector angle.\n\t        if (da < pi$2) {\n\t          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t              ax = x01 - oc[0],\n\t              ay = y01 - oc[1],\n\t              bx = x11 - oc[0],\n\t              by = y11 - oc[1],\n\t              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t      }\n\t\n\t      // Is the sector collapsed to a line?\n\t      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t      // Does the sector’s outer ring have rounded corners?\n\t      else if (rc1 > epsilon$1) {\n\t        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the outer ring just a circular arc?\n\t      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t      // Is there no inner ring, and it’s a circular sector?\n\t      // Or perhaps it’s an annular sector collapsed due to padding?\n\t      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t      // Does the sector’s inner ring (or point) have rounded corners?\n\t      else if (rc0 > epsilon$1) {\n\t        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t        // Have the corners merged?\n\t        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t        // Otherwise, draw the two corners and the ring.\n\t        else {\n\t          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t        }\n\t      }\n\t\n\t      // Or is the inner ring just a circular arc?\n\t      else context.arc(0, 0, r0, a10, a00, cw);\n\t    }\n\t\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  arc.centroid = function() {\n\t    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t    return [Math.cos(a) * r, Math.sin(a) * r];\n\t  };\n\t\n\t  arc.innerRadius = function(_) {\n\t    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n\t  };\n\t\n\t  arc.outerRadius = function(_) {\n\t    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n\t  };\n\t\n\t  arc.cornerRadius = function(_) {\n\t    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n\t  };\n\t\n\t  arc.padRadius = function(_) {\n\t    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n\t  };\n\t\n\t  arc.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n\t  };\n\t\n\t  arc.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n\t  };\n\t\n\t  arc.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n\t  };\n\t\n\t  arc.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t  };\n\t\n\t  return arc;\n\t};\n\t\n\tfunction Linear(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinear.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: this._context.lineTo(x, y); break;\n\t    }\n\t  }\n\t};\n\t\n\tvar curveLinear = function(context) {\n\t  return new Linear(context);\n\t};\n\t\n\tfunction x(p) {\n\t  return p[0];\n\t}\n\t\n\tfunction y(p) {\n\t  return p[1];\n\t}\n\t\n\tvar line = function() {\n\t  var x$$1 = x,\n\t      y$$1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function line(data) {\n\t    var i,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer;\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) output.lineStart();\n\t        else output.lineEnd();\n\t      }\n\t      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  line.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n\t  };\n\t\n\t  line.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n\t  };\n\t\n\t  line.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n\t  };\n\t\n\t  line.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t  };\n\t\n\t  line.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t  };\n\t\n\t  return line;\n\t};\n\t\n\tvar area$1 = function() {\n\t  var x0 = x,\n\t      x1 = null,\n\t      y0 = constant$2(0),\n\t      y1 = y,\n\t      defined = constant$2(true),\n\t      context = null,\n\t      curve = curveLinear,\n\t      output = null;\n\t\n\t  function area(data) {\n\t    var i,\n\t        j,\n\t        k,\n\t        n = data.length,\n\t        d,\n\t        defined0 = false,\n\t        buffer,\n\t        x0z = new Array(n),\n\t        y0z = new Array(n);\n\t\n\t    if (context == null) output = curve(buffer = path());\n\t\n\t    for (i = 0; i <= n; ++i) {\n\t      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t        if (defined0 = !defined0) {\n\t          j = i;\n\t          output.areaStart();\n\t          output.lineStart();\n\t        } else {\n\t          output.lineEnd();\n\t          output.lineStart();\n\t          for (k = i - 1; k >= j; --k) {\n\t            output.point(x0z[k], y0z[k]);\n\t          }\n\t          output.lineEnd();\n\t          output.areaEnd();\n\t        }\n\t      }\n\t      if (defined0) {\n\t        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t      }\n\t    }\n\t\n\t    if (buffer) return output = null, buffer + \"\" || null;\n\t  }\n\t\n\t  function arealine() {\n\t    return line().defined(defined).curve(curve).context(context);\n\t  }\n\t\n\t  area.x = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n\t  };\n\t\n\t  area.x0 = function(_) {\n\t    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n\t  };\n\t\n\t  area.x1 = function(_) {\n\t    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n\t  };\n\t\n\t  area.y = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n\t  };\n\t\n\t  area.y0 = function(_) {\n\t    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n\t  };\n\t\n\t  area.y1 = function(_) {\n\t    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n\t  };\n\t\n\t  area.lineX0 =\n\t  area.lineY0 = function() {\n\t    return arealine().x(x0).y(y0);\n\t  };\n\t\n\t  area.lineY1 = function() {\n\t    return arealine().x(x0).y(y1);\n\t  };\n\t\n\t  area.lineX1 = function() {\n\t    return arealine().x(x1).y(y0);\n\t  };\n\t\n\t  area.defined = function(_) {\n\t    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n\t  };\n\t\n\t  area.curve = function(_) {\n\t    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t  };\n\t\n\t  area.context = function(_) {\n\t    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t  };\n\t\n\t  return area;\n\t};\n\t\n\tvar descending$1 = function(a, b) {\n\t  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t};\n\t\n\tvar identity$1 = function(d) {\n\t  return d;\n\t};\n\t\n\tvar pie = function() {\n\t  var value = identity$1,\n\t      sortValues = descending$1,\n\t      sort = null,\n\t      startAngle = constant$2(0),\n\t      endAngle = constant$2(tau$2),\n\t      padAngle = constant$2(0);\n\t\n\t  function pie(data) {\n\t    var i,\n\t        n = data.length,\n\t        j,\n\t        k,\n\t        sum = 0,\n\t        index = new Array(n),\n\t        arcs = new Array(n),\n\t        a0 = +startAngle.apply(this, arguments),\n\t        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t        a1,\n\t        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t        pa = p * (da < 0 ? -1 : 1),\n\t        v;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t        sum += v;\n\t      }\n\t    }\n\t\n\t    // Optionally sort the arcs by previously-computed values or by data.\n\t    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t    // Compute the arcs! They are stored in the original data's order.\n\t    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t        data: data[j],\n\t        index: i,\n\t        value: v,\n\t        startAngle: a0,\n\t        endAngle: a1,\n\t        padAngle: p\n\t      };\n\t    }\n\t\n\t    return arcs;\n\t  }\n\t\n\t  pie.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n\t  };\n\t\n\t  pie.sortValues = function(_) {\n\t    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t  };\n\t\n\t  pie.sort = function(_) {\n\t    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t  };\n\t\n\t  pie.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n\t  };\n\t\n\t  pie.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n\t  };\n\t\n\t  pie.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n\t  };\n\t\n\t  return pie;\n\t};\n\t\n\tvar curveRadialLinear = curveRadial(curveLinear);\n\t\n\tfunction Radial(curve) {\n\t  this._curve = curve;\n\t}\n\t\n\tRadial.prototype = {\n\t  areaStart: function() {\n\t    this._curve.areaStart();\n\t  },\n\t  areaEnd: function() {\n\t    this._curve.areaEnd();\n\t  },\n\t  lineStart: function() {\n\t    this._curve.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    this._curve.lineEnd();\n\t  },\n\t  point: function(a, r) {\n\t    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t  }\n\t};\n\t\n\tfunction curveRadial(curve) {\n\t\n\t  function radial(context) {\n\t    return new Radial(curve(context));\n\t  }\n\t\n\t  radial._curve = curve;\n\t\n\t  return radial;\n\t}\n\t\n\tfunction radialLine(l) {\n\t  var c = l.curve;\n\t\n\t  l.angle = l.x, delete l.x;\n\t  l.radius = l.y, delete l.y;\n\t\n\t  l.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return l;\n\t}\n\t\n\tvar radialLine$1 = function() {\n\t  return radialLine(line().curve(curveRadialLinear));\n\t};\n\t\n\tvar radialArea = function() {\n\t  var a = area$1().curve(curveRadialLinear),\n\t      c = a.curve,\n\t      x0 = a.lineX0,\n\t      x1 = a.lineX1,\n\t      y0 = a.lineY0,\n\t      y1 = a.lineY1;\n\t\n\t  a.angle = a.x, delete a.x;\n\t  a.startAngle = a.x0, delete a.x0;\n\t  a.endAngle = a.x1, delete a.x1;\n\t  a.radius = a.y, delete a.y;\n\t  a.innerRadius = a.y0, delete a.y0;\n\t  a.outerRadius = a.y1, delete a.y1;\n\t  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t  a.curve = function(_) {\n\t    return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t  };\n\t\n\t  return a;\n\t};\n\t\n\tvar circle = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / pi$2);\n\t    context.moveTo(r, 0);\n\t    context.arc(0, 0, r, 0, tau$2);\n\t  }\n\t};\n\t\n\tvar cross$1 = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / 5) / 2;\n\t    context.moveTo(-3 * r, -r);\n\t    context.lineTo(-r, -r);\n\t    context.lineTo(-r, -3 * r);\n\t    context.lineTo(r, -3 * r);\n\t    context.lineTo(r, -r);\n\t    context.lineTo(3 * r, -r);\n\t    context.lineTo(3 * r, r);\n\t    context.lineTo(r, r);\n\t    context.lineTo(r, 3 * r);\n\t    context.lineTo(-r, 3 * r);\n\t    context.lineTo(-r, r);\n\t    context.lineTo(-3 * r, r);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar tan30 = Math.sqrt(1 / 3);\n\tvar tan30_2 = tan30 * 2;\n\t\n\tvar diamond = {\n\t  draw: function(context, size) {\n\t    var y = Math.sqrt(size / tan30_2),\n\t        x = y * tan30;\n\t    context.moveTo(0, -y);\n\t    context.lineTo(x, 0);\n\t    context.lineTo(0, y);\n\t    context.lineTo(-x, 0);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar ka = 0.89081309152928522810;\n\tvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\tvar kx = Math.sin(tau$2 / 10) * kr;\n\tvar ky = -Math.cos(tau$2 / 10) * kr;\n\t\n\tvar star = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size * ka),\n\t        x = kx * r,\n\t        y = ky * r;\n\t    context.moveTo(0, -r);\n\t    context.lineTo(x, y);\n\t    for (var i = 1; i < 5; ++i) {\n\t      var a = tau$2 * i / 5,\n\t          c = Math.cos(a),\n\t          s = Math.sin(a);\n\t      context.lineTo(s * r, -c * r);\n\t      context.lineTo(c * x - s * y, s * x + c * y);\n\t    }\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar square = {\n\t  draw: function(context, size) {\n\t    var w = Math.sqrt(size),\n\t        x = -w / 2;\n\t    context.rect(x, x, w, w);\n\t  }\n\t};\n\t\n\tvar sqrt3 = Math.sqrt(3);\n\t\n\tvar triangle = {\n\t  draw: function(context, size) {\n\t    var y = -Math.sqrt(size / (sqrt3 * 3));\n\t    context.moveTo(0, y * 2);\n\t    context.lineTo(-sqrt3 * y, -y);\n\t    context.lineTo(sqrt3 * y, -y);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar c = -0.5;\n\tvar s = Math.sqrt(3) / 2;\n\tvar k = 1 / Math.sqrt(12);\n\tvar a = (k / 2 + 1) * 3;\n\t\n\tvar wye = {\n\t  draw: function(context, size) {\n\t    var r = Math.sqrt(size / a),\n\t        x0 = r / 2,\n\t        y0 = r * k,\n\t        x1 = x0,\n\t        y1 = r * k + r,\n\t        x2 = -x1,\n\t        y2 = y1;\n\t    context.moveTo(x0, y0);\n\t    context.lineTo(x1, y1);\n\t    context.lineTo(x2, y2);\n\t    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t    context.closePath();\n\t  }\n\t};\n\t\n\tvar symbols = [\n\t  circle,\n\t  cross$1,\n\t  diamond,\n\t  square,\n\t  star,\n\t  triangle,\n\t  wye\n\t];\n\t\n\tvar symbol = function() {\n\t  var type = constant$2(circle),\n\t      size = constant$2(64),\n\t      context = null;\n\t\n\t  function symbol() {\n\t    var buffer;\n\t    if (!context) context = buffer = path();\n\t    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  symbol.type = function(_) {\n\t    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n\t  };\n\t\n\t  symbol.size = function(_) {\n\t    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n\t  };\n\t\n\t  symbol.context = function(_) {\n\t    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t  };\n\t\n\t  return symbol;\n\t};\n\t\n\tvar noop = function() {};\n\t\n\tfunction point(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    (2 * that._x0 + that._x1) / 3,\n\t    (2 * that._y0 + that._y1) / 3,\n\t    (that._x0 + 2 * that._x1) / 3,\n\t    (that._y0 + 2 * that._y1) / 3,\n\t    (that._x0 + 4 * that._x1 + x) / 6,\n\t    (that._y0 + 4 * that._y1 + y) / 6\n\t  );\n\t}\n\t\n\tfunction Basis(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasis.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 3: point(this, this._x1, this._y1); // proceed\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basis = function(context) {\n\t  return new Basis(context);\n\t};\n\t\n\tfunction BasisClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x2, this._y2);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x2, this._y2);\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisClosed = function(context) {\n\t  return new BasisClosed(context);\n\t};\n\t\n\tfunction BasisOpen(context) {\n\t  this._context = context;\n\t}\n\t\n\tBasisOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t  }\n\t};\n\t\n\tvar basisOpen = function(context) {\n\t  return new BasisOpen(context);\n\t};\n\t\n\tfunction Bundle(context, beta) {\n\t  this._basis = new Basis(context);\n\t  this._beta = beta;\n\t}\n\t\n\tBundle.prototype = {\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t    this._basis.lineStart();\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        j = x.length - 1;\n\t\n\t    if (j > 0) {\n\t      var x0 = x[0],\n\t          y0 = y[0],\n\t          dx = x[j] - x0,\n\t          dy = y[j] - y0,\n\t          i = -1,\n\t          t;\n\t\n\t      while (++i <= j) {\n\t        t = i / j;\n\t        this._basis.point(\n\t          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t        );\n\t      }\n\t    }\n\t\n\t    this._x = this._y = null;\n\t    this._basis.lineEnd();\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\tvar bundle = (function custom(beta) {\n\t\n\t  function bundle(context) {\n\t    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t  }\n\t\n\t  bundle.beta = function(beta) {\n\t    return custom(+beta);\n\t  };\n\t\n\t  return bundle;\n\t})(0.85);\n\t\n\tfunction point$1(that, x, y) {\n\t  that._context.bezierCurveTo(\n\t    that._x1 + that._k * (that._x2 - that._x0),\n\t    that._y1 + that._k * (that._y2 - that._y0),\n\t    that._x2 + that._k * (that._x1 - x),\n\t    that._y2 + that._k * (that._y1 - y),\n\t    that._x2,\n\t    that._y2\n\t  );\n\t}\n\t\n\tfunction Cardinal(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinal.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: point$1(this, this._x1, this._y1); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinal = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new Cardinal(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalClosed(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalClosed = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalClosed(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction CardinalOpen(context, tension) {\n\t  this._context = context;\n\t  this._k = (1 - tension) / 6;\n\t}\n\t\n\tCardinalOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$1(this, x, y); break;\n\t    }\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar cardinalOpen = (function custom(tension) {\n\t\n\t  function cardinal(context) {\n\t    return new CardinalOpen(context, tension);\n\t  }\n\t\n\t  cardinal.tension = function(tension) {\n\t    return custom(+tension);\n\t  };\n\t\n\t  return cardinal;\n\t})(0);\n\t\n\tfunction point$2(that, x, y) {\n\t  var x1 = that._x1,\n\t      y1 = that._y1,\n\t      x2 = that._x2,\n\t      y2 = that._y2;\n\t\n\t  if (that._l01_a > epsilon$1) {\n\t    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t  }\n\t\n\t  if (that._l23_a > epsilon$1) {\n\t    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t  }\n\t\n\t  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t}\n\t\n\tfunction CatmullRom(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRom.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x2, this._y2); break;\n\t      case 3: this.point(this._x2, this._y2); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRom = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomClosed(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 1: {\n\t        this._context.moveTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 2: {\n\t        this._context.lineTo(this._x3, this._y3);\n\t        this._context.closePath();\n\t        break;\n\t      }\n\t      case 3: {\n\t        this.point(this._x3, this._y3);\n\t        this.point(this._x4, this._y4);\n\t        this.point(this._x5, this._y5);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomClosed = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction CatmullRomOpen(context, alpha) {\n\t  this._context = context;\n\t  this._alpha = alpha;\n\t}\n\t\n\tCatmullRomOpen.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 = this._x2 =\n\t    this._y0 = this._y1 = this._y2 = NaN;\n\t    this._l01_a = this._l12_a = this._l23_a =\n\t    this._l01_2a = this._l12_2a = this._l23_2a =\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t\n\t    if (this._point) {\n\t      var x23 = this._x2 - x,\n\t          y23 = this._y2 - y;\n\t      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t    }\n\t\n\t    switch (this._point) {\n\t      case 0: this._point = 1; break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t      case 3: this._point = 4; // proceed\n\t      default: point$2(this, x, y); break;\n\t    }\n\t\n\t    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t  }\n\t};\n\t\n\tvar catmullRomOpen = (function custom(alpha) {\n\t\n\t  function catmullRom(context) {\n\t    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t  }\n\t\n\t  catmullRom.alpha = function(alpha) {\n\t    return custom(+alpha);\n\t  };\n\t\n\t  return catmullRom;\n\t})(0.5);\n\t\n\tfunction LinearClosed(context) {\n\t  this._context = context;\n\t}\n\t\n\tLinearClosed.prototype = {\n\t  areaStart: noop,\n\t  areaEnd: noop,\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._point) this._context.closePath();\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    if (this._point) this._context.lineTo(x, y);\n\t    else this._point = 1, this._context.moveTo(x, y);\n\t  }\n\t};\n\t\n\tvar linearClosed = function(context) {\n\t  return new LinearClosed(context);\n\t};\n\t\n\tfunction sign(x) {\n\t  return x < 0 ? -1 : 1;\n\t}\n\t\n\t// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t// NOV(II), P. 443, 1990.\n\tfunction slope3(that, x2, y2) {\n\t  var h0 = that._x1 - that._x0,\n\t      h1 = x2 - that._x1,\n\t      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t}\n\t\n\t// Calculate a one-sided slope.\n\tfunction slope2(that, t) {\n\t  var h = that._x1 - that._x0;\n\t  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t}\n\t\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tfunction point$3(that, t0, t1) {\n\t  var x0 = that._x0,\n\t      y0 = that._y0,\n\t      x1 = that._x1,\n\t      y1 = that._y1,\n\t      dx = (x1 - x0) / 3;\n\t  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t}\n\t\n\tfunction MonotoneX(context) {\n\t  this._context = context;\n\t}\n\t\n\tMonotoneX.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x0 = this._x1 =\n\t    this._y0 = this._y1 =\n\t    this._t0 = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    switch (this._point) {\n\t      case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t    }\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    var t1 = NaN;\n\t\n\t    x = +x, y = +y;\n\t    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; break;\n\t      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t    }\n\t\n\t    this._x0 = this._x1, this._x1 = x;\n\t    this._y0 = this._y1, this._y1 = y;\n\t    this._t0 = t1;\n\t  }\n\t};\n\t\n\tfunction MonotoneY(context) {\n\t  this._context = new ReflectContext(context);\n\t}\n\t\n\t(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t  MonotoneX.prototype.point.call(this, y, x);\n\t};\n\t\n\tfunction ReflectContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tReflectContext.prototype = {\n\t  moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t  closePath: function() { this._context.closePath(); },\n\t  lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t};\n\t\n\tfunction monotoneX(context) {\n\t  return new MonotoneX(context);\n\t}\n\t\n\tfunction monotoneY(context) {\n\t  return new MonotoneY(context);\n\t}\n\t\n\tfunction Natural(context) {\n\t  this._context = context;\n\t}\n\t\n\tNatural.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = [];\n\t    this._y = [];\n\t  },\n\t  lineEnd: function() {\n\t    var x = this._x,\n\t        y = this._y,\n\t        n = x.length;\n\t\n\t    if (n) {\n\t      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t      if (n === 2) {\n\t        this._context.lineTo(x[1], y[1]);\n\t      } else {\n\t        var px = controlPoints(x),\n\t            py = controlPoints(y);\n\t        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t    this._line = 1 - this._line;\n\t    this._x = this._y = null;\n\t  },\n\t  point: function(x, y) {\n\t    this._x.push(+x);\n\t    this._y.push(+y);\n\t  }\n\t};\n\t\n\t// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\tfunction controlPoints(x) {\n\t  var i,\n\t      n = x.length - 1,\n\t      m,\n\t      a = new Array(n),\n\t      b = new Array(n),\n\t      r = new Array(n);\n\t  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t  a[n - 1] = r[n - 1] / b[n - 1];\n\t  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t  return [a, b];\n\t}\n\t\n\tvar natural = function(context) {\n\t  return new Natural(context);\n\t};\n\t\n\tfunction Step(context, t) {\n\t  this._context = context;\n\t  this._t = t;\n\t}\n\t\n\tStep.prototype = {\n\t  areaStart: function() {\n\t    this._line = 0;\n\t  },\n\t  areaEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._x = this._y = NaN;\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t  },\n\t  point: function(x, y) {\n\t    x = +x, y = +y;\n\t    switch (this._point) {\n\t      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t      case 1: this._point = 2; // proceed\n\t      default: {\n\t        if (this._t <= 0) {\n\t          this._context.lineTo(this._x, y);\n\t          this._context.lineTo(x, y);\n\t        } else {\n\t          var x1 = this._x * (1 - this._t) + x * this._t;\n\t          this._context.lineTo(x1, this._y);\n\t          this._context.lineTo(x1, y);\n\t        }\n\t        break;\n\t      }\n\t    }\n\t    this._x = x, this._y = y;\n\t  }\n\t};\n\t\n\tvar step = function(context) {\n\t  return new Step(context, 0.5);\n\t};\n\t\n\tfunction stepBefore(context) {\n\t  return new Step(context, 0);\n\t}\n\t\n\tfunction stepAfter(context) {\n\t  return new Step(context, 1);\n\t}\n\t\n\tvar slice$2 = Array.prototype.slice;\n\t\n\tvar none = function(series, order) {\n\t  if (!((n = series.length) > 1)) return;\n\t  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t    s0 = s1, s1 = series[order[i]];\n\t    for (var j = 0; j < m; ++j) {\n\t      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t    }\n\t  }\n\t};\n\t\n\tvar none$1 = function(series) {\n\t  var n = series.length, o = new Array(n);\n\t  while (--n >= 0) o[n] = n;\n\t  return o;\n\t};\n\t\n\tfunction stackValue(d, key) {\n\t  return d[key];\n\t}\n\t\n\tvar stack = function() {\n\t  var keys = constant$2([]),\n\t      order = none$1,\n\t      offset = none,\n\t      value = stackValue;\n\t\n\t  function stack(data) {\n\t    var kz = keys.apply(this, arguments),\n\t        i,\n\t        m = data.length,\n\t        n = kz.length,\n\t        sz = new Array(n),\n\t        oz;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t        si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t        sij.data = data[j];\n\t      }\n\t      si.key = ki;\n\t    }\n\t\n\t    for (i = 0, oz = order(sz); i < n; ++i) {\n\t      sz[oz[i]].index = i;\n\t    }\n\t\n\t    offset(sz, oz);\n\t    return sz;\n\t  }\n\t\n\t  stack.keys = function(_) {\n\t    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n\t  };\n\t\n\t  stack.value = function(_) {\n\t    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n\t  };\n\t\n\t  stack.order = function(_) {\n\t    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n\t  };\n\t\n\t  stack.offset = function(_) {\n\t    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t  };\n\t\n\t  return stack;\n\t};\n\t\n\tvar expand = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar silhouette = function(series, order) {\n\t  if (!((n = series.length) > 0)) return;\n\t  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t    s0[j][1] += s0[j][0] = -y / 2;\n\t  }\n\t  none(series, order);\n\t};\n\t\n\tvar wiggle = function(series, order) {\n\t  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t      var si = series[order[i]],\n\t          sij0 = si[j][1] || 0,\n\t          sij1 = si[j - 1][1] || 0,\n\t          s3 = (sij0 - sij1) / 2;\n\t      for (var k = 0; k < i; ++k) {\n\t        var sk = series[order[k]],\n\t            skj0 = sk[j][1] || 0,\n\t            skj1 = sk[j - 1][1] || 0;\n\t        s3 += skj0 - skj1;\n\t      }\n\t      s1 += sij0, s2 += s3 * sij0;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    if (s1) y -= s2 / s1;\n\t  }\n\t  s0[j - 1][1] += s0[j - 1][0] = y;\n\t  none(series, order);\n\t};\n\t\n\tvar ascending$1 = function(series) {\n\t  var sums = series.map(sum$1);\n\t  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t};\n\t\n\tfunction sum$1(series) {\n\t  var s = 0, i = -1, n = series.length, v;\n\t  while (++i < n) if (v = +series[i][1]) s += v;\n\t  return s;\n\t}\n\t\n\tvar descending$2 = function(series) {\n\t  return ascending$1(series).reverse();\n\t};\n\t\n\tvar insideOut = function(series) {\n\t  var n = series.length,\n\t      i,\n\t      j,\n\t      sums = series.map(sum$1),\n\t      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t      top = 0,\n\t      bottom = 0,\n\t      tops = [],\n\t      bottoms = [];\n\t\n\t  for (i = 0; i < n; ++i) {\n\t    j = order[i];\n\t    if (top < bottom) {\n\t      top += sums[j];\n\t      tops.push(j);\n\t    } else {\n\t      bottom += sums[j];\n\t      bottoms.push(j);\n\t    }\n\t  }\n\t\n\t  return bottoms.reverse().concat(tops);\n\t};\n\t\n\tvar reverse = function(series) {\n\t  return none$1(series).reverse();\n\t};\n\t\n\tvar define = function(constructor, factory, prototype) {\n\t  constructor.prototype = factory.prototype = prototype;\n\t  prototype.constructor = constructor;\n\t};\n\t\n\tfunction extend(parent, definition) {\n\t  var prototype = Object.create(parent.prototype);\n\t  for (var key in definition) prototype[key] = definition[key];\n\t  return prototype;\n\t}\n\t\n\tfunction Color() {}\n\t\n\tvar darker = 0.7;\n\tvar brighter = 1 / darker;\n\t\n\tvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\n\tvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\n\tvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\n\tvar reHex3 = /^#([0-9a-f]{3})$/;\n\tvar reHex6 = /^#([0-9a-f]{6})$/;\n\tvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\n\tvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\n\tvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\n\tvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\n\tvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\n\tvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\t\n\tvar named = {\n\t  aliceblue: 0xf0f8ff,\n\t  antiquewhite: 0xfaebd7,\n\t  aqua: 0x00ffff,\n\t  aquamarine: 0x7fffd4,\n\t  azure: 0xf0ffff,\n\t  beige: 0xf5f5dc,\n\t  bisque: 0xffe4c4,\n\t  black: 0x000000,\n\t  blanchedalmond: 0xffebcd,\n\t  blue: 0x0000ff,\n\t  blueviolet: 0x8a2be2,\n\t  brown: 0xa52a2a,\n\t  burlywood: 0xdeb887,\n\t  cadetblue: 0x5f9ea0,\n\t  chartreuse: 0x7fff00,\n\t  chocolate: 0xd2691e,\n\t  coral: 0xff7f50,\n\t  cornflowerblue: 0x6495ed,\n\t  cornsilk: 0xfff8dc,\n\t  crimson: 0xdc143c,\n\t  cyan: 0x00ffff,\n\t  darkblue: 0x00008b,\n\t  darkcyan: 0x008b8b,\n\t  darkgoldenrod: 0xb8860b,\n\t  darkgray: 0xa9a9a9,\n\t  darkgreen: 0x006400,\n\t  darkgrey: 0xa9a9a9,\n\t  darkkhaki: 0xbdb76b,\n\t  darkmagenta: 0x8b008b,\n\t  darkolivegreen: 0x556b2f,\n\t  darkorange: 0xff8c00,\n\t  darkorchid: 0x9932cc,\n\t  darkred: 0x8b0000,\n\t  darksalmon: 0xe9967a,\n\t  darkseagreen: 0x8fbc8f,\n\t  darkslateblue: 0x483d8b,\n\t  darkslategray: 0x2f4f4f,\n\t  darkslategrey: 0x2f4f4f,\n\t  darkturquoise: 0x00ced1,\n\t  darkviolet: 0x9400d3,\n\t  deeppink: 0xff1493,\n\t  deepskyblue: 0x00bfff,\n\t  dimgray: 0x696969,\n\t  dimgrey: 0x696969,\n\t  dodgerblue: 0x1e90ff,\n\t  firebrick: 0xb22222,\n\t  floralwhite: 0xfffaf0,\n\t  forestgreen: 0x228b22,\n\t  fuchsia: 0xff00ff,\n\t  gainsboro: 0xdcdcdc,\n\t  ghostwhite: 0xf8f8ff,\n\t  gold: 0xffd700,\n\t  goldenrod: 0xdaa520,\n\t  gray: 0x808080,\n\t  green: 0x008000,\n\t  greenyellow: 0xadff2f,\n\t  grey: 0x808080,\n\t  honeydew: 0xf0fff0,\n\t  hotpink: 0xff69b4,\n\t  indianred: 0xcd5c5c,\n\t  indigo: 0x4b0082,\n\t  ivory: 0xfffff0,\n\t  khaki: 0xf0e68c,\n\t  lavender: 0xe6e6fa,\n\t  lavenderblush: 0xfff0f5,\n\t  lawngreen: 0x7cfc00,\n\t  lemonchiffon: 0xfffacd,\n\t  lightblue: 0xadd8e6,\n\t  lightcoral: 0xf08080,\n\t  lightcyan: 0xe0ffff,\n\t  lightgoldenrodyellow: 0xfafad2,\n\t  lightgray: 0xd3d3d3,\n\t  lightgreen: 0x90ee90,\n\t  lightgrey: 0xd3d3d3,\n\t  lightpink: 0xffb6c1,\n\t  lightsalmon: 0xffa07a,\n\t  lightseagreen: 0x20b2aa,\n\t  lightskyblue: 0x87cefa,\n\t  lightslategray: 0x778899,\n\t  lightslategrey: 0x778899,\n\t  lightsteelblue: 0xb0c4de,\n\t  lightyellow: 0xffffe0,\n\t  lime: 0x00ff00,\n\t  limegreen: 0x32cd32,\n\t  linen: 0xfaf0e6,\n\t  magenta: 0xff00ff,\n\t  maroon: 0x800000,\n\t  mediumaquamarine: 0x66cdaa,\n\t  mediumblue: 0x0000cd,\n\t  mediumorchid: 0xba55d3,\n\t  mediumpurple: 0x9370db,\n\t  mediumseagreen: 0x3cb371,\n\t  mediumslateblue: 0x7b68ee,\n\t  mediumspringgreen: 0x00fa9a,\n\t  mediumturquoise: 0x48d1cc,\n\t  mediumvioletred: 0xc71585,\n\t  midnightblue: 0x191970,\n\t  mintcream: 0xf5fffa,\n\t  mistyrose: 0xffe4e1,\n\t  moccasin: 0xffe4b5,\n\t  navajowhite: 0xffdead,\n\t  navy: 0x000080,\n\t  oldlace: 0xfdf5e6,\n\t  olive: 0x808000,\n\t  olivedrab: 0x6b8e23,\n\t  orange: 0xffa500,\n\t  orangered: 0xff4500,\n\t  orchid: 0xda70d6,\n\t  palegoldenrod: 0xeee8aa,\n\t  palegreen: 0x98fb98,\n\t  paleturquoise: 0xafeeee,\n\t  palevioletred: 0xdb7093,\n\t  papayawhip: 0xffefd5,\n\t  peachpuff: 0xffdab9,\n\t  peru: 0xcd853f,\n\t  pink: 0xffc0cb,\n\t  plum: 0xdda0dd,\n\t  powderblue: 0xb0e0e6,\n\t  purple: 0x800080,\n\t  rebeccapurple: 0x663399,\n\t  red: 0xff0000,\n\t  rosybrown: 0xbc8f8f,\n\t  royalblue: 0x4169e1,\n\t  saddlebrown: 0x8b4513,\n\t  salmon: 0xfa8072,\n\t  sandybrown: 0xf4a460,\n\t  seagreen: 0x2e8b57,\n\t  seashell: 0xfff5ee,\n\t  sienna: 0xa0522d,\n\t  silver: 0xc0c0c0,\n\t  skyblue: 0x87ceeb,\n\t  slateblue: 0x6a5acd,\n\t  slategray: 0x708090,\n\t  slategrey: 0x708090,\n\t  snow: 0xfffafa,\n\t  springgreen: 0x00ff7f,\n\t  steelblue: 0x4682b4,\n\t  tan: 0xd2b48c,\n\t  teal: 0x008080,\n\t  thistle: 0xd8bfd8,\n\t  tomato: 0xff6347,\n\t  turquoise: 0x40e0d0,\n\t  violet: 0xee82ee,\n\t  wheat: 0xf5deb3,\n\t  white: 0xffffff,\n\t  whitesmoke: 0xf5f5f5,\n\t  yellow: 0xffff00,\n\t  yellowgreen: 0x9acd32\n\t};\n\t\n\tdefine(Color, color, {\n\t  displayable: function() {\n\t    return this.rgb().displayable();\n\t  },\n\t  toString: function() {\n\t    return this.rgb() + \"\";\n\t  }\n\t});\n\t\n\tfunction color(format) {\n\t  var m;\n\t  format = (format + \"\").trim().toLowerCase();\n\t  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t      : named.hasOwnProperty(format) ? rgbn(named[format])\n\t      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t      : null;\n\t}\n\t\n\tfunction rgbn(n) {\n\t  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t}\n\t\n\tfunction rgba(r, g, b, a) {\n\t  if (a <= 0) r = g = b = NaN;\n\t  return new Rgb(r, g, b, a);\n\t}\n\t\n\tfunction rgbConvert(o) {\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Rgb;\n\t  o = o.rgb();\n\t  return new Rgb(o.r, o.g, o.b, o.opacity);\n\t}\n\t\n\tfunction rgb(r, g, b, opacity) {\n\t  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Rgb(r, g, b, opacity) {\n\t  this.r = +r;\n\t  this.g = +g;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Rgb, rgb, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return this;\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.r && this.r <= 255)\n\t        && (0 <= this.g && this.g <= 255)\n\t        && (0 <= this.b && this.b <= 255)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  },\n\t  toString: function() {\n\t    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t    return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t        + (a === 1 ? \")\" : \", \" + a + \")\");\n\t  }\n\t}));\n\t\n\tfunction hsla(h, s, l, a) {\n\t  if (a <= 0) h = s = l = NaN;\n\t  else if (l <= 0 || l >= 1) h = s = NaN;\n\t  else if (s <= 0) h = NaN;\n\t  return new Hsl(h, s, l, a);\n\t}\n\t\n\tfunction hslConvert(o) {\n\t  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Color)) o = color(o);\n\t  if (!o) return new Hsl;\n\t  if (o instanceof Hsl) return o;\n\t  o = o.rgb();\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      min = Math.min(r, g, b),\n\t      max = Math.max(r, g, b),\n\t      h = NaN,\n\t      s = max - min,\n\t      l = (max + min) / 2;\n\t  if (s) {\n\t    if (r === max) h = (g - b) / s + (g < b) * 6;\n\t    else if (g === max) h = (b - r) / s + 2;\n\t    else h = (r - g) / s + 4;\n\t    s /= l < 0.5 ? max + min : 2 - max - min;\n\t    h *= 60;\n\t  } else {\n\t    s = l > 0 && l < 1 ? 0 : h;\n\t  }\n\t  return new Hsl(h, s, l, o.opacity);\n\t}\n\t\n\tfunction hsl(h, s, l, opacity) {\n\t  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hsl(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hsl, hsl, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = this.h % 360 + (this.h < 0) * 360,\n\t        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t        l = this.l,\n\t        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t        m1 = 2 * l - m2;\n\t    return new Rgb(\n\t      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t      hsl2rgb(h, m1, m2),\n\t      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t      this.opacity\n\t    );\n\t  },\n\t  displayable: function() {\n\t    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t        && (0 <= this.l && this.l <= 1)\n\t        && (0 <= this.opacity && this.opacity <= 1);\n\t  }\n\t}));\n\t\n\t/* From FvD 13.37, CSS Color Module Level 3 */\n\tfunction hsl2rgb(h, m1, m2) {\n\t  return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t      : h < 180 ? m2\n\t      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t      : m1) * 255;\n\t}\n\t\n\tvar deg2rad = Math.PI / 180;\n\tvar rad2deg = 180 / Math.PI;\n\t\n\tvar Kn = 18;\n\tvar Xn = 0.950470;\n\tvar Yn = 1;\n\tvar Zn = 1.088830;\n\tvar t0 = 4 / 29;\n\tvar t1 = 6 / 29;\n\tvar t2 = 3 * t1 * t1;\n\tvar t3 = t1 * t1 * t1;\n\t\n\tfunction labConvert(o) {\n\t  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t  if (o instanceof Hcl) {\n\t    var h = o.h * deg2rad;\n\t    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t  }\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var b = rgb2xyz(o.r),\n\t      a = rgb2xyz(o.g),\n\t      l = rgb2xyz(o.b),\n\t      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t}\n\t\n\tfunction lab(l, a, b, opacity) {\n\t  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Lab(l, a, b, opacity) {\n\t  this.l = +l;\n\t  this.a = +a;\n\t  this.b = +b;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Lab, lab, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var y = (this.l + 16) / 116,\n\t        x = isNaN(this.a) ? y : y + this.a / 500,\n\t        z = isNaN(this.b) ? y : y - this.b / 200;\n\t    y = Yn * lab2xyz(y);\n\t    x = Xn * lab2xyz(x);\n\t    z = Zn * lab2xyz(z);\n\t    return new Rgb(\n\t      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction xyz2lab(t) {\n\t  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t}\n\t\n\tfunction lab2xyz(t) {\n\t  return t > t1 ? t * t * t : t2 * (t - t0);\n\t}\n\t\n\tfunction xyz2rgb(x) {\n\t  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t}\n\t\n\tfunction rgb2xyz(x) {\n\t  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\t\n\tfunction hclConvert(o) {\n\t  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t  if (!(o instanceof Lab)) o = labConvert(o);\n\t  var h = Math.atan2(o.b, o.a) * rad2deg;\n\t  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t}\n\t\n\tfunction hcl(h, c, l, opacity) {\n\t  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Hcl(h, c, l, opacity) {\n\t  this.h = +h;\n\t  this.c = +c;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Hcl, hcl, extend(Color, {\n\t  brighter: function(k) {\n\t    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t  },\n\t  rgb: function() {\n\t    return labConvert(this).rgb();\n\t  }\n\t}));\n\t\n\tvar A = -0.14861;\n\tvar B = +1.78277;\n\tvar C = -0.29227;\n\tvar D = -0.90649;\n\tvar E = +1.97294;\n\tvar ED = E * D;\n\tvar EB = E * B;\n\tvar BC_DA = B * C - D * A;\n\t\n\tfunction cubehelixConvert(o) {\n\t  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t  if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t  var r = o.r / 255,\n\t      g = o.g / 255,\n\t      b = o.b / 255,\n\t      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t      bl = b - l,\n\t      k = (E * (g - l) - C * bl) / D,\n\t      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t}\n\t\n\tfunction cubehelix(h, s, l, opacity) {\n\t  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t}\n\t\n\tfunction Cubehelix(h, s, l, opacity) {\n\t  this.h = +h;\n\t  this.s = +s;\n\t  this.l = +l;\n\t  this.opacity = +opacity;\n\t}\n\t\n\tdefine(Cubehelix, cubehelix, extend(Color, {\n\t  brighter: function(k) {\n\t    k = k == null ? brighter : Math.pow(brighter, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  darker: function(k) {\n\t    k = k == null ? darker : Math.pow(darker, k);\n\t    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t  },\n\t  rgb: function() {\n\t    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t        l = +this.l,\n\t        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t        cosh = Math.cos(h),\n\t        sinh = Math.sin(h);\n\t    return new Rgb(\n\t      255 * (l + a * (A * cosh + B * sinh)),\n\t      255 * (l + a * (C * cosh + D * sinh)),\n\t      255 * (l + a * (E * cosh)),\n\t      this.opacity\n\t    );\n\t  }\n\t}));\n\t\n\tfunction basis$1(t1, v0, v1, v2, v3) {\n\t  var t2 = t1 * t1, t3 = t2 * t1;\n\t  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t      + (4 - 6 * t2 + 3 * t3) * v1\n\t      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t      + t3 * v3) / 6;\n\t}\n\t\n\tvar basis$2 = function(values) {\n\t  var n = values.length - 1;\n\t  return function(t) {\n\t    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t        v1 = values[i],\n\t        v2 = values[i + 1],\n\t        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar basisClosed$1 = function(values) {\n\t  var n = values.length;\n\t  return function(t) {\n\t    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t        v0 = values[(i + n - 1) % n],\n\t        v1 = values[i % n],\n\t        v2 = values[(i + 1) % n],\n\t        v3 = values[(i + 2) % n];\n\t    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t  };\n\t};\n\t\n\tvar constant$3 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction linear$1(a, d) {\n\t  return function(t) {\n\t    return a + t * d;\n\t  };\n\t}\n\t\n\tfunction exponential$1(a, b, y) {\n\t  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t    return Math.pow(a + t * b, y);\n\t  };\n\t}\n\t\n\tfunction hue(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tfunction gamma(y) {\n\t  return (y = +y) === 1 ? nogamma : function(a, b) {\n\t    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n\t  };\n\t}\n\t\n\tfunction nogamma(a, b) {\n\t  var d = b - a;\n\t  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n\t}\n\t\n\tvar interpolateRgb = (function rgbGamma(y) {\n\t  var color$$1 = gamma(y);\n\t\n\t  function rgb$$1(start, end) {\n\t    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n\t        g = color$$1(start.g, end.g),\n\t        b = color$$1(start.b, end.b),\n\t        opacity = color$$1(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.r = r(t);\n\t      start.g = g(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  rgb$$1.gamma = rgbGamma;\n\t\n\t  return rgb$$1;\n\t})(1);\n\t\n\tfunction rgbSpline(spline) {\n\t  return function(colors) {\n\t    var n = colors.length,\n\t        r = new Array(n),\n\t        g = new Array(n),\n\t        b = new Array(n),\n\t        i, color$$1;\n\t    for (i = 0; i < n; ++i) {\n\t      color$$1 = rgb(colors[i]);\n\t      r[i] = color$$1.r || 0;\n\t      g[i] = color$$1.g || 0;\n\t      b[i] = color$$1.b || 0;\n\t    }\n\t    r = spline(r);\n\t    g = spline(g);\n\t    b = spline(b);\n\t    color$$1.opacity = 1;\n\t    return function(t) {\n\t      color$$1.r = r(t);\n\t      color$$1.g = g(t);\n\t      color$$1.b = b(t);\n\t      return color$$1 + \"\";\n\t    };\n\t  };\n\t}\n\t\n\tvar rgbBasis = rgbSpline(basis$2);\n\tvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\tvar array$1 = function(a, b) {\n\t  var nb = b ? b.length : 0,\n\t      na = a ? Math.min(nb, a.length) : 0,\n\t      x = new Array(nb),\n\t      c = new Array(nb),\n\t      i;\n\t\n\t  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t  for (; i < nb; ++i) c[i] = b[i];\n\t\n\t  return function(t) {\n\t    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar date = function(a, b) {\n\t  var d = new Date;\n\t  return a = +a, b -= a, function(t) {\n\t    return d.setTime(a + b * t), d;\n\t  };\n\t};\n\t\n\tvar interpolateNumber = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return a + b * t;\n\t  };\n\t};\n\t\n\tvar object = function(a, b) {\n\t  var i = {},\n\t      c = {},\n\t      k;\n\t\n\t  if (a === null || typeof a !== \"object\") a = {};\n\t  if (b === null || typeof b !== \"object\") b = {};\n\t\n\t  for (k in b) {\n\t    if (k in a) {\n\t      i[k] = interpolate(a[k], b[k]);\n\t    } else {\n\t      c[k] = b[k];\n\t    }\n\t  }\n\t\n\t  return function(t) {\n\t    for (k in i) c[k] = i[k](t);\n\t    return c;\n\t  };\n\t};\n\t\n\tvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\tvar reB = new RegExp(reA.source, \"g\");\n\t\n\tfunction zero(b) {\n\t  return function() {\n\t    return b;\n\t  };\n\t}\n\t\n\tfunction one(b) {\n\t  return function(t) {\n\t    return b(t) + \"\";\n\t  };\n\t}\n\t\n\tvar interpolateString = function(a, b) {\n\t  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t      am, // current match in a\n\t      bm, // current match in b\n\t      bs, // string preceding current number in b, if any\n\t      i = -1, // index in s\n\t      s = [], // string constants and placeholders\n\t      q = []; // number interpolators\n\t\n\t  // Coerce inputs to strings.\n\t  a = a + \"\", b = b + \"\";\n\t\n\t  // Interpolate pairs of numbers in a & b.\n\t  while ((am = reA.exec(a))\n\t      && (bm = reB.exec(b))) {\n\t    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t      bs = b.slice(bi, bs);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t      if (s[i]) s[i] += bm; // coalesce with previous string\n\t      else s[++i] = bm;\n\t    } else { // interpolate non-matching numbers\n\t      s[++i] = null;\n\t      q.push({i: i, x: interpolateNumber(am, bm)});\n\t    }\n\t    bi = reB.lastIndex;\n\t  }\n\t\n\t  // Add remains of b.\n\t  if (bi < b.length) {\n\t    bs = b.slice(bi);\n\t    if (s[i]) s[i] += bs; // coalesce with previous string\n\t    else s[++i] = bs;\n\t  }\n\t\n\t  // Special optimization for only a single match.\n\t  // Otherwise, interpolate each of the numbers and rejoin the string.\n\t  return s.length < 2 ? (q[0]\n\t      ? one(q[0].x)\n\t      : zero(b))\n\t      : (b = q.length, function(t) {\n\t          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t          return s.join(\"\");\n\t        });\n\t};\n\t\n\tvar interpolate = function(a, b) {\n\t  var t = typeof b, c;\n\t  return b == null || t === \"boolean\" ? constant$3(b)\n\t      : (t === \"number\" ? interpolateNumber\n\t      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t      : b instanceof color ? interpolateRgb\n\t      : b instanceof Date ? date\n\t      : Array.isArray(b) ? array$1\n\t      : isNaN(b) ? object\n\t      : interpolateNumber)(a, b);\n\t};\n\t\n\tvar interpolateRound = function(a, b) {\n\t  return a = +a, b -= a, function(t) {\n\t    return Math.round(a + b * t);\n\t  };\n\t};\n\t\n\tvar degrees = 180 / Math.PI;\n\t\n\tvar identity$2 = {\n\t  translateX: 0,\n\t  translateY: 0,\n\t  rotate: 0,\n\t  skewX: 0,\n\t  scaleX: 1,\n\t  scaleY: 1\n\t};\n\t\n\tvar decompose = function(a, b, c, d, e, f) {\n\t  var scaleX, scaleY, skewX;\n\t  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t  return {\n\t    translateX: e,\n\t    translateY: f,\n\t    rotate: Math.atan2(b, a) * degrees,\n\t    skewX: Math.atan(skewX) * degrees,\n\t    scaleX: scaleX,\n\t    scaleY: scaleY\n\t  };\n\t};\n\t\n\tvar cssNode;\n\tvar cssRoot;\n\tvar cssView;\n\tvar svgNode;\n\t\n\tfunction parseCss(value) {\n\t  if (value === \"none\") return identity$2;\n\t  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t  cssNode.style.transform = value;\n\t  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t  cssRoot.removeChild(cssNode);\n\t  value = value.slice(7, -1).split(\",\");\n\t  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t}\n\t\n\tfunction parseSvg(value) {\n\t  if (value == null) return identity$2;\n\t  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t  svgNode.setAttribute(\"transform\", value);\n\t  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t  value = value.matrix;\n\t  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t}\n\t\n\tfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t  function pop(s) {\n\t    return s.length ? s.pop() + \" \" : \"\";\n\t  }\n\t\n\t  function translate(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb || yb) {\n\t      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t    }\n\t  }\n\t\n\t  function rotate(a, b, s, q) {\n\t    if (a !== b) {\n\t      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"rotate(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function skewX(a, b, s, q) {\n\t    if (a !== b) {\n\t      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t    } else if (b) {\n\t      s.push(pop(s) + \"skewX(\" + b + degParen);\n\t    }\n\t  }\n\t\n\t  function scale(xa, ya, xb, yb, s, q) {\n\t    if (xa !== xb || ya !== yb) {\n\t      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t    } else if (xb !== 1 || yb !== 1) {\n\t      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t    }\n\t  }\n\t\n\t  return function(a, b) {\n\t    var s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t    a = parse(a), b = parse(b);\n\t    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t    rotate(a.rotate, b.rotate, s, q);\n\t    skewX(a.skewX, b.skewX, s, q);\n\t    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t    a = b = null; // gc\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  };\n\t}\n\t\n\tvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\tvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\tvar rho = Math.SQRT2;\n\tvar rho2 = 2;\n\tvar rho4 = 4;\n\tvar epsilon2 = 1e-12;\n\t\n\tfunction cosh(x) {\n\t  return ((x = Math.exp(x)) + 1 / x) / 2;\n\t}\n\t\n\tfunction sinh(x) {\n\t  return ((x = Math.exp(x)) - 1 / x) / 2;\n\t}\n\t\n\tfunction tanh(x) {\n\t  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t}\n\t\n\t// p0 = [ux0, uy0, w0]\n\t// p1 = [ux1, uy1, w1]\n\tvar interpolateZoom = function(p0, p1) {\n\t  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t      dx = ux1 - ux0,\n\t      dy = uy1 - uy0,\n\t      d2 = dx * dx + dy * dy,\n\t      i,\n\t      S;\n\t\n\t  // Special case for u0 ≅ u1.\n\t  if (d2 < epsilon2) {\n\t    S = Math.log(w1 / w0) / rho;\n\t    i = function(t) {\n\t      return [\n\t        ux0 + t * dx,\n\t        uy0 + t * dy,\n\t        w0 * Math.exp(rho * t * S)\n\t      ];\n\t    };\n\t  }\n\t\n\t  // General case.\n\t  else {\n\t    var d1 = Math.sqrt(d2),\n\t        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t    S = (r1 - r0) / rho;\n\t    i = function(t) {\n\t      var s = t * S,\n\t          coshr0 = cosh(r0),\n\t          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t      return [\n\t        ux0 + u * dx,\n\t        uy0 + u * dy,\n\t        w0 * coshr0 / cosh(rho * s + r0)\n\t      ];\n\t    };\n\t  }\n\t\n\t  i.duration = S * 1000;\n\t\n\t  return i;\n\t};\n\t\n\tfunction hsl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n\t        s = nogamma(start.s, end.s),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.s = s(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hsl$2 = hsl$1(hue);\n\tvar hslLong = hsl$1(nogamma);\n\t\n\tfunction lab$1(start, end) {\n\t  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t      a = nogamma(start.a, end.a),\n\t      b = nogamma(start.b, end.b),\n\t      opacity = nogamma(start.opacity, end.opacity);\n\t  return function(t) {\n\t    start.l = l(t);\n\t    start.a = a(t);\n\t    start.b = b(t);\n\t    start.opacity = opacity(t);\n\t    return start + \"\";\n\t  };\n\t}\n\t\n\tfunction hcl$1(hue$$1) {\n\t  return function(start, end) {\n\t    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n\t        c = nogamma(start.c, end.c),\n\t        l = nogamma(start.l, end.l),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.h = h(t);\n\t      start.c = c(t);\n\t      start.l = l(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t}\n\t\n\tvar hcl$2 = hcl$1(hue);\n\tvar hclLong = hcl$1(nogamma);\n\t\n\tfunction cubehelix$1(hue$$1) {\n\t  return (function cubehelixGamma(y) {\n\t    y = +y;\n\t\n\t    function cubehelix$$1(start, end) {\n\t      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(Math.pow(t, y));\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    cubehelix$$1.gamma = cubehelixGamma;\n\t\n\t    return cubehelix$$1;\n\t  })(1);\n\t}\n\t\n\tvar cubehelix$2 = cubehelix$1(hue);\n\tvar cubehelixLong = cubehelix$1(nogamma);\n\t\n\tvar quantize = function(interpolator, n) {\n\t  var samples = new Array(n);\n\t  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t  return samples;\n\t};\n\t\n\tvar noop$1 = {value: function() {}};\n\t\n\tfunction dispatch() {\n\t  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t    _[t] = [];\n\t  }\n\t  return new Dispatch(_);\n\t}\n\t\n\tfunction Dispatch(_) {\n\t  this._ = _;\n\t}\n\t\n\tfunction parseTypenames(typenames, types) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tDispatch.prototype = dispatch.prototype = {\n\t  constructor: Dispatch,\n\t  on: function(typename, callback) {\n\t    var _ = this._,\n\t        T = parseTypenames(typename + \"\", _),\n\t        t,\n\t        i = -1,\n\t        n = T.length;\n\t\n\t    // If no callback was specified, return the callback of the given type and name.\n\t    if (arguments.length < 2) {\n\t      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t      return;\n\t    }\n\t\n\t    // If a type was specified, set the callback for the given type and name.\n\t    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    while (++i < n) {\n\t      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n\t      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n\t    }\n\t\n\t    return this;\n\t  },\n\t  copy: function() {\n\t    var copy = {}, _ = this._;\n\t    for (var t in _) copy[t] = _[t].slice();\n\t    return new Dispatch(copy);\n\t  },\n\t  call: function(type, that) {\n\t    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  },\n\t  apply: function(type, that, args) {\n\t    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t  }\n\t};\n\t\n\tfunction get(type, name) {\n\t  for (var i = 0, n = type.length, c; i < n; ++i) {\n\t    if ((c = type[i]).name === name) {\n\t      return c.value;\n\t    }\n\t  }\n\t}\n\t\n\tfunction set$2(type, name, callback) {\n\t  for (var i = 0, n = type.length; i < n; ++i) {\n\t    if (type[i].name === name) {\n\t      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t      break;\n\t    }\n\t  }\n\t  if (callback != null) type.push({name: name, value: callback});\n\t  return type;\n\t}\n\t\n\tfunction objectConverter(columns) {\n\t  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t    return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t  }).join(\",\") + \"}\");\n\t}\n\t\n\tfunction customConverter(columns, f) {\n\t  var object = objectConverter(columns);\n\t  return function(row, i) {\n\t    return f(object(row), i, columns);\n\t  };\n\t}\n\t\n\t// Compute unique columns in order of discovery.\n\tfunction inferColumns(rows) {\n\t  var columnSet = Object.create(null),\n\t      columns = [];\n\t\n\t  rows.forEach(function(row) {\n\t    for (var column in row) {\n\t      if (!(column in columnSet)) {\n\t        columns.push(columnSet[column] = column);\n\t      }\n\t    }\n\t  });\n\t\n\t  return columns;\n\t}\n\t\n\tvar dsv = function(delimiter) {\n\t  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t      delimiterCode = delimiter.charCodeAt(0);\n\t\n\t  function parse(text, f) {\n\t    var convert, columns, rows = parseRows(text, function(row, i) {\n\t      if (convert) return convert(row, i - 1);\n\t      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t    });\n\t    rows.columns = columns;\n\t    return rows;\n\t  }\n\t\n\t  function parseRows(text, f) {\n\t    var EOL = {}, // sentinel value for end-of-line\n\t        EOF = {}, // sentinel value for end-of-file\n\t        rows = [], // output rows\n\t        N = text.length,\n\t        I = 0, // current character index\n\t        n = 0, // the current line number\n\t        t, // the current token\n\t        eol; // is the current token followed by EOL?\n\t\n\t    function token() {\n\t      if (I >= N) return EOF; // special case: end of file\n\t      if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t      // special case: quotes\n\t      var j = I, c;\n\t      if (text.charCodeAt(j) === 34) {\n\t        var i = j;\n\t        while (i++ < N) {\n\t          if (text.charCodeAt(i) === 34) {\n\t            if (text.charCodeAt(i + 1) !== 34) break;\n\t            ++i;\n\t          }\n\t        }\n\t        I = i + 2;\n\t        c = text.charCodeAt(i + 1);\n\t        if (c === 13) {\n\t          eol = true;\n\t          if (text.charCodeAt(i + 2) === 10) ++I;\n\t        } else if (c === 10) {\n\t          eol = true;\n\t        }\n\t        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t      }\n\t\n\t      // common case: find next delimiter or newline\n\t      while (I < N) {\n\t        var k = 1;\n\t        c = text.charCodeAt(I++);\n\t        if (c === 10) eol = true; // \\n\n\t        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t        else if (c !== delimiterCode) continue;\n\t        return text.slice(j, I - k);\n\t      }\n\t\n\t      // special case: last token before EOF\n\t      return text.slice(j);\n\t    }\n\t\n\t    while ((t = token()) !== EOF) {\n\t      var a = [];\n\t      while (t !== EOL && t !== EOF) {\n\t        a.push(t);\n\t        t = token();\n\t      }\n\t      if (f && (a = f(a, n++)) == null) continue;\n\t      rows.push(a);\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  function format(rows, columns) {\n\t    if (columns == null) columns = inferColumns(rows);\n\t    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t      return columns.map(function(column) {\n\t        return formatValue(row[column]);\n\t      }).join(delimiter);\n\t    })).join(\"\\n\");\n\t  }\n\t\n\t  function formatRows(rows) {\n\t    return rows.map(formatRow).join(\"\\n\");\n\t  }\n\t\n\t  function formatRow(row) {\n\t    return row.map(formatValue).join(delimiter);\n\t  }\n\t\n\t  function formatValue(text) {\n\t    return text == null ? \"\"\n\t        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t        : text;\n\t  }\n\t\n\t  return {\n\t    parse: parse,\n\t    parseRows: parseRows,\n\t    format: format,\n\t    formatRows: formatRows\n\t  };\n\t};\n\t\n\tvar csv = dsv(\",\");\n\t\n\tvar csvParse = csv.parse;\n\tvar csvParseRows = csv.parseRows;\n\tvar csvFormat = csv.format;\n\tvar csvFormatRows = csv.formatRows;\n\t\n\tvar tsv = dsv(\"\\t\");\n\t\n\tvar tsvParse = tsv.parse;\n\tvar tsvParseRows = tsv.parseRows;\n\tvar tsvFormat = tsv.format;\n\tvar tsvFormatRows = tsv.formatRows;\n\t\n\tvar request = function(url, callback) {\n\t  var request,\n\t      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t      mimeType,\n\t      headers = map$1(),\n\t      xhr = new XMLHttpRequest,\n\t      user = null,\n\t      password = null,\n\t      response,\n\t      responseType,\n\t      timeout = 0;\n\t\n\t  // If IE does not support CORS, use XDomainRequest.\n\t  if (typeof XDomainRequest !== \"undefined\"\n\t      && !(\"withCredentials\" in xhr)\n\t      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t  \"onload\" in xhr\n\t      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t  function respond(o) {\n\t    var status = xhr.status, result;\n\t    if (!status && hasResponse(xhr)\n\t        || status >= 200 && status < 300\n\t        || status === 304) {\n\t      if (response) {\n\t        try {\n\t          result = response.call(request, xhr);\n\t        } catch (e) {\n\t          event.call(\"error\", request, e);\n\t          return;\n\t        }\n\t      } else {\n\t        result = xhr;\n\t      }\n\t      event.call(\"load\", request, result);\n\t    } else {\n\t      event.call(\"error\", request, o);\n\t    }\n\t  }\n\t\n\t  xhr.onprogress = function(e) {\n\t    event.call(\"progress\", request, e);\n\t  };\n\t\n\t  request = {\n\t    header: function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers.get(name);\n\t      if (value == null) headers.remove(name);\n\t      else headers.set(name, value + \"\");\n\t      return request;\n\t    },\n\t\n\t    // If mimeType is non-null and no Accept header is set, a default is used.\n\t    mimeType: function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return request;\n\t    },\n\t\n\t    // Specifies what type the response value should take;\n\t    // for instance, arraybuffer, blob, document, or text.\n\t    responseType: function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return request;\n\t    },\n\t\n\t    timeout: function(value) {\n\t      if (!arguments.length) return timeout;\n\t      timeout = +value;\n\t      return request;\n\t    },\n\t\n\t    user: function(value) {\n\t      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    password: function(value) {\n\t      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t    },\n\t\n\t    // Specify how to convert the response content to a specific type;\n\t    // changes the callback value on \"load\" events.\n\t    response: function(value) {\n\t      response = value;\n\t      return request;\n\t    },\n\t\n\t    // Alias for send(\"GET\", …).\n\t    get: function(data, callback) {\n\t      return request.send(\"GET\", data, callback);\n\t    },\n\t\n\t    // Alias for send(\"POST\", …).\n\t    post: function(data, callback) {\n\t      return request.send(\"POST\", data, callback);\n\t    },\n\t\n\t    // If callback is non-null, it will be used for error and load events.\n\t    send: function(method, data, callback) {\n\t      xhr.open(method, url, true, user, password);\n\t      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t      if (responseType != null) xhr.responseType = responseType;\n\t      if (timeout > 0) xhr.timeout = timeout;\n\t      if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t      event.call(\"beforesend\", request, xhr);\n\t      xhr.send(data == null ? null : data);\n\t      return request;\n\t    },\n\t\n\t    abort: function() {\n\t      xhr.abort();\n\t      return request;\n\t    },\n\t\n\t    on: function() {\n\t      var value = event.on.apply(event, arguments);\n\t      return value === event ? request : value;\n\t    }\n\t  };\n\t\n\t  if (callback != null) {\n\t    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t    return request.get(callback);\n\t  }\n\t\n\t  return request;\n\t};\n\t\n\tfunction fixCallback(callback) {\n\t  return function(error, xhr) {\n\t    callback(error == null ? xhr : null);\n\t  };\n\t}\n\t\n\tfunction hasResponse(xhr) {\n\t  var type = xhr.responseType;\n\t  return type && type !== \"text\"\n\t      ? xhr.response // null on error\n\t      : xhr.responseText; // \"\" on error\n\t}\n\t\n\tvar type = function(defaultMimeType, response) {\n\t  return function(url, callback) {\n\t    var r = request(url).mimeType(defaultMimeType).response(response);\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return r.get(callback);\n\t    }\n\t    return r;\n\t  };\n\t};\n\t\n\tvar html = type(\"text/html\", function(xhr) {\n\t  return document.createRange().createContextualFragment(xhr.responseText);\n\t});\n\t\n\tvar json = type(\"application/json\", function(xhr) {\n\t  return JSON.parse(xhr.responseText);\n\t});\n\t\n\tvar text = type(\"text/plain\", function(xhr) {\n\t  return xhr.responseText;\n\t});\n\t\n\tvar xml = type(\"application/xml\", function(xhr) {\n\t  var xml = xhr.responseXML;\n\t  if (!xml) throw new Error(\"parse error\");\n\t  return xml;\n\t});\n\t\n\tvar dsv$1 = function(defaultMimeType, parse) {\n\t  return function(url, row, callback) {\n\t    if (arguments.length < 3) callback = row, row = null;\n\t    var r = request(url).mimeType(defaultMimeType);\n\t    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t    r.row(row);\n\t    return callback ? r.get(callback) : r;\n\t  };\n\t};\n\t\n\tfunction responseOf(parse, row) {\n\t  return function(request$$1) {\n\t    return parse(request$$1.responseText, row);\n\t  };\n\t}\n\t\n\tvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\tvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\tvar frame = 0;\n\tvar timeout = 0;\n\tvar interval = 0;\n\tvar pokeDelay = 1000;\n\tvar taskHead;\n\tvar taskTail;\n\tvar clockLast = 0;\n\tvar clockNow = 0;\n\tvar clockSkew = 0;\n\tvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\tvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\t\n\tfunction now() {\n\t  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t}\n\t\n\tfunction clearNow() {\n\t  clockNow = 0;\n\t}\n\t\n\tfunction Timer() {\n\t  this._call =\n\t  this._time =\n\t  this._next = null;\n\t}\n\t\n\tTimer.prototype = timer.prototype = {\n\t  constructor: Timer,\n\t  restart: function(callback, delay, time) {\n\t    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t    if (!this._next && taskTail !== this) {\n\t      if (taskTail) taskTail._next = this;\n\t      else taskHead = this;\n\t      taskTail = this;\n\t    }\n\t    this._call = callback;\n\t    this._time = time;\n\t    sleep();\n\t  },\n\t  stop: function() {\n\t    if (this._call) {\n\t      this._call = null;\n\t      this._time = Infinity;\n\t      sleep();\n\t    }\n\t  }\n\t};\n\t\n\tfunction timer(callback, delay, time) {\n\t  var t = new Timer;\n\t  t.restart(callback, delay, time);\n\t  return t;\n\t}\n\t\n\tfunction timerFlush() {\n\t  now(); // Get the current time, if not already set.\n\t  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t  var t = taskHead, e;\n\t  while (t) {\n\t    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t    t = t._next;\n\t  }\n\t  --frame;\n\t}\n\t\n\tfunction wake() {\n\t  clockNow = (clockLast = clock.now()) + clockSkew;\n\t  frame = timeout = 0;\n\t  try {\n\t    timerFlush();\n\t  } finally {\n\t    frame = 0;\n\t    nap();\n\t    clockNow = 0;\n\t  }\n\t}\n\t\n\tfunction poke$1() {\n\t  var now = clock.now(), delay = now - clockLast;\n\t  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t}\n\t\n\tfunction nap() {\n\t  var t0, t1 = taskHead, t2, time = Infinity;\n\t  while (t1) {\n\t    if (t1._call) {\n\t      if (time > t1._time) time = t1._time;\n\t      t0 = t1, t1 = t1._next;\n\t    } else {\n\t      t2 = t1._next, t1._next = null;\n\t      t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t    }\n\t  }\n\t  taskTail = t0;\n\t  sleep(time);\n\t}\n\t\n\tfunction sleep(time) {\n\t  if (frame) return; // Soonest alarm already set, or will be.\n\t  if (timeout) timeout = clearTimeout(timeout);\n\t  var delay = time - clockNow;\n\t  if (delay > 24) {\n\t    if (time < Infinity) timeout = setTimeout(wake, delay);\n\t    if (interval) interval = clearInterval(interval);\n\t  } else {\n\t    if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t    frame = 1, setFrame(wake);\n\t  }\n\t}\n\t\n\tvar timeout$1 = function(callback, delay, time) {\n\t  var t = new Timer;\n\t  delay = delay == null ? 0 : +delay;\n\t  t.restart(function(elapsed) {\n\t    t.stop();\n\t    callback(elapsed + delay);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar interval$1 = function(callback, delay, time) {\n\t  var t = new Timer, total = delay;\n\t  if (delay == null) return t.restart(callback, delay, time), t;\n\t  delay = +delay, time = time == null ? now() : +time;\n\t  t.restart(function tick(elapsed) {\n\t    elapsed += total;\n\t    t.restart(tick, total += delay, time);\n\t    callback(elapsed);\n\t  }, delay, time);\n\t  return t;\n\t};\n\t\n\tvar t0$1 = new Date;\n\tvar t1$1 = new Date;\n\t\n\tfunction newInterval(floori, offseti, count, field) {\n\t\n\t  function interval(date) {\n\t    return floori(date = new Date(+date)), date;\n\t  }\n\t\n\t  interval.floor = interval;\n\t\n\t  interval.ceil = function(date) {\n\t    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t  };\n\t\n\t  interval.round = function(date) {\n\t    var d0 = interval(date),\n\t        d1 = interval.ceil(date);\n\t    return date - d0 < d1 - date ? d0 : d1;\n\t  };\n\t\n\t  interval.offset = function(date, step) {\n\t    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t  };\n\t\n\t  interval.range = function(start, stop, step) {\n\t    var range = [];\n\t    start = interval.ceil(start);\n\t    step = step == null ? 1 : Math.floor(step);\n\t    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t    return range;\n\t  };\n\t\n\t  interval.filter = function(test) {\n\t    return newInterval(function(date) {\n\t      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n\t    }, function(date, step) {\n\t      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n\t    });\n\t  };\n\t\n\t  if (count) {\n\t    interval.count = function(start, end) {\n\t      t0$1.setTime(+start), t1$1.setTime(+end);\n\t      floori(t0$1), floori(t1$1);\n\t      return Math.floor(count(t0$1, t1$1));\n\t    };\n\t\n\t    interval.every = function(step) {\n\t      step = Math.floor(step);\n\t      return !isFinite(step) || !(step > 0) ? null\n\t          : !(step > 1) ? interval\n\t          : interval.filter(field\n\t              ? function(d) { return field(d) % step === 0; }\n\t              : function(d) { return interval.count(0, d) % step === 0; });\n\t    };\n\t  }\n\t\n\t  return interval;\n\t}\n\t\n\tvar millisecond = newInterval(function() {\n\t  // noop\n\t}, function(date, step) {\n\t  date.setTime(+date + step);\n\t}, function(start, end) {\n\t  return end - start;\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tmillisecond.every = function(k) {\n\t  k = Math.floor(k);\n\t  if (!isFinite(k) || !(k > 0)) return null;\n\t  if (!(k > 1)) return millisecond;\n\t  return newInterval(function(date) {\n\t    date.setTime(Math.floor(date / k) * k);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * k);\n\t  }, function(start, end) {\n\t    return (end - start) / k;\n\t  });\n\t};\n\t\n\tvar milliseconds = millisecond.range;\n\t\n\tvar durationSecond = 1e3;\n\tvar durationMinute = 6e4;\n\tvar durationHour = 36e5;\n\tvar durationDay = 864e5;\n\tvar durationWeek = 6048e5;\n\t\n\tvar second = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationSecond);\n\t}, function(start, end) {\n\t  return (end - start) / durationSecond;\n\t}, function(date) {\n\t  return date.getUTCSeconds();\n\t});\n\t\n\tvar seconds = second.range;\n\t\n\tvar minute = newInterval(function(date) {\n\t  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getMinutes();\n\t});\n\t\n\tvar minutes = minute.range;\n\t\n\tvar hour = newInterval(function(date) {\n\t  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t  if (offset < 0) offset += durationHour;\n\t  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getHours();\n\t});\n\t\n\tvar hours = hour.range;\n\t\n\tvar day = newInterval(function(date) {\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setDate(date.getDate() + step);\n\t}, function(start, end) {\n\t  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t}, function(date) {\n\t  return date.getDate() - 1;\n\t});\n\t\n\tvar days = day.range;\n\t\n\tfunction weekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t  });\n\t}\n\t\n\tvar sunday = weekday(0);\n\tvar monday = weekday(1);\n\tvar tuesday = weekday(2);\n\tvar wednesday = weekday(3);\n\tvar thursday = weekday(4);\n\tvar friday = weekday(5);\n\tvar saturday = weekday(6);\n\t\n\tvar sundays = sunday.range;\n\tvar mondays = monday.range;\n\tvar tuesdays = tuesday.range;\n\tvar wednesdays = wednesday.range;\n\tvar thursdays = thursday.range;\n\tvar fridays = friday.range;\n\tvar saturdays = saturday.range;\n\t\n\tvar month = newInterval(function(date) {\n\t  date.setDate(1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setMonth(date.getMonth() + step);\n\t}, function(start, end) {\n\t  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getMonth();\n\t});\n\t\n\tvar months = month.range;\n\t\n\tvar year = newInterval(function(date) {\n\t  date.setMonth(0, 1);\n\t  date.setHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setFullYear(date.getFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getFullYear() - start.getFullYear();\n\t}, function(date) {\n\t  return date.getFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tyear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar years = year.range;\n\t\n\tvar utcMinute = newInterval(function(date) {\n\t  date.setUTCSeconds(0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationMinute);\n\t}, function(start, end) {\n\t  return (end - start) / durationMinute;\n\t}, function(date) {\n\t  return date.getUTCMinutes();\n\t});\n\t\n\tvar utcMinutes = utcMinute.range;\n\t\n\tvar utcHour = newInterval(function(date) {\n\t  date.setUTCMinutes(0, 0, 0);\n\t}, function(date, step) {\n\t  date.setTime(+date + step * durationHour);\n\t}, function(start, end) {\n\t  return (end - start) / durationHour;\n\t}, function(date) {\n\t  return date.getUTCHours();\n\t});\n\t\n\tvar utcHours = utcHour.range;\n\t\n\tvar utcDay = newInterval(function(date) {\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCDate(date.getUTCDate() + step);\n\t}, function(start, end) {\n\t  return (end - start) / durationDay;\n\t}, function(date) {\n\t  return date.getUTCDate() - 1;\n\t});\n\t\n\tvar utcDays = utcDay.range;\n\t\n\tfunction utcWeekday(i) {\n\t  return newInterval(function(date) {\n\t    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step * 7);\n\t  }, function(start, end) {\n\t    return (end - start) / durationWeek;\n\t  });\n\t}\n\t\n\tvar utcSunday = utcWeekday(0);\n\tvar utcMonday = utcWeekday(1);\n\tvar utcTuesday = utcWeekday(2);\n\tvar utcWednesday = utcWeekday(3);\n\tvar utcThursday = utcWeekday(4);\n\tvar utcFriday = utcWeekday(5);\n\tvar utcSaturday = utcWeekday(6);\n\t\n\tvar utcSundays = utcSunday.range;\n\tvar utcMondays = utcMonday.range;\n\tvar utcTuesdays = utcTuesday.range;\n\tvar utcWednesdays = utcWednesday.range;\n\tvar utcThursdays = utcThursday.range;\n\tvar utcFridays = utcFriday.range;\n\tvar utcSaturdays = utcSaturday.range;\n\t\n\tvar utcMonth = newInterval(function(date) {\n\t  date.setUTCDate(1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCMonth(date.getUTCMonth() + step);\n\t}, function(start, end) {\n\t  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t}, function(date) {\n\t  return date.getUTCMonth();\n\t});\n\t\n\tvar utcMonths = utcMonth.range;\n\t\n\tvar utcYear = newInterval(function(date) {\n\t  date.setUTCMonth(0, 1);\n\t  date.setUTCHours(0, 0, 0, 0);\n\t}, function(date, step) {\n\t  date.setUTCFullYear(date.getUTCFullYear() + step);\n\t}, function(start, end) {\n\t  return end.getUTCFullYear() - start.getUTCFullYear();\n\t}, function(date) {\n\t  return date.getUTCFullYear();\n\t});\n\t\n\t// An optimized implementation for this simple case.\n\tutcYear.every = function(k) {\n\t  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t  });\n\t};\n\t\n\tvar utcYears = utcYear.range;\n\t\n\t// Computes the decimal coefficient and exponent of the specified number x with\n\t// significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t// For example, formatDecimal(1.23) returns [\"123\", 0].\n\tvar formatDecimal = function(x, p) {\n\t  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t  var i, coefficient = x.slice(0, i);\n\t\n\t  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t  return [\n\t    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t    +x.slice(i + 1)\n\t  ];\n\t};\n\t\n\tvar exponent$1 = function(x) {\n\t  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t};\n\t\n\tvar formatGroup = function(grouping, thousands) {\n\t  return function(value, width) {\n\t    var i = value.length,\n\t        t = [],\n\t        j = 0,\n\t        g = grouping[0],\n\t        length = 0;\n\t\n\t    while (i > 0 && g > 0) {\n\t      if (length + g + 1 > width) g = Math.max(1, width - length);\n\t      t.push(value.substring(i -= g, i + g));\n\t      if ((length += g + 1) > width) break;\n\t      g = grouping[j = (j + 1) % grouping.length];\n\t    }\n\t\n\t    return t.reverse().join(thousands);\n\t  };\n\t};\n\t\n\tvar formatDefault = function(x, p) {\n\t  x = x.toPrecision(p);\n\t\n\t  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t    switch (x[i]) {\n\t      case \".\": i0 = i1 = i; break;\n\t      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t      case \"e\": break out;\n\t      default: if (i0 > 0) i0 = 0; break;\n\t    }\n\t  }\n\t\n\t  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t};\n\t\n\tvar prefixExponent;\n\t\n\tvar formatPrefixAuto = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1],\n\t      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t      n = coefficient.length;\n\t  return i === n ? coefficient\n\t      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t};\n\t\n\tvar formatRounded = function(x, p) {\n\t  var d = formatDecimal(x, p);\n\t  if (!d) return x + \"\";\n\t  var coefficient = d[0],\n\t      exponent = d[1];\n\t  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t};\n\t\n\tvar formatTypes = {\n\t  \"\": formatDefault,\n\t  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t  \"b\": function(x) { return Math.round(x).toString(2); },\n\t  \"c\": function(x) { return x + \"\"; },\n\t  \"d\": function(x) { return Math.round(x).toString(10); },\n\t  \"e\": function(x, p) { return x.toExponential(p); },\n\t  \"f\": function(x, p) { return x.toFixed(p); },\n\t  \"g\": function(x, p) { return x.toPrecision(p); },\n\t  \"o\": function(x) { return Math.round(x).toString(8); },\n\t  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t  \"r\": formatRounded,\n\t  \"s\": formatPrefixAuto,\n\t  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t  \"x\": function(x) { return Math.round(x).toString(16); }\n\t};\n\t\n\t// [[fill]align][sign][symbol][0][width][,][.precision][type]\n\tvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\tvar formatSpecifier = function(specifier) {\n\t  return new FormatSpecifier(specifier);\n\t};\n\t\n\tfunction FormatSpecifier(specifier) {\n\t  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t  var match,\n\t      fill = match[1] || \" \",\n\t      align = match[2] || \">\",\n\t      sign = match[3] || \"-\",\n\t      symbol = match[4] || \"\",\n\t      zero = !!match[5],\n\t      width = match[6] && +match[6],\n\t      comma = !!match[7],\n\t      precision = match[8] && +match[8].slice(1),\n\t      type = match[9] || \"\";\n\t\n\t  // The \"n\" type is an alias for \",g\".\n\t  if (type === \"n\") comma = true, type = \"g\";\n\t\n\t  // Map invalid types to the default format.\n\t  else if (!formatTypes[type]) type = \"\";\n\t\n\t  // If zero fill is specified, padding goes after sign and before digits.\n\t  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t  this.fill = fill;\n\t  this.align = align;\n\t  this.sign = sign;\n\t  this.symbol = symbol;\n\t  this.zero = zero;\n\t  this.width = width;\n\t  this.comma = comma;\n\t  this.precision = precision;\n\t  this.type = type;\n\t}\n\t\n\tFormatSpecifier.prototype.toString = function() {\n\t  return this.fill\n\t      + this.align\n\t      + this.sign\n\t      + this.symbol\n\t      + (this.zero ? \"0\" : \"\")\n\t      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t      + (this.comma ? \",\" : \"\")\n\t      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t      + this.type;\n\t};\n\t\n\tvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\tfunction identity$3(x) {\n\t  return x;\n\t}\n\t\n\tvar formatLocale = function(locale) {\n\t  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t      currency = locale.currency,\n\t      decimal = locale.decimal;\n\t\n\t  function newFormat(specifier) {\n\t    specifier = formatSpecifier(specifier);\n\t\n\t    var fill = specifier.fill,\n\t        align = specifier.align,\n\t        sign = specifier.sign,\n\t        symbol = specifier.symbol,\n\t        zero = specifier.zero,\n\t        width = specifier.width,\n\t        comma = specifier.comma,\n\t        precision = specifier.precision,\n\t        type = specifier.type;\n\t\n\t    // Compute the prefix and suffix.\n\t    // For SI-prefix, the suffix is lazily computed.\n\t    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t    // What format function should we use?\n\t    // Is this an integer type?\n\t    // Can this type generate exponential notation?\n\t    var formatType = formatTypes[type],\n\t        maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t    // Set the default precision if not specified,\n\t    // or clamp the specified precision to the supported range.\n\t    // For significant precision, it must be in [1, 21].\n\t    // For fixed precision, it must be in [0, 20].\n\t    precision = precision == null ? (type ? 6 : 12)\n\t        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t        : Math.max(0, Math.min(20, precision));\n\t\n\t    function format(value) {\n\t      var valuePrefix = prefix,\n\t          valueSuffix = suffix,\n\t          i, n, c;\n\t\n\t      if (type === \"c\") {\n\t        valueSuffix = formatType(value) + valueSuffix;\n\t        value = \"\";\n\t      } else {\n\t        value = +value;\n\t\n\t        // Convert negative to positive, and compute the prefix.\n\t        // Note that -0 is not less than 0, but 1 / -0 is!\n\t        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t        // Perform the initial formatting.\n\t        value = formatType(value, precision);\n\t\n\t        // If the original value was negative, it may be rounded to zero during\n\t        // formatting; treat this as (positive) zero.\n\t        if (valueNegative) {\n\t          i = -1, n = value.length;\n\t          valueNegative = false;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                || (type === \"x\" && 96 < c && c < 103)\n\t                || (type === \"X\" && 64 < c && c < 71)) {\n\t              valueNegative = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Compute the prefix and suffix.\n\t        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t        // Break the formatted value into the integer “value” part that can be\n\t        // grouped, and fractional or exponential “suffix” part that is not.\n\t        if (maybeSuffix) {\n\t          i = -1, n = value.length;\n\t          while (++i < n) {\n\t            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t              value = value.slice(0, i);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // If the fill character is not \"0\", grouping is applied before padding.\n\t      if (comma && !zero) value = group(value, Infinity);\n\t\n\t      // Compute the padding.\n\t      var length = valuePrefix.length + value.length + valueSuffix.length,\n\t          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t      // If the fill character is \"0\", grouping is applied after padding.\n\t      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t      // Reconstruct the final output based on the desired alignment.\n\t      switch (align) {\n\t        case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t        case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t      }\n\t      return padding + valuePrefix + value + valueSuffix;\n\t    }\n\t\n\t    format.toString = function() {\n\t      return specifier + \"\";\n\t    };\n\t\n\t    return format;\n\t  }\n\t\n\t  function formatPrefix(specifier, value) {\n\t    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t        k = Math.pow(10, -e),\n\t        prefix = prefixes[8 + e / 3];\n\t    return function(value) {\n\t      return f(k * value) + prefix;\n\t    };\n\t  }\n\t\n\t  return {\n\t    format: newFormat,\n\t    formatPrefix: formatPrefix\n\t  };\n\t};\n\t\n\tvar locale$1;\n\t\n\t\n\t\n\tdefaultLocale({\n\t  decimal: \".\",\n\t  thousands: \",\",\n\t  grouping: [3],\n\t  currency: [\"$\", \"\"]\n\t});\n\t\n\tfunction defaultLocale(definition) {\n\t  locale$1 = formatLocale(definition);\n\t  exports.format = locale$1.format;\n\t  exports.formatPrefix = locale$1.formatPrefix;\n\t  return locale$1;\n\t}\n\t\n\tvar precisionFixed = function(step) {\n\t  return Math.max(0, -exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionPrefix = function(step, value) {\n\t  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t};\n\t\n\tvar precisionRound = function(step, max) {\n\t  step = Math.abs(step), max = Math.abs(max) - step;\n\t  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t};\n\t\n\tfunction localDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t    date.setFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t}\n\t\n\tfunction utcDate(d) {\n\t  if (0 <= d.y && d.y < 100) {\n\t    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t    date.setUTCFullYear(d.y);\n\t    return date;\n\t  }\n\t  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t}\n\t\n\tfunction newYear(y) {\n\t  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t}\n\t\n\tfunction formatLocale$1(locale) {\n\t  var locale_dateTime = locale.dateTime,\n\t      locale_date = locale.date,\n\t      locale_time = locale.time,\n\t      locale_periods = locale.periods,\n\t      locale_weekdays = locale.days,\n\t      locale_shortWeekdays = locale.shortDays,\n\t      locale_months = locale.months,\n\t      locale_shortMonths = locale.shortMonths;\n\t\n\t  var periodRe = formatRe(locale_periods),\n\t      periodLookup = formatLookup(locale_periods),\n\t      weekdayRe = formatRe(locale_weekdays),\n\t      weekdayLookup = formatLookup(locale_weekdays),\n\t      shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t      monthRe = formatRe(locale_months),\n\t      monthLookup = formatLookup(locale_months),\n\t      shortMonthRe = formatRe(locale_shortMonths),\n\t      shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t  var formats = {\n\t    \"a\": formatShortWeekday,\n\t    \"A\": formatWeekday,\n\t    \"b\": formatShortMonth,\n\t    \"B\": formatMonth,\n\t    \"c\": null,\n\t    \"d\": formatDayOfMonth,\n\t    \"e\": formatDayOfMonth,\n\t    \"H\": formatHour24,\n\t    \"I\": formatHour12,\n\t    \"j\": formatDayOfYear,\n\t    \"L\": formatMilliseconds,\n\t    \"m\": formatMonthNumber,\n\t    \"M\": formatMinutes,\n\t    \"p\": formatPeriod,\n\t    \"S\": formatSeconds,\n\t    \"U\": formatWeekNumberSunday,\n\t    \"w\": formatWeekdayNumber,\n\t    \"W\": formatWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatYear,\n\t    \"Y\": formatFullYear,\n\t    \"Z\": formatZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var utcFormats = {\n\t    \"a\": formatUTCShortWeekday,\n\t    \"A\": formatUTCWeekday,\n\t    \"b\": formatUTCShortMonth,\n\t    \"B\": formatUTCMonth,\n\t    \"c\": null,\n\t    \"d\": formatUTCDayOfMonth,\n\t    \"e\": formatUTCDayOfMonth,\n\t    \"H\": formatUTCHour24,\n\t    \"I\": formatUTCHour12,\n\t    \"j\": formatUTCDayOfYear,\n\t    \"L\": formatUTCMilliseconds,\n\t    \"m\": formatUTCMonthNumber,\n\t    \"M\": formatUTCMinutes,\n\t    \"p\": formatUTCPeriod,\n\t    \"S\": formatUTCSeconds,\n\t    \"U\": formatUTCWeekNumberSunday,\n\t    \"w\": formatUTCWeekdayNumber,\n\t    \"W\": formatUTCWeekNumberMonday,\n\t    \"x\": null,\n\t    \"X\": null,\n\t    \"y\": formatUTCYear,\n\t    \"Y\": formatUTCFullYear,\n\t    \"Z\": formatUTCZone,\n\t    \"%\": formatLiteralPercent\n\t  };\n\t\n\t  var parses = {\n\t    \"a\": parseShortWeekday,\n\t    \"A\": parseWeekday,\n\t    \"b\": parseShortMonth,\n\t    \"B\": parseMonth,\n\t    \"c\": parseLocaleDateTime,\n\t    \"d\": parseDayOfMonth,\n\t    \"e\": parseDayOfMonth,\n\t    \"H\": parseHour24,\n\t    \"I\": parseHour24,\n\t    \"j\": parseDayOfYear,\n\t    \"L\": parseMilliseconds,\n\t    \"m\": parseMonthNumber,\n\t    \"M\": parseMinutes,\n\t    \"p\": parsePeriod,\n\t    \"S\": parseSeconds,\n\t    \"U\": parseWeekNumberSunday,\n\t    \"w\": parseWeekdayNumber,\n\t    \"W\": parseWeekNumberMonday,\n\t    \"x\": parseLocaleDate,\n\t    \"X\": parseLocaleTime,\n\t    \"y\": parseYear,\n\t    \"Y\": parseFullYear,\n\t    \"Z\": parseZone,\n\t    \"%\": parseLiteralPercent\n\t  };\n\t\n\t  // These recursive directive definitions must be deferred.\n\t  formats.x = newFormat(locale_date, formats);\n\t  formats.X = newFormat(locale_time, formats);\n\t  formats.c = newFormat(locale_dateTime, formats);\n\t  utcFormats.x = newFormat(locale_date, utcFormats);\n\t  utcFormats.X = newFormat(locale_time, utcFormats);\n\t  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t  function newFormat(specifier, formats) {\n\t    return function(date) {\n\t      var string = [],\n\t          i = -1,\n\t          j = 0,\n\t          n = specifier.length,\n\t          c,\n\t          pad,\n\t          format;\n\t\n\t      if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t      while (++i < n) {\n\t        if (specifier.charCodeAt(i) === 37) {\n\t          string.push(specifier.slice(j, i));\n\t          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t          else pad = c === \"e\" ? \" \" : \"0\";\n\t          if (format = formats[c]) c = format(date, pad);\n\t          string.push(c);\n\t          j = i + 1;\n\t        }\n\t      }\n\t\n\t      string.push(specifier.slice(j, i));\n\t      return string.join(\"\");\n\t    };\n\t  }\n\t\n\t  function newParse(specifier, newDate) {\n\t    return function(string) {\n\t      var d = newYear(1900),\n\t          i = parseSpecifier(d, specifier, string += \"\", 0);\n\t      if (i != string.length) return null;\n\t\n\t      // The am-pm flag is 0 for AM, and 1 for PM.\n\t      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t      // Convert day-of-week and week-of-year to day-of-year.\n\t      if (\"W\" in d || \"U\" in d) {\n\t        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t        d.m = 0;\n\t        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n\t      }\n\t\n\t      // If a time zone is specified, all fields are interpreted as UTC and then\n\t      // offset according to the specified time zone.\n\t      if (\"Z\" in d) {\n\t        d.H += d.Z / 100 | 0;\n\t        d.M += d.Z % 100;\n\t        return utcDate(d);\n\t      }\n\t\n\t      // Otherwise, all fields are in local time.\n\t      return newDate(d);\n\t    };\n\t  }\n\t\n\t  function parseSpecifier(d, specifier, string, j) {\n\t    var i = 0,\n\t        n = specifier.length,\n\t        m = string.length,\n\t        c,\n\t        parse;\n\t\n\t    while (i < n) {\n\t      if (j >= m) return -1;\n\t      c = specifier.charCodeAt(i++);\n\t      if (c === 37) {\n\t        c = specifier.charAt(i++);\n\t        parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t      } else if (c != string.charCodeAt(j++)) {\n\t        return -1;\n\t      }\n\t    }\n\t\n\t    return j;\n\t  }\n\t\n\t  function parsePeriod(d, string, i) {\n\t    var n = periodRe.exec(string.slice(i));\n\t    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortWeekday(d, string, i) {\n\t    var n = shortWeekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekday(d, string, i) {\n\t    var n = weekdayRe.exec(string.slice(i));\n\t    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseShortMonth(d, string, i) {\n\t    var n = shortMonthRe.exec(string.slice(i));\n\t    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonth(d, string, i) {\n\t    var n = monthRe.exec(string.slice(i));\n\t    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLocaleDateTime(d, string, i) {\n\t    return parseSpecifier(d, locale_dateTime, string, i);\n\t  }\n\t\n\t  function parseLocaleDate(d, string, i) {\n\t    return parseSpecifier(d, locale_date, string, i);\n\t  }\n\t\n\t  function parseLocaleTime(d, string, i) {\n\t    return parseSpecifier(d, locale_time, string, i);\n\t  }\n\t\n\t  function formatShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getDay()];\n\t  }\n\t\n\t  function formatWeekday(d) {\n\t    return locale_weekdays[d.getDay()];\n\t  }\n\t\n\t  function formatShortMonth(d) {\n\t    return locale_shortMonths[d.getMonth()];\n\t  }\n\t\n\t  function formatMonth(d) {\n\t    return locale_months[d.getMonth()];\n\t  }\n\t\n\t  function formatPeriod(d) {\n\t    return locale_periods[+(d.getHours() >= 12)];\n\t  }\n\t\n\t  function formatUTCShortWeekday(d) {\n\t    return locale_shortWeekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCWeekday(d) {\n\t    return locale_weekdays[d.getUTCDay()];\n\t  }\n\t\n\t  function formatUTCShortMonth(d) {\n\t    return locale_shortMonths[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCMonth(d) {\n\t    return locale_months[d.getUTCMonth()];\n\t  }\n\t\n\t  function formatUTCPeriod(d) {\n\t    return locale_periods[+(d.getUTCHours() >= 12)];\n\t  }\n\t\n\t  return {\n\t    format: function(specifier) {\n\t      var f = newFormat(specifier += \"\", formats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    parse: function(specifier) {\n\t      var p = newParse(specifier += \"\", localDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    },\n\t    utcFormat: function(specifier) {\n\t      var f = newFormat(specifier += \"\", utcFormats);\n\t      f.toString = function() { return specifier; };\n\t      return f;\n\t    },\n\t    utcParse: function(specifier) {\n\t      var p = newParse(specifier, utcDate);\n\t      p.toString = function() { return specifier; };\n\t      return p;\n\t    }\n\t  };\n\t}\n\t\n\tvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\tvar numberRe = /^\\s*\\d+/;\n\tvar percentRe = /^%/;\n\tvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t\n\tfunction pad(value, fill, width) {\n\t  var sign = value < 0 ? \"-\" : \"\",\n\t      string = (sign ? -value : value) + \"\",\n\t      length = string.length;\n\t  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t}\n\t\n\tfunction requote(s) {\n\t  return s.replace(requoteRe, \"\\\\$&\");\n\t}\n\t\n\tfunction formatRe(names) {\n\t  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t}\n\t\n\tfunction formatLookup(names) {\n\t  var map = {}, i = -1, n = names.length;\n\t  while (++i < n) map[names[i].toLowerCase()] = i;\n\t  return map;\n\t}\n\t\n\tfunction parseWeekdayNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 1));\n\t  return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberSunday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseWeekNumberMonday(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i));\n\t  return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseFullYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 4));\n\t  return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseZone(d, string, i) {\n\t  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMonthNumber(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfMonth(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseDayOfYear(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseHour24(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMinutes(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseSeconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 2));\n\t  return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseMilliseconds(d, string, i) {\n\t  var n = numberRe.exec(string.slice(i, i + 3));\n\t  return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t}\n\t\n\tfunction parseLiteralPercent(d, string, i) {\n\t  var n = percentRe.exec(string.slice(i, i + 1));\n\t  return n ? i + n[0].length : -1;\n\t}\n\t\n\tfunction formatDayOfMonth(d, p) {\n\t  return pad(d.getDate(), p, 2);\n\t}\n\t\n\tfunction formatHour24(d, p) {\n\t  return pad(d.getHours(), p, 2);\n\t}\n\t\n\tfunction formatHour12(d, p) {\n\t  return pad(d.getHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatDayOfYear(d, p) {\n\t  return pad(1 + day.count(year(d), d), p, 3);\n\t}\n\t\n\tfunction formatMilliseconds(d, p) {\n\t  return pad(d.getMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatMonthNumber(d, p) {\n\t  return pad(d.getMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatMinutes(d, p) {\n\t  return pad(d.getMinutes(), p, 2);\n\t}\n\t\n\tfunction formatSeconds(d, p) {\n\t  return pad(d.getSeconds(), p, 2);\n\t}\n\t\n\tfunction formatWeekNumberSunday(d, p) {\n\t  return pad(sunday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatWeekdayNumber(d) {\n\t  return d.getDay();\n\t}\n\t\n\tfunction formatWeekNumberMonday(d, p) {\n\t  return pad(monday.count(year(d), d), p, 2);\n\t}\n\t\n\tfunction formatYear(d, p) {\n\t  return pad(d.getFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatFullYear(d, p) {\n\t  return pad(d.getFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatZone(d) {\n\t  var z = d.getTimezoneOffset();\n\t  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t      + pad(z / 60 | 0, \"0\", 2)\n\t      + pad(z % 60, \"0\", 2);\n\t}\n\t\n\tfunction formatUTCDayOfMonth(d, p) {\n\t  return pad(d.getUTCDate(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour24(d, p) {\n\t  return pad(d.getUTCHours(), p, 2);\n\t}\n\t\n\tfunction formatUTCHour12(d, p) {\n\t  return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t}\n\t\n\tfunction formatUTCDayOfYear(d, p) {\n\t  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t}\n\t\n\tfunction formatUTCMilliseconds(d, p) {\n\t  return pad(d.getUTCMilliseconds(), p, 3);\n\t}\n\t\n\tfunction formatUTCMonthNumber(d, p) {\n\t  return pad(d.getUTCMonth() + 1, p, 2);\n\t}\n\t\n\tfunction formatUTCMinutes(d, p) {\n\t  return pad(d.getUTCMinutes(), p, 2);\n\t}\n\t\n\tfunction formatUTCSeconds(d, p) {\n\t  return pad(d.getUTCSeconds(), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekNumberSunday(d, p) {\n\t  return pad(utcSunday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCWeekdayNumber(d) {\n\t  return d.getUTCDay();\n\t}\n\t\n\tfunction formatUTCWeekNumberMonday(d, p) {\n\t  return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t}\n\t\n\tfunction formatUTCYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 100, p, 2);\n\t}\n\t\n\tfunction formatUTCFullYear(d, p) {\n\t  return pad(d.getUTCFullYear() % 10000, p, 4);\n\t}\n\t\n\tfunction formatUTCZone() {\n\t  return \"+0000\";\n\t}\n\t\n\tfunction formatLiteralPercent() {\n\t  return \"%\";\n\t}\n\t\n\tvar locale$2;\n\t\n\t\n\t\n\t\n\t\n\tdefaultLocale$1({\n\t  dateTime: \"%x, %X\",\n\t  date: \"%-m/%-d/%Y\",\n\t  time: \"%-I:%M:%S %p\",\n\t  periods: [\"AM\", \"PM\"],\n\t  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t});\n\t\n\tfunction defaultLocale$1(definition) {\n\t  locale$2 = formatLocale$1(definition);\n\t  exports.timeFormat = locale$2.format;\n\t  exports.timeParse = locale$2.parse;\n\t  exports.utcFormat = locale$2.utcFormat;\n\t  exports.utcParse = locale$2.utcParse;\n\t  return locale$2;\n\t}\n\t\n\tvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\tfunction formatIsoNative(date) {\n\t  return date.toISOString();\n\t}\n\t\n\tvar formatIso = Date.prototype.toISOString\n\t    ? formatIsoNative\n\t    : exports.utcFormat(isoSpecifier);\n\t\n\tfunction parseIsoNative(string) {\n\t  var date = new Date(string);\n\t  return isNaN(date) ? null : date;\n\t}\n\t\n\tvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t    ? parseIsoNative\n\t    : exports.utcParse(isoSpecifier);\n\t\n\tvar array$2 = Array.prototype;\n\t\n\tvar map$3 = array$2.map;\n\tvar slice$3 = array$2.slice;\n\t\n\tvar implicit = {name: \"implicit\"};\n\t\n\tfunction ordinal(range) {\n\t  var index = map$1(),\n\t      domain = [],\n\t      unknown = implicit;\n\t\n\t  range = range == null ? [] : slice$3.call(range);\n\t\n\t  function scale(d) {\n\t    var key = d + \"\", i = index.get(key);\n\t    if (!i) {\n\t      if (unknown !== implicit) return unknown;\n\t      index.set(key, i = domain.push(d));\n\t    }\n\t    return range[(i - 1) % range.length];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [], index = map$1();\n\t    var i = -1, n = _.length, d, key;\n\t    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t    return scale;\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t  };\n\t\n\t  scale.unknown = function(_) {\n\t    return arguments.length ? (unknown = _, scale) : unknown;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return ordinal()\n\t        .domain(domain)\n\t        .range(range)\n\t        .unknown(unknown);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction band() {\n\t  var scale = ordinal().unknown(undefined),\n\t      domain = scale.domain,\n\t      ordinalRange = scale.range,\n\t      range$$1 = [0, 1],\n\t      step,\n\t      bandwidth,\n\t      round = false,\n\t      paddingInner = 0,\n\t      paddingOuter = 0,\n\t      align = 0.5;\n\t\n\t  delete scale.unknown;\n\t\n\t  function rescale() {\n\t    var n = domain().length,\n\t        reverse = range$$1[1] < range$$1[0],\n\t        start = range$$1[reverse - 0],\n\t        stop = range$$1[1 - reverse];\n\t    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t    if (round) step = Math.floor(step);\n\t    start += (stop - start - step * (n - paddingInner)) * align;\n\t    bandwidth = step * (1 - paddingInner);\n\t    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t    var values = range(n).map(function(i) { return start + step * i; });\n\t    return ordinalRange(reverse ? values.reverse() : values);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n\t  };\n\t\n\t  scale.bandwidth = function() {\n\t    return bandwidth;\n\t  };\n\t\n\t  scale.step = function() {\n\t    return step;\n\t  };\n\t\n\t  scale.round = function(_) {\n\t    return arguments.length ? (round = !!_, rescale()) : round;\n\t  };\n\t\n\t  scale.padding = function(_) {\n\t    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingInner = function(_) {\n\t    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t  };\n\t\n\t  scale.paddingOuter = function(_) {\n\t    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t  };\n\t\n\t  scale.align = function(_) {\n\t    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return band()\n\t        .domain(domain())\n\t        .range(range$$1)\n\t        .round(round)\n\t        .paddingInner(paddingInner)\n\t        .paddingOuter(paddingOuter)\n\t        .align(align);\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tfunction pointish(scale) {\n\t  var copy = scale.copy;\n\t\n\t  scale.padding = scale.paddingOuter;\n\t  delete scale.paddingInner;\n\t  delete scale.paddingOuter;\n\t\n\t  scale.copy = function() {\n\t    return pointish(copy());\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction point$4() {\n\t  return pointish(band().paddingInner(1));\n\t}\n\t\n\tvar constant$4 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar number$1 = function(x) {\n\t  return +x;\n\t};\n\t\n\tvar unit = [0, 1];\n\t\n\tfunction deinterpolateLinear(a, b) {\n\t  return (b -= (a = +a))\n\t      ? function(x) { return (x - a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction deinterpolateClamp(deinterpolate) {\n\t  return function(a, b) {\n\t    var d = deinterpolate(a = +a, b = +b);\n\t    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t  };\n\t}\n\t\n\tfunction reinterpolateClamp(reinterpolate) {\n\t  return function(a, b) {\n\t    var r = reinterpolate(a = +a, b = +b);\n\t    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t  };\n\t}\n\t\n\tfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n\t  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t  return function(x) { return r0(d0(x)); };\n\t}\n\t\n\tfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n\t  var j = Math.min(domain.length, range$$1.length) - 1,\n\t      d = new Array(j),\n\t      r = new Array(j),\n\t      i = -1;\n\t\n\t  // Reverse descending domains.\n\t  if (domain[j] < domain[0]) {\n\t    domain = domain.slice().reverse();\n\t    range$$1 = range$$1.slice().reverse();\n\t  }\n\t\n\t  while (++i < j) {\n\t    d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n\t  }\n\t\n\t  return function(x) {\n\t    var i = bisectRight(domain, x, 1, j) - 1;\n\t    return r[i](d[i](x));\n\t  };\n\t}\n\t\n\tfunction copy(source, target) {\n\t  return target\n\t      .domain(source.domain())\n\t      .range(source.range())\n\t      .interpolate(source.interpolate())\n\t      .clamp(source.clamp());\n\t}\n\t\n\t// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\tfunction continuous(deinterpolate, reinterpolate) {\n\t  var domain = unit,\n\t      range$$1 = unit,\n\t      interpolate$$1 = interpolate,\n\t      clamp = false,\n\t      piecewise,\n\t      output,\n\t      input;\n\t\n\t  function rescale() {\n\t    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n\t    output = input = null;\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.rangeRound = function(_) {\n\t    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t  };\n\t\n\t  scale.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n\t  };\n\t\n\t  return rescale();\n\t}\n\t\n\tvar tickFormat = function(domain, count, specifier) {\n\t  var start = domain[0],\n\t      stop = domain[domain.length - 1],\n\t      step = tickStep(start, stop, count == null ? 10 : count),\n\t      precision;\n\t  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t  switch (specifier.type) {\n\t    case \"s\": {\n\t      var value = Math.max(Math.abs(start), Math.abs(stop));\n\t      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t      return exports.formatPrefix(specifier, value);\n\t    }\n\t    case \"\":\n\t    case \"e\":\n\t    case \"g\":\n\t    case \"p\":\n\t    case \"r\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t      break;\n\t    }\n\t    case \"f\":\n\t    case \"%\": {\n\t      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t      break;\n\t    }\n\t  }\n\t  return exports.format(specifier);\n\t};\n\t\n\tfunction linearish(scale) {\n\t  var domain = scale.domain;\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain();\n\t    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return tickFormat(domain(), count, specifier);\n\t  };\n\t\n\t  scale.nice = function(count) {\n\t    var d = domain(),\n\t        i = d.length - 1,\n\t        n = count == null ? 10 : count,\n\t        start = d[0],\n\t        stop = d[i],\n\t        step = tickStep(start, stop, n);\n\t\n\t    if (step) {\n\t      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t      d[0] = Math.floor(start / step) * step;\n\t      d[i] = Math.ceil(stop / step) * step;\n\t      domain(d);\n\t    }\n\t\n\t    return scale;\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction linear$2() {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, linear$2());\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction identity$4() {\n\t  var domain = [0, 1];\n\t\n\t  function scale(x) {\n\t    return +x;\n\t  }\n\t\n\t  scale.invert = scale;\n\t\n\t  scale.domain = scale.range = function(_) {\n\t    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return identity$4().domain(domain);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar nice = function(domain, interval) {\n\t  domain = domain.slice();\n\t\n\t  var i0 = 0,\n\t      i1 = domain.length - 1,\n\t      x0 = domain[i0],\n\t      x1 = domain[i1],\n\t      t;\n\t\n\t  if (x1 < x0) {\n\t    t = i0, i0 = i1, i1 = t;\n\t    t = x0, x0 = x1, x1 = t;\n\t  }\n\t\n\t  domain[i0] = interval.floor(x0);\n\t  domain[i1] = interval.ceil(x1);\n\t  return domain;\n\t};\n\t\n\tfunction deinterpolate(a, b) {\n\t  return (b = Math.log(b / a))\n\t      ? function(x) { return Math.log(x / a) / b; }\n\t      : constant$4(b);\n\t}\n\t\n\tfunction reinterpolate(a, b) {\n\t  return a < 0\n\t      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t}\n\t\n\tfunction pow10(x) {\n\t  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t}\n\t\n\tfunction powp(base) {\n\t  return base === 10 ? pow10\n\t      : base === Math.E ? Math.exp\n\t      : function(x) { return Math.pow(base, x); };\n\t}\n\t\n\tfunction logp(base) {\n\t  return base === Math.E ? Math.log\n\t      : base === 10 && Math.log10\n\t      || base === 2 && Math.log2\n\t      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t}\n\t\n\tfunction reflect(f) {\n\t  return function(x) {\n\t    return -f(-x);\n\t  };\n\t}\n\t\n\tfunction log() {\n\t  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n\t      domain = scale.domain,\n\t      base = 10,\n\t      logs = logp(10),\n\t      pows = powp(10);\n\t\n\t  function rescale() {\n\t    logs = logp(base), pows = powp(base);\n\t    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t    return scale;\n\t  }\n\t\n\t  scale.base = function(_) {\n\t    return arguments.length ? (base = +_, rescale()) : base;\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain(_), rescale()) : domain();\n\t  };\n\t\n\t  scale.ticks = function(count) {\n\t    var d = domain(),\n\t        u = d[0],\n\t        v = d[d.length - 1],\n\t        r;\n\t\n\t    if (r = v < u) i = u, u = v, v = i;\n\t\n\t    var i = logs(u),\n\t        j = logs(v),\n\t        p,\n\t        k,\n\t        t,\n\t        n = count == null ? 10 : +count,\n\t        z = [];\n\t\n\t    if (!(base % 1) && j - i < n) {\n\t      i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t      if (u > 0) for (; i < j; ++i) {\n\t        for (k = 1, p = pows(i); k < base; ++k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      } else for (; i < j; ++i) {\n\t        for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t          t = p * k;\n\t          if (t < u) continue;\n\t          if (t > v) break;\n\t          z.push(t);\n\t        }\n\t      }\n\t    } else {\n\t      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t    }\n\t\n\t    return r ? z.reverse() : z;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t    if (count === Infinity) return specifier;\n\t    if (count == null) count = 10;\n\t    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t    return function(d) {\n\t      var i = d / pows(Math.round(logs(d)));\n\t      if (i * base < base - 0.5) i *= base;\n\t      return i <= k ? specifier(d) : \"\";\n\t    };\n\t  };\n\t\n\t  scale.nice = function() {\n\t    return domain(nice(domain(), {\n\t      floor: function(x) { return pows(Math.floor(logs(x))); },\n\t      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t    }));\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, log().base(base));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction raise(x, exponent) {\n\t  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t}\n\t\n\tfunction pow() {\n\t  var exponent = 1,\n\t      scale = continuous(deinterpolate, reinterpolate),\n\t      domain = scale.domain;\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t        ? function(x) { return (raise(x, exponent) - a) / b; }\n\t        : constant$4(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    b = raise(b, exponent) - (a = raise(a, exponent));\n\t    return function(t) { return raise(a + b * t, 1 / exponent); };\n\t  }\n\t\n\t  scale.exponent = function(_) {\n\t    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, pow().exponent(exponent));\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction sqrt() {\n\t  return pow().exponent(0.5);\n\t}\n\t\n\tfunction quantile$$1() {\n\t  var domain = [],\n\t      range$$1 = [],\n\t      thresholds = [];\n\t\n\t  function rescale() {\n\t    var i = 0, n = Math.max(1, range$$1.length);\n\t    thresholds = new Array(n - 1);\n\t    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t    return scale;\n\t  }\n\t\n\t  function scale(x) {\n\t    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n\t  }\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN] : [\n\t      i > 0 ? thresholds[i - 1] : domain[0],\n\t      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t    ];\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    if (!arguments.length) return domain.slice();\n\t    domain = [];\n\t    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t    domain.sort(ascending);\n\t    return rescale();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.quantiles = function() {\n\t    return thresholds.slice();\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantile$$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tfunction quantize$1() {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      n = 1,\n\t      domain = [0.5],\n\t      range$$1 = [0, 1];\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  function rescale() {\n\t    var i = -1;\n\t    domain = new Array(n);\n\t    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t    return scale;\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return i < 0 ? [NaN, NaN]\n\t        : i < 1 ? [x0, domain[0]]\n\t        : i >= n ? [domain[n - 1], x1]\n\t        : [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return quantize$1()\n\t        .domain([x0, x1])\n\t        .range(range$$1);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tfunction threshold$1() {\n\t  var domain = [0.5],\n\t      range$$1 = [0, 1],\n\t      n = 1;\n\t\n\t  function scale(x) {\n\t    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n\t  };\n\t\n\t  scale.range = function(_) {\n\t    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n\t  };\n\t\n\t  scale.invertExtent = function(y) {\n\t    var i = range$$1.indexOf(y);\n\t    return [domain[i - 1], domain[i]];\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return threshold$1()\n\t        .domain(domain)\n\t        .range(range$$1);\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar durationSecond$1 = 1000;\n\tvar durationMinute$1 = durationSecond$1 * 60;\n\tvar durationHour$1 = durationMinute$1 * 60;\n\tvar durationDay$1 = durationHour$1 * 24;\n\tvar durationWeek$1 = durationDay$1 * 7;\n\tvar durationMonth = durationDay$1 * 30;\n\tvar durationYear = durationDay$1 * 365;\n\t\n\tfunction date$1(t) {\n\t  return new Date(t);\n\t}\n\t\n\tfunction number$2(t) {\n\t  return t instanceof Date ? +t : +new Date(+t);\n\t}\n\t\n\tfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n\t  var scale = continuous(deinterpolateLinear, interpolateNumber),\n\t      invert = scale.invert,\n\t      domain = scale.domain;\n\t\n\t  var formatMillisecond = format(\".%L\"),\n\t      formatSecond = format(\":%S\"),\n\t      formatMinute = format(\"%I:%M\"),\n\t      formatHour = format(\"%I %p\"),\n\t      formatDay = format(\"%a %d\"),\n\t      formatWeek = format(\"%b %d\"),\n\t      formatMonth = format(\"%B\"),\n\t      formatYear = format(\"%Y\");\n\t\n\t  var tickIntervals = [\n\t    [second$$1,  1,      durationSecond$1],\n\t    [second$$1,  5,  5 * durationSecond$1],\n\t    [second$$1, 15, 15 * durationSecond$1],\n\t    [second$$1, 30, 30 * durationSecond$1],\n\t    [minute$$1,  1,      durationMinute$1],\n\t    [minute$$1,  5,  5 * durationMinute$1],\n\t    [minute$$1, 15, 15 * durationMinute$1],\n\t    [minute$$1, 30, 30 * durationMinute$1],\n\t    [  hour$$1,  1,      durationHour$1  ],\n\t    [  hour$$1,  3,  3 * durationHour$1  ],\n\t    [  hour$$1,  6,  6 * durationHour$1  ],\n\t    [  hour$$1, 12, 12 * durationHour$1  ],\n\t    [   day$$1,  1,      durationDay$1   ],\n\t    [   day$$1,  2,  2 * durationDay$1   ],\n\t    [  week,  1,      durationWeek$1  ],\n\t    [ month$$1,  1,      durationMonth ],\n\t    [ month$$1,  3,  3 * durationMonth ],\n\t    [  year$$1,  1,      durationYear  ]\n\t  ];\n\t\n\t  function tickFormat(date) {\n\t    return (second$$1(date) < date ? formatMillisecond\n\t        : minute$$1(date) < date ? formatSecond\n\t        : hour$$1(date) < date ? formatMinute\n\t        : day$$1(date) < date ? formatHour\n\t        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t        : year$$1(date) < date ? formatMonth\n\t        : formatYear)(date);\n\t  }\n\t\n\t  function tickInterval(interval, start, stop, step) {\n\t    if (interval == null) interval = 10;\n\t\n\t    // If a desired tick count is specified, pick a reasonable tick interval\n\t    // based on the extent of the domain and a rough estimate of tick size.\n\t    // Otherwise, assume interval is already a time interval and use it.\n\t    if (typeof interval === \"number\") {\n\t      var target = Math.abs(stop - start) / interval,\n\t          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t      if (i === tickIntervals.length) {\n\t        step = tickStep(start / durationYear, stop / durationYear, interval);\n\t        interval = year$$1;\n\t      } else if (i) {\n\t        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t        step = i[1];\n\t        interval = i[0];\n\t      } else {\n\t        step = tickStep(start, stop, interval);\n\t        interval = millisecond$$1;\n\t      }\n\t    }\n\t\n\t    return step == null ? interval : interval.every(step);\n\t  }\n\t\n\t  scale.invert = function(y) {\n\t    return new Date(invert(y));\n\t  };\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n\t  };\n\t\n\t  scale.ticks = function(interval, step) {\n\t    var d = domain(),\n\t        t0 = d[0],\n\t        t1 = d[d.length - 1],\n\t        r = t1 < t0,\n\t        t;\n\t    if (r) t = t0, t0 = t1, t1 = t;\n\t    t = tickInterval(interval, t0, t1, step);\n\t    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t    return r ? t.reverse() : t;\n\t  };\n\t\n\t  scale.tickFormat = function(count, specifier) {\n\t    return specifier == null ? tickFormat : format(specifier);\n\t  };\n\t\n\t  scale.nice = function(interval, step) {\n\t    var d = domain();\n\t    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t        ? domain(nice(d, interval))\n\t        : scale;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n\t  };\n\t\n\t  return scale;\n\t}\n\t\n\tvar time = function() {\n\t  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t};\n\t\n\tvar utcTime = function() {\n\t  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t};\n\t\n\tvar colors = function(s) {\n\t  return s.match(/.{6}/g).map(function(x) {\n\t    return \"#\" + x;\n\t  });\n\t};\n\t\n\tvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\tvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\tvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\tvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\tvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\tvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\tvar rainbow = cubehelix();\n\t\n\tvar rainbow$1 = function(t) {\n\t  if (t < 0 || t > 1) t -= Math.floor(t);\n\t  var ts = Math.abs(t - 0.5);\n\t  rainbow.h = 360 * t - 100;\n\t  rainbow.s = 1.5 - 1.5 * ts;\n\t  rainbow.l = 0.8 - 0.9 * ts;\n\t  return rainbow + \"\";\n\t};\n\t\n\tfunction ramp(range) {\n\t  var n = range.length;\n\t  return function(t) {\n\t    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t  };\n\t}\n\t\n\tvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\tvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\tvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\tvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\tfunction sequential(interpolator) {\n\t  var x0 = 0,\n\t      x1 = 1,\n\t      clamp = false;\n\t\n\t  function scale(x) {\n\t    var t = (x - x0) / (x1 - x0);\n\t    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t  }\n\t\n\t  scale.domain = function(_) {\n\t    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t  };\n\t\n\t  scale.clamp = function(_) {\n\t    return arguments.length ? (clamp = !!_, scale) : clamp;\n\t  };\n\t\n\t  scale.interpolator = function(_) {\n\t    return arguments.length ? (interpolator = _, scale) : interpolator;\n\t  };\n\t\n\t  scale.copy = function() {\n\t    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t  };\n\t\n\t  return linearish(scale);\n\t}\n\t\n\tvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\tvar namespaces = {\n\t  svg: \"http://www.w3.org/2000/svg\",\n\t  xhtml: xhtml,\n\t  xlink: \"http://www.w3.org/1999/xlink\",\n\t  xml: \"http://www.w3.org/XML/1998/namespace\",\n\t  xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t};\n\t\n\tvar namespace = function(name) {\n\t  var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t};\n\t\n\tfunction creatorInherit(name) {\n\t  return function() {\n\t    var document = this.ownerDocument,\n\t        uri = this.namespaceURI;\n\t    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t        ? document.createElement(name)\n\t        : document.createElementNS(uri, name);\n\t  };\n\t}\n\t\n\tfunction creatorFixed(fullname) {\n\t  return function() {\n\t    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tvar creator = function(name) {\n\t  var fullname = namespace(name);\n\t  return (fullname.local\n\t      ? creatorFixed\n\t      : creatorInherit)(fullname);\n\t};\n\t\n\tvar nextId = 0;\n\t\n\tfunction local() {\n\t  return new Local;\n\t}\n\t\n\tfunction Local() {\n\t  this._ = \"@\" + (++nextId).toString(36);\n\t}\n\t\n\tLocal.prototype = local.prototype = {\n\t  constructor: Local,\n\t  get: function(node) {\n\t    var id = this._;\n\t    while (!(id in node)) if (!(node = node.parentNode)) return;\n\t    return node[id];\n\t  },\n\t  set: function(node, value) {\n\t    return node[this._] = value;\n\t  },\n\t  remove: function(node) {\n\t    return this._ in node && delete node[this._];\n\t  },\n\t  toString: function() {\n\t    return this._;\n\t  }\n\t};\n\t\n\tvar matcher = function(selector) {\n\t  return function() {\n\t    return this.matches(selector);\n\t  };\n\t};\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element = document.documentElement;\n\t  if (!element.matches) {\n\t    var vendorMatches = element.webkitMatchesSelector\n\t        || element.msMatchesSelector\n\t        || element.mozMatchesSelector\n\t        || element.oMatchesSelector;\n\t    matcher = function(selector) {\n\t      return function() {\n\t        return vendorMatches.call(this, selector);\n\t      };\n\t    };\n\t  }\n\t}\n\t\n\tvar matcher$1 = matcher;\n\t\n\tvar filterEvents = {};\n\t\n\texports.event = null;\n\t\n\tif (typeof document !== \"undefined\") {\n\t  var element$1 = document.documentElement;\n\t  if (!(\"onmouseenter\" in element$1)) {\n\t    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t  }\n\t}\n\t\n\tfunction filterContextListener(listener, index, group) {\n\t  listener = contextListener(listener, index, group);\n\t  return function(event) {\n\t    var related = event.relatedTarget;\n\t    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t      listener.call(this, event);\n\t    }\n\t  };\n\t}\n\t\n\tfunction contextListener(listener, index, group) {\n\t  return function(event1) {\n\t    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t    exports.event = event1;\n\t    try {\n\t      listener.call(this, this.__data__, index, group);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  };\n\t}\n\t\n\tfunction parseTypenames$1(typenames) {\n\t  return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t    var name = \"\", i = t.indexOf(\".\");\n\t    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t    return {type: t, name: name};\n\t  });\n\t}\n\t\n\tfunction onRemove(typename) {\n\t  return function() {\n\t    var on = this.__on;\n\t    if (!on) return;\n\t    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t      } else {\n\t        on[++i] = o;\n\t      }\n\t    }\n\t    if (++i) on.length = i;\n\t    else delete this.__on;\n\t  };\n\t}\n\t\n\tfunction onAdd(typename, value, capture) {\n\t  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t  return function(d, i, group) {\n\t    var on = this.__on, o, listener = wrap(value, i, group);\n\t    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t        this.removeEventListener(o.type, o.listener, o.capture);\n\t        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t        o.value = value;\n\t        return;\n\t      }\n\t    }\n\t    this.addEventListener(typename.type, listener, capture);\n\t    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t    if (!on) this.__on = [o];\n\t    else on.push(o);\n\t  };\n\t}\n\t\n\tvar selection_on = function(typename, value, capture) {\n\t  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t  if (arguments.length < 2) {\n\t    var on = this.node().__on;\n\t    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t      for (i = 0, o = on[j]; i < n; ++i) {\n\t        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t          return o.value;\n\t        }\n\t      }\n\t    }\n\t    return;\n\t  }\n\t\n\t  on = value ? onAdd : onRemove;\n\t  if (capture == null) capture = false;\n\t  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t  return this;\n\t};\n\t\n\tfunction customEvent(event1, listener, that, args) {\n\t  var event0 = exports.event;\n\t  event1.sourceEvent = exports.event;\n\t  exports.event = event1;\n\t  try {\n\t    return listener.apply(that, args);\n\t  } finally {\n\t    exports.event = event0;\n\t  }\n\t}\n\t\n\tvar sourceEvent = function() {\n\t  var current = exports.event, source;\n\t  while (source = current.sourceEvent) current = source;\n\t  return current;\n\t};\n\t\n\tvar point$5 = function(node, event) {\n\t  var svg = node.ownerSVGElement || node;\n\t\n\t  if (svg.createSVGPoint) {\n\t    var point = svg.createSVGPoint();\n\t    point.x = event.clientX, point.y = event.clientY;\n\t    point = point.matrixTransform(node.getScreenCTM().inverse());\n\t    return [point.x, point.y];\n\t  }\n\t\n\t  var rect = node.getBoundingClientRect();\n\t  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t};\n\t\n\tvar mouse = function(node) {\n\t  var event = sourceEvent();\n\t  if (event.changedTouches) event = event.changedTouches[0];\n\t  return point$5(node, event);\n\t};\n\t\n\tfunction none$2() {}\n\t\n\tvar selector = function(selector) {\n\t  return selector == null ? none$2 : function() {\n\t    return this.querySelector(selector);\n\t  };\n\t};\n\t\n\tvar selection_select = function(select) {\n\t  if (typeof select !== \"function\") select = selector(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tfunction empty() {\n\t  return [];\n\t}\n\t\n\tvar selectorAll = function(selector) {\n\t  return selector == null ? empty : function() {\n\t    return this.querySelectorAll(selector);\n\t  };\n\t};\n\t\n\tvar selection_selectAll = function(select) {\n\t  if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        subgroups.push(select.call(node, node.__data__, i, group));\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, parents);\n\t};\n\t\n\tvar selection_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Selection(subgroups, this._parents);\n\t};\n\t\n\tvar sparse = function(update) {\n\t  return new Array(update.length);\n\t};\n\t\n\tvar selection_enter = function() {\n\t  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tfunction EnterNode(parent, datum) {\n\t  this.ownerDocument = parent.ownerDocument;\n\t  this.namespaceURI = parent.namespaceURI;\n\t  this._next = null;\n\t  this._parent = parent;\n\t  this.__data__ = datum;\n\t}\n\t\n\tEnterNode.prototype = {\n\t  constructor: EnterNode,\n\t  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t  querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t};\n\t\n\tvar constant$5 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\tfunction bindIndex(parent, group, enter, update, exit, data) {\n\t  var i = 0,\n\t      node,\n\t      groupLength = group.length,\n\t      dataLength = data.length;\n\t\n\t  // Put any non-null nodes that fit into update.\n\t  // Put any null nodes into enter.\n\t  // Put any remaining data into enter.\n\t  for (; i < dataLength; ++i) {\n\t    if (node = group[i]) {\n\t      node.__data__ = data[i];\n\t      update[i] = node;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Put any non-null nodes that don’t fit into exit.\n\t  for (; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tfunction bindKey(parent, group, enter, update, exit, data, key) {\n\t  var i,\n\t      node,\n\t      nodeByKeyValue = {},\n\t      groupLength = group.length,\n\t      dataLength = data.length,\n\t      keyValues = new Array(groupLength),\n\t      keyValue;\n\t\n\t  // Compute the key for each node.\n\t  // If multiple nodes have the same key, the duplicates are added to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if (node = group[i]) {\n\t      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t      if (keyValue in nodeByKeyValue) {\n\t        exit[i] = node;\n\t      } else {\n\t        nodeByKeyValue[keyValue] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  // Compute the key for each datum.\n\t  // If there a node associated with this key, join and add it to update.\n\t  // If there is not (or the key is a duplicate), add it to enter.\n\t  for (i = 0; i < dataLength; ++i) {\n\t    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t    if (node = nodeByKeyValue[keyValue]) {\n\t      update[i] = node;\n\t      node.__data__ = data[i];\n\t      nodeByKeyValue[keyValue] = null;\n\t    } else {\n\t      enter[i] = new EnterNode(parent, data[i]);\n\t    }\n\t  }\n\t\n\t  // Add any remaining nodes that were not bound to data to exit.\n\t  for (i = 0; i < groupLength; ++i) {\n\t    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t      exit[i] = node;\n\t    }\n\t  }\n\t}\n\t\n\tvar selection_data = function(value, key) {\n\t  if (!value) {\n\t    data = new Array(this.size()), j = -1;\n\t    this.each(function(d) { data[++j] = d; });\n\t    return data;\n\t  }\n\t\n\t  var bind = key ? bindKey : bindIndex,\n\t      parents = this._parents,\n\t      groups = this._groups;\n\t\n\t  if (typeof value !== \"function\") value = constant$5(value);\n\t\n\t  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t    var parent = parents[j],\n\t        group = groups[j],\n\t        groupLength = group.length,\n\t        data = value.call(parent, parent && parent.__data__, j, parents),\n\t        dataLength = data.length,\n\t        enterGroup = enter[j] = new Array(dataLength),\n\t        updateGroup = update[j] = new Array(dataLength),\n\t        exitGroup = exit[j] = new Array(groupLength);\n\t\n\t    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t    // Now connect the enter nodes to their following update node, such that\n\t    // appendChild can insert the materialized enter node before this node,\n\t    // rather than at the end of the parent node.\n\t    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t      if (previous = enterGroup[i0]) {\n\t        if (i0 >= i1) i1 = i0 + 1;\n\t        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t        previous._next = next || null;\n\t      }\n\t    }\n\t  }\n\t\n\t  update = new Selection(update, parents);\n\t  update._enter = enter;\n\t  update._exit = exit;\n\t  return update;\n\t};\n\t\n\tvar selection_exit = function() {\n\t  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t};\n\t\n\tvar selection_merge = function(selection) {\n\t\n\t  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Selection(merges, this._parents);\n\t};\n\t\n\tvar selection_order = function() {\n\t\n\t  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t      if (node = group[i]) {\n\t        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t        next = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tvar selection_sort = function(compare) {\n\t  if (!compare) compare = ascending$2;\n\t\n\t  function compareNode(a, b) {\n\t    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        sortgroup[i] = node;\n\t      }\n\t    }\n\t    sortgroup.sort(compareNode);\n\t  }\n\t\n\t  return new Selection(sortgroups, this._parents).order();\n\t};\n\t\n\tfunction ascending$2(a, b) {\n\t  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t}\n\t\n\tvar selection_call = function() {\n\t  var callback = arguments[0];\n\t  arguments[0] = this;\n\t  callback.apply(null, arguments);\n\t  return this;\n\t};\n\t\n\tvar selection_nodes = function() {\n\t  var nodes = new Array(this.size()), i = -1;\n\t  this.each(function() { nodes[++i] = this; });\n\t  return nodes;\n\t};\n\t\n\tvar selection_node = function() {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t      var node = group[i];\n\t      if (node) return node;\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar selection_size = function() {\n\t  var size = 0;\n\t  this.each(function() { ++size; });\n\t  return size;\n\t};\n\t\n\tvar selection_empty = function() {\n\t  return !this.node();\n\t};\n\t\n\tvar selection_each = function(callback) {\n\t\n\t  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t      if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tfunction attrRemove(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant(name, value) {\n\t  return function() {\n\t    this.setAttribute(name, value);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS(fullname, value) {\n\t  return function() {\n\t    this.setAttributeNS(fullname.space, fullname.local, value);\n\t  };\n\t}\n\t\n\tfunction attrFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttribute(name);\n\t    else this.setAttribute(name, v);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS(fullname, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t    else this.setAttributeNS(fullname.space, fullname.local, v);\n\t  };\n\t}\n\t\n\tvar selection_attr = function(name, value) {\n\t  var fullname = namespace(name);\n\t\n\t  if (arguments.length < 2) {\n\t    var node = this.node();\n\t    return fullname.local\n\t        ? node.getAttributeNS(fullname.space, fullname.local)\n\t        : node.getAttribute(fullname);\n\t  }\n\t\n\t  return this.each((value == null\n\t      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS : attrFunction)\n\t      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t};\n\t\n\tvar window = function(node) {\n\t  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t      || (node.document && node) // node is a Window\n\t      || node.defaultView; // node is a Document\n\t};\n\t\n\tfunction styleRemove(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant(name, value, priority) {\n\t  return function() {\n\t    this.style.setProperty(name, value, priority);\n\t  };\n\t}\n\t\n\tfunction styleFunction(name, value, priority) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) this.style.removeProperty(name);\n\t    else this.style.setProperty(name, v, priority);\n\t  };\n\t}\n\t\n\tvar selection_style = function(name, value, priority) {\n\t  var node;\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t            ? styleRemove : typeof value === \"function\"\n\t            ? styleFunction\n\t            : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t      : window(node = this.node())\n\t          .getComputedStyle(node, null)\n\t          .getPropertyValue(name);\n\t};\n\t\n\tfunction propertyRemove(name) {\n\t  return function() {\n\t    delete this[name];\n\t  };\n\t}\n\t\n\tfunction propertyConstant(name, value) {\n\t  return function() {\n\t    this[name] = value;\n\t  };\n\t}\n\t\n\tfunction propertyFunction(name, value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    if (v == null) delete this[name];\n\t    else this[name] = v;\n\t  };\n\t}\n\t\n\tvar selection_property = function(name, value) {\n\t  return arguments.length > 1\n\t      ? this.each((value == null\n\t          ? propertyRemove : typeof value === \"function\"\n\t          ? propertyFunction\n\t          : propertyConstant)(name, value))\n\t      : this.node()[name];\n\t};\n\t\n\tfunction classArray(string) {\n\t  return string.trim().split(/^|\\s+/);\n\t}\n\t\n\tfunction classList(node) {\n\t  return node.classList || new ClassList(node);\n\t}\n\t\n\tfunction ClassList(node) {\n\t  this._node = node;\n\t  this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t}\n\t\n\tClassList.prototype = {\n\t  add: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i < 0) {\n\t      this._names.push(name);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  remove: function(name) {\n\t    var i = this._names.indexOf(name);\n\t    if (i >= 0) {\n\t      this._names.splice(i, 1);\n\t      this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t    }\n\t  },\n\t  contains: function(name) {\n\t    return this._names.indexOf(name) >= 0;\n\t  }\n\t};\n\t\n\tfunction classedAdd(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.add(names[i]);\n\t}\n\t\n\tfunction classedRemove(node, names) {\n\t  var list = classList(node), i = -1, n = names.length;\n\t  while (++i < n) list.remove(names[i]);\n\t}\n\t\n\tfunction classedTrue(names) {\n\t  return function() {\n\t    classedAdd(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFalse(names) {\n\t  return function() {\n\t    classedRemove(this, names);\n\t  };\n\t}\n\t\n\tfunction classedFunction(names, value) {\n\t  return function() {\n\t    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t  };\n\t}\n\t\n\tvar selection_classed = function(name, value) {\n\t  var names = classArray(name + \"\");\n\t\n\t  if (arguments.length < 2) {\n\t    var list = classList(this.node()), i = -1, n = names.length;\n\t    while (++i < n) if (!list.contains(names[i])) return false;\n\t    return true;\n\t  }\n\t\n\t  return this.each((typeof value === \"function\"\n\t      ? classedFunction : value\n\t      ? classedTrue\n\t      : classedFalse)(names, value));\n\t};\n\t\n\tfunction textRemove() {\n\t  this.textContent = \"\";\n\t}\n\t\n\tfunction textConstant(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.textContent = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_text = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? textRemove : (typeof value === \"function\"\n\t          ? textFunction\n\t          : textConstant)(value))\n\t      : this.node().textContent;\n\t};\n\t\n\tfunction htmlRemove() {\n\t  this.innerHTML = \"\";\n\t}\n\t\n\tfunction htmlConstant(value) {\n\t  return function() {\n\t    this.innerHTML = value;\n\t  };\n\t}\n\t\n\tfunction htmlFunction(value) {\n\t  return function() {\n\t    var v = value.apply(this, arguments);\n\t    this.innerHTML = v == null ? \"\" : v;\n\t  };\n\t}\n\t\n\tvar selection_html = function(value) {\n\t  return arguments.length\n\t      ? this.each(value == null\n\t          ? htmlRemove : (typeof value === \"function\"\n\t          ? htmlFunction\n\t          : htmlConstant)(value))\n\t      : this.node().innerHTML;\n\t};\n\t\n\tfunction raise$1() {\n\t  if (this.nextSibling) this.parentNode.appendChild(this);\n\t}\n\t\n\tvar selection_raise = function() {\n\t  return this.each(raise$1);\n\t};\n\t\n\tfunction lower() {\n\t  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t}\n\t\n\tvar selection_lower = function() {\n\t  return this.each(lower);\n\t};\n\t\n\tvar selection_append = function(name) {\n\t  var create = typeof name === \"function\" ? name : creator(name);\n\t  return this.select(function() {\n\t    return this.appendChild(create.apply(this, arguments));\n\t  });\n\t};\n\t\n\tfunction constantNull() {\n\t  return null;\n\t}\n\t\n\tvar selection_insert = function(name, before) {\n\t  var create = typeof name === \"function\" ? name : creator(name),\n\t      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t  return this.select(function() {\n\t    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t  });\n\t};\n\t\n\tfunction remove() {\n\t  var parent = this.parentNode;\n\t  if (parent) parent.removeChild(this);\n\t}\n\t\n\tvar selection_remove = function() {\n\t  return this.each(remove);\n\t};\n\t\n\tvar selection_datum = function(value) {\n\t  return arguments.length\n\t      ? this.property(\"__data__\", value)\n\t      : this.node().__data__;\n\t};\n\t\n\tfunction dispatchEvent(node, type, params) {\n\t  var window$$1 = window(node),\n\t      event = window$$1.CustomEvent;\n\t\n\t  if (event) {\n\t    event = new event(type, params);\n\t  } else {\n\t    event = window$$1.document.createEvent(\"Event\");\n\t    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t    else event.initEvent(type, false, false);\n\t  }\n\t\n\t  node.dispatchEvent(event);\n\t}\n\t\n\tfunction dispatchConstant(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params);\n\t  };\n\t}\n\t\n\tfunction dispatchFunction(type, params) {\n\t  return function() {\n\t    return dispatchEvent(this, type, params.apply(this, arguments));\n\t  };\n\t}\n\t\n\tvar selection_dispatch = function(type, params) {\n\t  return this.each((typeof params === \"function\"\n\t      ? dispatchFunction\n\t      : dispatchConstant)(type, params));\n\t};\n\t\n\tvar root = [null];\n\t\n\tfunction Selection(groups, parents) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t}\n\t\n\tfunction selection() {\n\t  return new Selection([[document.documentElement]], root);\n\t}\n\t\n\tSelection.prototype = selection.prototype = {\n\t  constructor: Selection,\n\t  select: selection_select,\n\t  selectAll: selection_selectAll,\n\t  filter: selection_filter,\n\t  data: selection_data,\n\t  enter: selection_enter,\n\t  exit: selection_exit,\n\t  merge: selection_merge,\n\t  order: selection_order,\n\t  sort: selection_sort,\n\t  call: selection_call,\n\t  nodes: selection_nodes,\n\t  node: selection_node,\n\t  size: selection_size,\n\t  empty: selection_empty,\n\t  each: selection_each,\n\t  attr: selection_attr,\n\t  style: selection_style,\n\t  property: selection_property,\n\t  classed: selection_classed,\n\t  text: selection_text,\n\t  html: selection_html,\n\t  raise: selection_raise,\n\t  lower: selection_lower,\n\t  append: selection_append,\n\t  insert: selection_insert,\n\t  remove: selection_remove,\n\t  datum: selection_datum,\n\t  on: selection_on,\n\t  dispatch: selection_dispatch\n\t};\n\t\n\tvar select = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t      : new Selection([[selector]], root);\n\t};\n\t\n\tvar selectAll = function(selector) {\n\t  return typeof selector === \"string\"\n\t      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t      : new Selection([selector == null ? [] : selector], root);\n\t};\n\t\n\tvar touch = function(node, touches, identifier) {\n\t  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t    if ((touch = touches[i]).identifier === identifier) {\n\t      return point$5(node, touch);\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar touches = function(node, touches) {\n\t  if (touches == null) touches = sourceEvent().touches;\n\t\n\t  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t    points[i] = point$5(node, touches[i]);\n\t  }\n\t\n\t  return points;\n\t};\n\t\n\tvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\tvar emptyTween = [];\n\t\n\tvar CREATED = 0;\n\tvar SCHEDULED = 1;\n\tvar STARTING = 2;\n\tvar STARTED = 3;\n\tvar RUNNING = 4;\n\tvar ENDING = 5;\n\tvar ENDED = 6;\n\t\n\tvar schedule = function(node, name, id, index, group, timing) {\n\t  var schedules = node.__transition;\n\t  if (!schedules) node.__transition = {};\n\t  else if (id in schedules) return;\n\t  create(node, id, {\n\t    name: name,\n\t    index: index, // For context during callback.\n\t    group: group, // For context during callback.\n\t    on: emptyOn,\n\t    tween: emptyTween,\n\t    time: timing.time,\n\t    delay: timing.delay,\n\t    duration: timing.duration,\n\t    ease: timing.ease,\n\t    timer: null,\n\t    state: CREATED\n\t  });\n\t};\n\t\n\tfunction init(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction set$3(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction get$1(node, id) {\n\t  var schedule = node.__transition;\n\t  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t  return schedule;\n\t}\n\t\n\tfunction create(node, id, self) {\n\t  var schedules = node.__transition,\n\t      tween;\n\t\n\t  // Initialize the self timer when the transition is created.\n\t  // Note the actual delay is not known until the first callback!\n\t  schedules[id] = self;\n\t  self.timer = timer(schedule, 0, self.time);\n\t\n\t  function schedule(elapsed) {\n\t    self.state = SCHEDULED;\n\t    self.timer.restart(start, self.delay, self.time);\n\t\n\t    // If the elapsed delay is less than our first sleep, start immediately.\n\t    if (self.delay <= elapsed) start(elapsed - self.delay);\n\t  }\n\t\n\t  function start(elapsed) {\n\t    var i, j, n, o;\n\t\n\t    // If the state is not SCHEDULED, then we previously errored on start.\n\t    if (self.state !== SCHEDULED) return stop();\n\t\n\t    for (i in schedules) {\n\t      o = schedules[i];\n\t      if (o.name !== self.name) continue;\n\t\n\t      // While this element already has a starting transition during this frame,\n\t      // defer starting an interrupting transition until that transition has a\n\t      // chance to tick (and possibly end); see d3/d3-transition#54!\n\t      if (o.state === STARTED) return timeout$1(start);\n\t\n\t      // Interrupt the active transition, if any.\n\t      // Dispatch the interrupt event.\n\t      if (o.state === RUNNING) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t        delete schedules[i];\n\t      }\n\t\n\t      // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t      // because the cancelled transitions never started. Note that this also\n\t      // removes this transition from the pending list!\n\t      else if (+i < id) {\n\t        o.state = ENDED;\n\t        o.timer.stop();\n\t        delete schedules[i];\n\t      }\n\t    }\n\t\n\t    // Defer the first tick to end of the current frame; see d3/d3#1576.\n\t    // Note the transition may be canceled after start and before the first tick!\n\t    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t    // Assuming this is successful, subsequent callbacks go straight to tick.\n\t    timeout$1(function() {\n\t      if (self.state === STARTED) {\n\t        self.state = RUNNING;\n\t        self.timer.restart(tick, self.delay, self.time);\n\t        tick(elapsed);\n\t      }\n\t    });\n\t\n\t    // Dispatch the start event.\n\t    // Note this must be done before the tween are initialized.\n\t    self.state = STARTING;\n\t    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t    if (self.state !== STARTING) return; // interrupted\n\t    self.state = STARTED;\n\t\n\t    // Initialize the tween, deleting null tween.\n\t    tween = new Array(n = self.tween.length);\n\t    for (i = 0, j = -1; i < n; ++i) {\n\t      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t        tween[++j] = o;\n\t      }\n\t    }\n\t    tween.length = j + 1;\n\t  }\n\t\n\t  function tick(elapsed) {\n\t    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n\t        i = -1,\n\t        n = tween.length;\n\t\n\t    while (++i < n) {\n\t      tween[i].call(null, t);\n\t    }\n\t\n\t    // Dispatch the end event.\n\t    if (self.state === ENDING) {\n\t      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t      stop();\n\t    }\n\t  }\n\t\n\t  function stop() {\n\t    self.state = ENDED;\n\t    self.timer.stop();\n\t    delete schedules[id];\n\t    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n\t    delete node.__transition;\n\t  }\n\t}\n\t\n\tvar interrupt = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      active,\n\t      empty = true,\n\t      i;\n\t\n\t  if (!schedules) return;\n\t\n\t  name = name == null ? null : name + \"\";\n\t\n\t  for (i in schedules) {\n\t    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t    active = schedule.state > STARTING && schedule.state < ENDING;\n\t    schedule.state = ENDED;\n\t    schedule.timer.stop();\n\t    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t    delete schedules[i];\n\t  }\n\t\n\t  if (empty) delete node.__transition;\n\t};\n\t\n\tvar selection_interrupt = function(name) {\n\t  return this.each(function() {\n\t    interrupt(this, name);\n\t  });\n\t};\n\t\n\tfunction tweenRemove(id, name) {\n\t  var tween0, tween1;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = tween0 = tween;\n\t      for (var i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1 = tween1.slice();\n\t          tween1.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tfunction tweenFunction(id, name, value) {\n\t  var tween0, tween1;\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    var schedule = set$3(this, id),\n\t        tween = schedule.tween;\n\t\n\t    // If this node shared tween with the previous node,\n\t    // just assign the updated shared tween and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (tween !== tween0) {\n\t      tween1 = (tween0 = tween).slice();\n\t      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t        if (tween1[i].name === name) {\n\t          tween1[i] = t;\n\t          break;\n\t        }\n\t      }\n\t      if (i === n) tween1.push(t);\n\t    }\n\t\n\t    schedule.tween = tween1;\n\t  };\n\t}\n\t\n\tvar transition_tween = function(name, value) {\n\t  var id = this._id;\n\t\n\t  name += \"\";\n\t\n\t  if (arguments.length < 2) {\n\t    var tween = get$1(this.node(), id).tween;\n\t    for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t      if ((t = tween[i]).name === name) {\n\t        return t.value;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t};\n\t\n\tfunction tweenValue(transition, name, value) {\n\t  var id = transition._id;\n\t\n\t  transition.each(function() {\n\t    var schedule = set$3(this, id);\n\t    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t  });\n\t\n\t  return function(node) {\n\t    return get$1(node, id).value[name];\n\t  };\n\t}\n\t\n\tvar interpolate$1 = function(a, b) {\n\t  var c;\n\t  return (typeof b === \"number\" ? interpolateNumber\n\t      : b instanceof color ? interpolateRgb\n\t      : (c = color(b)) ? (b = c, interpolateRgb)\n\t      : interpolateString)(a, b);\n\t};\n\t\n\tfunction attrRemove$1(name) {\n\t  return function() {\n\t    this.removeAttribute(name);\n\t  };\n\t}\n\t\n\tfunction attrRemoveNS$1(fullname) {\n\t  return function() {\n\t    this.removeAttributeNS(fullname.space, fullname.local);\n\t  };\n\t}\n\t\n\tfunction attrConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction attrFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttribute(name);\n\t    value0 = this.getAttribute(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var value0, value1 = value(this);\n\t    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t    value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_attr = function(name, value) {\n\t  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n\t  return this.attrTween(name, typeof value === \"function\"\n\t      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t};\n\t\n\tfunction attrTweenNS(fullname, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tfunction attrTween(name, value) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.setAttribute(name, i(t));\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_attrTween = function(name, value) {\n\t  var key = \"attr.\" + name;\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  var fullname = namespace(name);\n\t  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t};\n\t\n\tfunction delayFunction(id, value) {\n\t  return function() {\n\t    init(this, id).delay = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction delayConstant(id, value) {\n\t  return value = +value, function() {\n\t    init(this, id).delay = value;\n\t  };\n\t}\n\t\n\tvar transition_delay = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? delayFunction\n\t          : delayConstant)(id, value))\n\t      : get$1(this.node(), id).delay;\n\t};\n\t\n\tfunction durationFunction(id, value) {\n\t  return function() {\n\t    set$3(this, id).duration = +value.apply(this, arguments);\n\t  };\n\t}\n\t\n\tfunction durationConstant(id, value) {\n\t  return value = +value, function() {\n\t    set$3(this, id).duration = value;\n\t  };\n\t}\n\t\n\tvar transition_duration = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each((typeof value === \"function\"\n\t          ? durationFunction\n\t          : durationConstant)(id, value))\n\t      : get$1(this.node(), id).duration;\n\t};\n\t\n\tfunction easeConstant(id, value) {\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return function() {\n\t    set$3(this, id).ease = value;\n\t  };\n\t}\n\t\n\tvar transition_ease = function(value) {\n\t  var id = this._id;\n\t\n\t  return arguments.length\n\t      ? this.each(easeConstant(id, value))\n\t      : get$1(this.node(), id).ease;\n\t};\n\t\n\tvar transition_filter = function(match) {\n\t  if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, this._name, this._id);\n\t};\n\t\n\tvar transition_merge = function(transition) {\n\t  if (transition._id !== this._id) throw new Error;\n\t\n\t  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t      if (node = group0[i] || group1[i]) {\n\t        merge[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  for (; j < m0; ++j) {\n\t    merges[j] = groups0[j];\n\t  }\n\t\n\t  return new Transition(merges, this._parents, this._name, this._id);\n\t};\n\t\n\tfunction start$1(name) {\n\t  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t    var i = t.indexOf(\".\");\n\t    if (i >= 0) t = t.slice(0, i);\n\t    return !t || t === \"start\";\n\t  });\n\t}\n\t\n\tfunction onFunction(id, name, listener) {\n\t  var on0, on1, sit = start$1(name) ? init : set$3;\n\t  return function() {\n\t    var schedule = sit(this, id),\n\t        on = schedule.on;\n\t\n\t    // If this node shared a dispatch with the previous node,\n\t    // just assign the updated shared dispatch and we’re done!\n\t    // Otherwise, copy-on-write.\n\t    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t    schedule.on = on1;\n\t  };\n\t}\n\t\n\tvar transition_on = function(name, listener) {\n\t  var id = this._id;\n\t\n\t  return arguments.length < 2\n\t      ? get$1(this.node(), id).on.on(name)\n\t      : this.each(onFunction(id, name, listener));\n\t};\n\t\n\tfunction removeFunction(id) {\n\t  return function() {\n\t    var parent = this.parentNode;\n\t    for (var i in this.__transition) if (+i !== id) return;\n\t    if (parent) parent.removeChild(this);\n\t  };\n\t}\n\t\n\tvar transition_remove = function() {\n\t  return this.on(\"end.remove\", removeFunction(this._id));\n\t};\n\t\n\tvar transition_select = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n\t        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t        subgroup[i] = subnode;\n\t        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, this._parents, name, id);\n\t};\n\t\n\tvar transition_selectAll = function(select$$1) {\n\t  var name = this._name,\n\t      id = this._id;\n\t\n\t  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\t\n\t  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t          if (child = children[k]) {\n\t            schedule(child, name, id, k, children, inherit);\n\t          }\n\t        }\n\t        subgroups.push(children);\n\t        parents.push(node);\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(subgroups, parents, name, id);\n\t};\n\t\n\tvar Selection$1 = selection.prototype.constructor;\n\t\n\tvar transition_selection = function() {\n\t  return new Selection$1(this._groups, this._parents);\n\t};\n\t\n\tfunction styleRemove$1(name, interpolate$$1) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tfunction styleRemoveEnd(name) {\n\t  return function() {\n\t    this.style.removeProperty(name);\n\t  };\n\t}\n\t\n\tfunction styleConstant$1(name, interpolate$$1, value1) {\n\t  var value00,\n\t      interpolate0;\n\t  return function() {\n\t    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t    return value0 === value1 ? null\n\t        : value0 === value00 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value1);\n\t  };\n\t}\n\t\n\tfunction styleFunction$1(name, interpolate$$1, value) {\n\t  var value00,\n\t      value10,\n\t      interpolate0;\n\t  return function() {\n\t    var style = window(this).getComputedStyle(this, null),\n\t        value0 = style.getPropertyValue(name),\n\t        value1 = value(this);\n\t    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t    return value0 === value1 ? null\n\t        : value0 === value00 && value1 === value10 ? interpolate0\n\t        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n\t  };\n\t}\n\t\n\tvar transition_style = function(name, value, priority) {\n\t  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n\t  return value == null ? this\n\t          .styleTween(name, styleRemove$1(name, i))\n\t          .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t      : this.styleTween(name, typeof value === \"function\"\n\t          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t          : styleConstant$1(name, i, value), priority);\n\t};\n\t\n\tfunction styleTween(name, value, priority) {\n\t  function tween() {\n\t    var node = this, i = value.apply(node, arguments);\n\t    return i && function(t) {\n\t      node.style.setProperty(name, i(t), priority);\n\t    };\n\t  }\n\t  tween._value = value;\n\t  return tween;\n\t}\n\t\n\tvar transition_styleTween = function(name, value, priority) {\n\t  var key = \"style.\" + (name += \"\");\n\t  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t  if (value == null) return this.tween(key, null);\n\t  if (typeof value !== \"function\") throw new Error;\n\t  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t};\n\t\n\tfunction textConstant$1(value) {\n\t  return function() {\n\t    this.textContent = value;\n\t  };\n\t}\n\t\n\tfunction textFunction$1(value) {\n\t  return function() {\n\t    var value1 = value(this);\n\t    this.textContent = value1 == null ? \"\" : value1;\n\t  };\n\t}\n\t\n\tvar transition_text = function(value) {\n\t  return this.tween(\"text\", typeof value === \"function\"\n\t      ? textFunction$1(tweenValue(this, \"text\", value))\n\t      : textConstant$1(value == null ? \"\" : value + \"\"));\n\t};\n\t\n\tvar transition_transition = function() {\n\t  var name = this._name,\n\t      id0 = this._id,\n\t      id1 = newId();\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        var inherit = get$1(node, id0);\n\t        schedule(node, name, id1, i, group, {\n\t          time: inherit.time + inherit.delay + inherit.duration,\n\t          delay: 0,\n\t          duration: inherit.duration,\n\t          ease: inherit.ease\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id1);\n\t};\n\t\n\tvar id = 0;\n\t\n\tfunction Transition(groups, parents, name, id) {\n\t  this._groups = groups;\n\t  this._parents = parents;\n\t  this._name = name;\n\t  this._id = id;\n\t}\n\t\n\tfunction transition(name) {\n\t  return selection().transition(name);\n\t}\n\t\n\tfunction newId() {\n\t  return ++id;\n\t}\n\t\n\tvar selection_prototype = selection.prototype;\n\t\n\tTransition.prototype = transition.prototype = {\n\t  constructor: Transition,\n\t  select: transition_select,\n\t  selectAll: transition_selectAll,\n\t  filter: transition_filter,\n\t  merge: transition_merge,\n\t  selection: transition_selection,\n\t  transition: transition_transition,\n\t  call: selection_prototype.call,\n\t  nodes: selection_prototype.nodes,\n\t  node: selection_prototype.node,\n\t  size: selection_prototype.size,\n\t  empty: selection_prototype.empty,\n\t  each: selection_prototype.each,\n\t  on: transition_on,\n\t  attr: transition_attr,\n\t  attrTween: transition_attrTween,\n\t  style: transition_style,\n\t  styleTween: transition_styleTween,\n\t  text: transition_text,\n\t  remove: transition_remove,\n\t  tween: transition_tween,\n\t  delay: transition_delay,\n\t  duration: transition_duration,\n\t  ease: transition_ease\n\t};\n\t\n\tvar defaultTiming = {\n\t  time: null, // Set on use.\n\t  delay: 0,\n\t  duration: 250,\n\t  ease: cubicInOut\n\t};\n\t\n\tfunction inherit(node, id) {\n\t  var timing;\n\t  while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t    if (!(node = node.parentNode)) {\n\t      return defaultTiming.time = now(), defaultTiming;\n\t    }\n\t  }\n\t  return timing;\n\t}\n\t\n\tvar selection_transition = function(name) {\n\t  var id,\n\t      timing;\n\t\n\t  if (name instanceof Transition) {\n\t    id = name._id, name = name._name;\n\t  } else {\n\t    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t  }\n\t\n\t  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t      if (node = group[i]) {\n\t        schedule(node, name, id, i, group, timing || inherit(node, id));\n\t      }\n\t    }\n\t  }\n\t\n\t  return new Transition(groups, this._parents, name, id);\n\t};\n\t\n\tselection.prototype.interrupt = selection_interrupt;\n\tselection.prototype.transition = selection_transition;\n\t\n\tvar root$1 = [null];\n\t\n\tvar active = function(node, name) {\n\t  var schedules = node.__transition,\n\t      schedule,\n\t      i;\n\t\n\t  if (schedules) {\n\t    name = name == null ? null : name + \"\";\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t        return new Transition([[node]], root$1, name, +i);\n\t      }\n\t    }\n\t  }\n\t\n\t  return null;\n\t};\n\t\n\tvar slice$4 = Array.prototype.slice;\n\t\n\tvar identity$5 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar top = 1;\n\tvar right = 2;\n\tvar bottom = 3;\n\tvar left = 4;\n\tvar epsilon$2 = 1e-6;\n\t\n\tfunction translateX(scale0, scale1, d) {\n\t  var x = scale0(d);\n\t  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t}\n\t\n\tfunction translateY(scale0, scale1, d) {\n\t  var y = scale0(d);\n\t  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t}\n\t\n\tfunction center(scale) {\n\t  var offset = scale.bandwidth() / 2;\n\t  if (scale.round()) offset = Math.round(offset);\n\t  return function(d) {\n\t    return scale(d) + offset;\n\t  };\n\t}\n\t\n\tfunction entering() {\n\t  return !this.__axis;\n\t}\n\t\n\tfunction axis(orient, scale) {\n\t  var tickArguments = [],\n\t      tickValues = null,\n\t      tickFormat = null,\n\t      tickSizeInner = 6,\n\t      tickSizeOuter = 6,\n\t      tickPadding = 3;\n\t\n\t  function axis(context) {\n\t    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t        transform = orient === top || orient === bottom ? translateX : translateY,\n\t        range = scale.range(),\n\t        range0 = range[0] + 0.5,\n\t        range1 = range[range.length - 1] + 0.5,\n\t        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t        selection = context.selection ? context.selection() : context,\n\t        path = selection.selectAll(\".domain\").data([null]),\n\t        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t        tickExit = tick.exit(),\n\t        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t        line = tick.select(\"line\"),\n\t        text = tick.select(\"text\"),\n\t        k = orient === top || orient === left ? -1 : 1,\n\t        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t    path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t        .attr(\"class\", \"domain\")\n\t        .attr(\"stroke\", \"#000\"));\n\t\n\t    tick = tick.merge(tickEnter);\n\t\n\t    line = line.merge(tickEnter.append(\"line\")\n\t        .attr(\"stroke\", \"#000\")\n\t        .attr(x + \"2\", k * tickSizeInner)\n\t        .attr(y + \"1\", 0.5)\n\t        .attr(y + \"2\", 0.5));\n\t\n\t    text = text.merge(tickEnter.append(\"text\")\n\t        .attr(\"fill\", \"#000\")\n\t        .attr(x, k * spacing)\n\t        .attr(y, 0.5)\n\t        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t    if (context !== selection) {\n\t      path = path.transition(context);\n\t      tick = tick.transition(context);\n\t      line = line.transition(context);\n\t      text = text.transition(context);\n\t\n\t      tickExit = tickExit.transition(context)\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t      tickEnter\n\t          .attr(\"opacity\", epsilon$2)\n\t          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t    }\n\t\n\t    tickExit.remove();\n\t\n\t    path\n\t        .attr(\"d\", orient === left || orient == right\n\t            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t    tick\n\t        .attr(\"opacity\", 1)\n\t        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t    line\n\t        .attr(x + \"2\", k * tickSizeInner);\n\t\n\t    text\n\t        .attr(x, k * spacing)\n\t        .text(format);\n\t\n\t    selection.filter(entering)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"font-size\", 10)\n\t        .attr(\"font-family\", \"sans-serif\")\n\t        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t    selection\n\t        .each(function() { this.__axis = position; });\n\t  }\n\t\n\t  axis.scale = function(_) {\n\t    return arguments.length ? (scale = _, axis) : scale;\n\t  };\n\t\n\t  axis.ticks = function() {\n\t    return tickArguments = slice$4.call(arguments), axis;\n\t  };\n\t\n\t  axis.tickArguments = function(_) {\n\t    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t  };\n\t\n\t  axis.tickValues = function(_) {\n\t    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t  };\n\t\n\t  axis.tickFormat = function(_) {\n\t    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t  };\n\t\n\t  axis.tickSize = function(_) {\n\t    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeInner = function(_) {\n\t    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t  };\n\t\n\t  axis.tickSizeOuter = function(_) {\n\t    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t  };\n\t\n\t  axis.tickPadding = function(_) {\n\t    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t  };\n\t\n\t  return axis;\n\t}\n\t\n\tfunction axisTop(scale) {\n\t  return axis(top, scale);\n\t}\n\t\n\tfunction axisRight(scale) {\n\t  return axis(right, scale);\n\t}\n\t\n\tfunction axisBottom(scale) {\n\t  return axis(bottom, scale);\n\t}\n\t\n\tfunction axisLeft(scale) {\n\t  return axis(left, scale);\n\t}\n\t\n\tfunction defaultSeparation(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\tfunction meanX(children) {\n\t  return children.reduce(meanXReduce, 0) / children.length;\n\t}\n\t\n\tfunction meanXReduce(x, c) {\n\t  return x + c.x;\n\t}\n\t\n\tfunction maxY(children) {\n\t  return 1 + children.reduce(maxYReduce, 0);\n\t}\n\t\n\tfunction maxYReduce(y, c) {\n\t  return Math.max(y, c.y);\n\t}\n\t\n\tfunction leafLeft(node) {\n\t  var children;\n\t  while (children = node.children) node = children[0];\n\t  return node;\n\t}\n\t\n\tfunction leafRight(node) {\n\t  var children;\n\t  while (children = node.children) node = children[children.length - 1];\n\t  return node;\n\t}\n\t\n\tvar cluster = function() {\n\t  var separation = defaultSeparation,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = false;\n\t\n\t  function cluster(root) {\n\t    var previousNode,\n\t        x = 0;\n\t\n\t    // First walk, computing the initial x & y values.\n\t    root.eachAfter(function(node) {\n\t      var children = node.children;\n\t      if (children) {\n\t        node.x = meanX(children);\n\t        node.y = maxY(children);\n\t      } else {\n\t        node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t        node.y = 0;\n\t        previousNode = node;\n\t      }\n\t    });\n\t\n\t    var left = leafLeft(root),\n\t        right = leafRight(root),\n\t        x0 = left.x - separation(left, right) / 2,\n\t        x1 = right.x + separation(right, left) / 2;\n\t\n\t    // Second walk, normalizing x & y to the desired size.\n\t    return root.eachAfter(nodeSize ? function(node) {\n\t      node.x = (node.x - root.x) * dx;\n\t      node.y = (root.y - node.y) * dy;\n\t    } : function(node) {\n\t      node.x = (node.x - x0) / (x1 - x0) * dx;\n\t      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t    });\n\t  }\n\t\n\t  cluster.separation = function(x) {\n\t    return arguments.length ? (separation = x, cluster) : separation;\n\t  };\n\t\n\t  cluster.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  cluster.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return cluster;\n\t};\n\t\n\tvar node_each = function(callback) {\n\t  var node = this, current, next = [node], children, i, n;\n\t  do {\n\t    current = next.reverse(), next = [];\n\t    while (node = current.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        next.push(children[i]);\n\t      }\n\t    }\n\t  } while (next.length);\n\t  return this;\n\t};\n\t\n\tvar node_eachBefore = function(callback) {\n\t  var node = this, nodes = [node], children, i;\n\t  while (node = nodes.pop()) {\n\t    callback(node), children = node.children;\n\t    if (children) for (i = children.length - 1; i >= 0; --i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_eachAfter = function(callback) {\n\t  var node = this, nodes = [node], next = [], children, i, n;\n\t  while (node = nodes.pop()) {\n\t    next.push(node), children = node.children;\n\t    if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t      nodes.push(children[i]);\n\t    }\n\t  }\n\t  while (node = next.pop()) {\n\t    callback(node);\n\t  }\n\t  return this;\n\t};\n\t\n\tvar node_sum = function(value) {\n\t  return this.eachAfter(function(node) {\n\t    var sum = +value(node.data) || 0,\n\t        children = node.children,\n\t        i = children && children.length;\n\t    while (--i >= 0) sum += children[i].value;\n\t    node.value = sum;\n\t  });\n\t};\n\t\n\tvar node_sort = function(compare) {\n\t  return this.eachBefore(function(node) {\n\t    if (node.children) {\n\t      node.children.sort(compare);\n\t    }\n\t  });\n\t};\n\t\n\tvar node_path = function(end) {\n\t  var start = this,\n\t      ancestor = leastCommonAncestor(start, end),\n\t      nodes = [start];\n\t  while (start !== ancestor) {\n\t    start = start.parent;\n\t    nodes.push(start);\n\t  }\n\t  var k = nodes.length;\n\t  while (end !== ancestor) {\n\t    nodes.splice(k, 0, end);\n\t    end = end.parent;\n\t  }\n\t  return nodes;\n\t};\n\t\n\tfunction leastCommonAncestor(a, b) {\n\t  if (a === b) return a;\n\t  var aNodes = a.ancestors(),\n\t      bNodes = b.ancestors(),\n\t      c = null;\n\t  a = aNodes.pop();\n\t  b = bNodes.pop();\n\t  while (a === b) {\n\t    c = a;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t  }\n\t  return c;\n\t}\n\t\n\tvar node_ancestors = function() {\n\t  var node = this, nodes = [node];\n\t  while (node = node.parent) {\n\t    nodes.push(node);\n\t  }\n\t  return nodes;\n\t};\n\t\n\tvar node_descendants = function() {\n\t  var nodes = [];\n\t  this.each(function(node) {\n\t    nodes.push(node);\n\t  });\n\t  return nodes;\n\t};\n\t\n\tvar node_leaves = function() {\n\t  var leaves = [];\n\t  this.eachBefore(function(node) {\n\t    if (!node.children) {\n\t      leaves.push(node);\n\t    }\n\t  });\n\t  return leaves;\n\t};\n\t\n\tvar node_links = function() {\n\t  var root = this, links = [];\n\t  root.each(function(node) {\n\t    if (node !== root) { // Don’t include the root’s parent, if any.\n\t      links.push({source: node.parent, target: node});\n\t    }\n\t  });\n\t  return links;\n\t};\n\t\n\tfunction hierarchy(data, children) {\n\t  var root = new Node(data),\n\t      valued = +data.value && (root.value = data.value),\n\t      node,\n\t      nodes = [root],\n\t      child,\n\t      childs,\n\t      i,\n\t      n;\n\t\n\t  if (children == null) children = defaultChildren;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (valued) node.value = +node.data.value;\n\t    if ((childs = children(node.data)) && (n = childs.length)) {\n\t      node.children = new Array(n);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new Node(childs[i]));\n\t        child.parent = node;\n\t        child.depth = node.depth + 1;\n\t      }\n\t    }\n\t  }\n\t\n\t  return root.eachBefore(computeHeight);\n\t}\n\t\n\tfunction node_copy() {\n\t  return hierarchy(this).eachBefore(copyData);\n\t}\n\t\n\tfunction defaultChildren(d) {\n\t  return d.children;\n\t}\n\t\n\tfunction copyData(node) {\n\t  node.data = node.data.data;\n\t}\n\t\n\tfunction computeHeight(node) {\n\t  var height = 0;\n\t  do node.height = height;\n\t  while ((node = node.parent) && (node.height < ++height));\n\t}\n\t\n\tfunction Node(data) {\n\t  this.data = data;\n\t  this.depth =\n\t  this.height = 0;\n\t  this.parent = null;\n\t}\n\t\n\tNode.prototype = hierarchy.prototype = {\n\t  constructor: Node,\n\t  each: node_each,\n\t  eachAfter: node_eachAfter,\n\t  eachBefore: node_eachBefore,\n\t  sum: node_sum,\n\t  sort: node_sort,\n\t  path: node_path,\n\t  ancestors: node_ancestors,\n\t  descendants: node_descendants,\n\t  leaves: node_leaves,\n\t  links: node_links,\n\t  copy: node_copy\n\t};\n\t\n\tfunction Node$2(value) {\n\t  this._ = value;\n\t  this.next = null;\n\t}\n\t\n\tvar shuffle$1 = function(array) {\n\t  var i,\n\t      n = (array = array.slice()).length,\n\t      head = null,\n\t      node = head;\n\t\n\t  while (n) {\n\t    var next = new Node$2(array[n - 1]);\n\t    if (node) node = node.next = next;\n\t    else node = head = next;\n\t    array[i] = array[--n];\n\t  }\n\t\n\t  return {\n\t    head: head,\n\t    tail: node\n\t  };\n\t};\n\t\n\tvar enclose = function(circles) {\n\t  return encloseN(shuffle$1(circles), []);\n\t};\n\t\n\tfunction encloses(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r - b.r;\n\t  return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t}\n\t\n\t// Returns the smallest circle that contains circles L and intersects circles B.\n\tfunction encloseN(L, B) {\n\t  var circle,\n\t      l0 = null,\n\t      l1 = L.head,\n\t      l2,\n\t      p1;\n\t\n\t  switch (B.length) {\n\t    case 1: circle = enclose1(B[0]); break;\n\t    case 2: circle = enclose2(B[0], B[1]); break;\n\t    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t  }\n\t\n\t  while (l1) {\n\t    p1 = l1._, l2 = l1.next;\n\t    if (!circle || !encloses(circle, p1)) {\n\t\n\t      // Temporarily truncate L before l1.\n\t      if (l0) L.tail = l0, l0.next = null;\n\t      else L.head = L.tail = null;\n\t\n\t      B.push(p1);\n\t      circle = encloseN(L, B); // Note: reorders L!\n\t      B.pop();\n\t\n\t      // Move l1 to the front of L and reconnect the truncated list L.\n\t      if (L.head) l1.next = L.head, L.head = l1;\n\t      else l1.next = null, L.head = L.tail = l1;\n\t      l0 = L.tail, l0.next = l2;\n\t\n\t    } else {\n\t      l0 = l1;\n\t    }\n\t    l1 = l2;\n\t  }\n\t\n\t  L.tail = l0;\n\t  return circle;\n\t}\n\t\n\tfunction enclose1(a) {\n\t  return {\n\t    x: a.x,\n\t    y: a.y,\n\t    r: a.r\n\t  };\n\t}\n\t\n\tfunction enclose2(a, b) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t      l = Math.sqrt(x21 * x21 + y21 * y21);\n\t  return {\n\t    x: (x1 + x2 + x21 / l * r21) / 2,\n\t    y: (y1 + y2 + y21 / l * r21) / 2,\n\t    r: (l + r1 + r2) / 2\n\t  };\n\t}\n\t\n\tfunction enclose3(a, b, c) {\n\t  var x1 = a.x, y1 = a.y, r1 = a.r,\n\t      x2 = b.x, y2 = b.y, r2 = b.r,\n\t      x3 = c.x, y3 = c.y, r3 = c.r,\n\t      a2 = 2 * (x1 - x2),\n\t      b2 = 2 * (y1 - y2),\n\t      c2 = 2 * (r2 - r1),\n\t      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t      a3 = 2 * (x1 - x3),\n\t      b3 = 2 * (y1 - y3),\n\t      c3 = 2 * (r3 - r1),\n\t      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t      ab = a3 * b2 - a2 * b3,\n\t      xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t      xb = (b3 * c2 - b2 * c3) / ab,\n\t      ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t      yb = (a2 * c3 - a3 * c2) / ab,\n\t      A = xb * xb + yb * yb - 1,\n\t      B = 2 * (xa * xb + ya * yb + r1),\n\t      C = xa * xa + ya * ya - r1 * r1,\n\t      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t  return {\n\t    x: xa + xb * r + x1,\n\t    y: ya + yb * r + y1,\n\t    r: r\n\t  };\n\t}\n\t\n\tfunction place(a, b, c) {\n\t  var ax = a.x,\n\t      ay = a.y,\n\t      da = b.r + c.r,\n\t      db = a.r + c.r,\n\t      dx = b.x - ax,\n\t      dy = b.y - ay,\n\t      dc = dx * dx + dy * dy;\n\t  if (dc) {\n\t    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t    c.x = ax + x * dx + y * dy;\n\t    c.y = ay + x * dy - y * dx;\n\t  } else {\n\t    c.x = ax + db;\n\t    c.y = ay;\n\t  }\n\t}\n\t\n\tfunction intersects(a, b) {\n\t  var dx = b.x - a.x,\n\t      dy = b.y - a.y,\n\t      dr = a.r + b.r;\n\t  return dr * dr > dx * dx + dy * dy;\n\t}\n\t\n\tfunction distance2(circle, x, y) {\n\t  var dx = circle.x - x,\n\t      dy = circle.y - y;\n\t  return dx * dx + dy * dy;\n\t}\n\t\n\tfunction Node$1(circle) {\n\t  this._ = circle;\n\t  this.next = null;\n\t  this.previous = null;\n\t}\n\t\n\tfunction packEnclose(circles) {\n\t  if (!(n = circles.length)) return 0;\n\t\n\t  var a, b, c, n;\n\t\n\t  // Place the first circle.\n\t  a = circles[0], a.x = 0, a.y = 0;\n\t  if (!(n > 1)) return a.r;\n\t\n\t  // Place the second circle.\n\t  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t  if (!(n > 2)) return a.r + b.r;\n\t\n\t  // Place the third circle.\n\t  place(b, a, c = circles[2]);\n\t\n\t  // Initialize the weighted centroid.\n\t  var aa = a.r * a.r,\n\t      ba = b.r * b.r,\n\t      ca = c.r * c.r,\n\t      oa = aa + ba + ca,\n\t      ox = aa * a.x + ba * b.x + ca * c.x,\n\t      oy = aa * a.y + ba * b.y + ca * c.y,\n\t      cx, cy, i, j, k, sj, sk;\n\t\n\t  // Initialize the front-chain using the first three circles a, b and c.\n\t  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t  a.next = c.previous = b;\n\t  b.next = a.previous = c;\n\t  c.next = b.previous = a;\n\t\n\t  // Attempt to place each remaining circle…\n\t  pack: for (i = 3; i < n; ++i) {\n\t    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t    // If there are only three elements in the front-chain…\n\t    if ((k = a.previous) === (j = b.next)) {\n\t      // If the new circle intersects the third circle,\n\t      // rotate the front chain to try the next position.\n\t      if (intersects(j._, c._)) {\n\t        a = b, b = j, --i;\n\t        continue pack;\n\t      }\n\t    }\n\t\n\t    // Find the closest intersecting circle on the front-chain, if any.\n\t    else {\n\t      sj = j._.r, sk = k._.r;\n\t      do {\n\t        if (sj <= sk) {\n\t          if (intersects(j._, c._)) {\n\t            b = j, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          j = j.next, sj += j._.r;\n\t        } else {\n\t          if (intersects(k._, c._)) {\n\t            a = k, a.next = b, b.previous = a, --i;\n\t            continue pack;\n\t          }\n\t          k = k.previous, sk += k._.r;\n\t        }\n\t      } while (j !== k.next);\n\t    }\n\t\n\t    // Success! Insert the new circle c between a and b.\n\t    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t    // Update the weighted centroid.\n\t    oa += ca = c._.r * c._.r;\n\t    ox += ca * c._.x;\n\t    oy += ca * c._.y;\n\t\n\t    // Compute the new closest circle a to centroid.\n\t    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t    while ((c = c.next) !== b) {\n\t      if ((ca = distance2(c._, cx, cy)) < aa) {\n\t        a = c, aa = ca;\n\t      }\n\t    }\n\t    b = a.next;\n\t  }\n\t\n\t  // Compute the enclosing circle of the front chain.\n\t  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t  // Translate the circles to put the enclosing circle around the origin.\n\t  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t  return c.r;\n\t}\n\t\n\tvar siblings = function(circles) {\n\t  packEnclose(circles);\n\t  return circles;\n\t};\n\t\n\tfunction optional(f) {\n\t  return f == null ? null : required(f);\n\t}\n\t\n\tfunction required(f) {\n\t  if (typeof f !== \"function\") throw new Error;\n\t  return f;\n\t}\n\t\n\tfunction constantZero() {\n\t  return 0;\n\t}\n\t\n\tvar constant$6 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultRadius(d) {\n\t  return Math.sqrt(d.value);\n\t}\n\t\n\tvar index = function() {\n\t  var radius = null,\n\t      dx = 1,\n\t      dy = 1,\n\t      padding = constantZero;\n\t\n\t  function pack(root) {\n\t    root.x = dx / 2, root.y = dy / 2;\n\t    if (radius) {\n\t      root.eachBefore(radiusLeaf(radius))\n\t          .eachAfter(packChildren(padding, 0.5))\n\t          .eachBefore(translateChild(1));\n\t    } else {\n\t      root.eachBefore(radiusLeaf(defaultRadius))\n\t          .eachAfter(packChildren(constantZero, 1))\n\t          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t    }\n\t    return root;\n\t  }\n\t\n\t  pack.radius = function(x) {\n\t    return arguments.length ? (radius = optional(x), pack) : radius;\n\t  };\n\t\n\t  pack.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t  };\n\t\n\t  pack.padding = function(x) {\n\t    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n\t  };\n\t\n\t  return pack;\n\t};\n\t\n\tfunction radiusLeaf(radius) {\n\t  return function(node) {\n\t    if (!node.children) {\n\t      node.r = Math.max(0, +radius(node) || 0);\n\t    }\n\t  };\n\t}\n\t\n\tfunction packChildren(padding, k) {\n\t  return function(node) {\n\t    if (children = node.children) {\n\t      var children,\n\t          i,\n\t          n = children.length,\n\t          r = padding(node) * k || 0,\n\t          e;\n\t\n\t      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t      e = packEnclose(children);\n\t      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t      node.r = e + r;\n\t    }\n\t  };\n\t}\n\t\n\tfunction translateChild(k) {\n\t  return function(node) {\n\t    var parent = node.parent;\n\t    node.r *= k;\n\t    if (parent) {\n\t      node.x = parent.x + k * node.x;\n\t      node.y = parent.y + k * node.y;\n\t    }\n\t  };\n\t}\n\t\n\tvar roundNode = function(node) {\n\t  node.x0 = Math.round(node.x0);\n\t  node.y0 = Math.round(node.y0);\n\t  node.x1 = Math.round(node.x1);\n\t  node.y1 = Math.round(node.y1);\n\t};\n\t\n\tvar treemapDice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (x1 - x0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t    node.x0 = x0, node.x1 = x0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar partition = function() {\n\t  var dx = 1,\n\t      dy = 1,\n\t      padding = 0,\n\t      round = false;\n\t\n\t  function partition(root) {\n\t    var n = root.height + 1;\n\t    root.x0 =\n\t    root.y0 = padding;\n\t    root.x1 = dx;\n\t    root.y1 = dy / n;\n\t    root.eachBefore(positionNode(dy, n));\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(dy, n) {\n\t    return function(node) {\n\t      if (node.children) {\n\t        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t      }\n\t      var x0 = node.x0,\n\t          y0 = node.y0,\n\t          x1 = node.x1 - padding,\n\t          y1 = node.y1 - padding;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t    };\n\t  }\n\t\n\t  partition.round = function(x) {\n\t    return arguments.length ? (round = !!x, partition) : round;\n\t  };\n\t\n\t  partition.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t  };\n\t\n\t  partition.padding = function(x) {\n\t    return arguments.length ? (padding = +x, partition) : padding;\n\t  };\n\t\n\t  return partition;\n\t};\n\t\n\tvar keyPrefix$1 = \"$\";\n\tvar preroot = {depth: -1};\n\tvar ambiguous = {};\n\t\n\tfunction defaultId(d) {\n\t  return d.id;\n\t}\n\t\n\tfunction defaultParentId(d) {\n\t  return d.parentId;\n\t}\n\t\n\tvar stratify = function() {\n\t  var id = defaultId,\n\t      parentId = defaultParentId;\n\t\n\t  function stratify(data) {\n\t    var d,\n\t        i,\n\t        n = data.length,\n\t        root,\n\t        parent,\n\t        node,\n\t        nodes = new Array(n),\n\t        nodeId,\n\t        nodeKey,\n\t        nodeByKey = {};\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      d = data[i], node = nodes[i] = new Node(d);\n\t      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t        nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t      }\n\t    }\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], nodeId = parentId(data[i], i, data);\n\t      if (nodeId == null || !(nodeId += \"\")) {\n\t        if (root) throw new Error(\"multiple roots\");\n\t        root = node;\n\t      } else {\n\t        parent = nodeByKey[keyPrefix$1 + nodeId];\n\t        if (!parent) throw new Error(\"missing: \" + nodeId);\n\t        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t        if (parent.children) parent.children.push(node);\n\t        else parent.children = [node];\n\t        node.parent = parent;\n\t      }\n\t    }\n\t\n\t    if (!root) throw new Error(\"no root\");\n\t    root.parent = preroot;\n\t    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t    root.parent = null;\n\t    if (n > 0) throw new Error(\"cycle\");\n\t\n\t    return root;\n\t  }\n\t\n\t  stratify.id = function(x) {\n\t    return arguments.length ? (id = required(x), stratify) : id;\n\t  };\n\t\n\t  stratify.parentId = function(x) {\n\t    return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t  };\n\t\n\t  return stratify;\n\t};\n\t\n\tfunction defaultSeparation$1(a, b) {\n\t  return a.parent === b.parent ? 1 : 2;\n\t}\n\t\n\t// function radialSeparation(a, b) {\n\t//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t// }\n\t\n\t// This function is used to traverse the left contour of a subtree (or\n\t// subforest). It returns the successor of v on this contour. This successor is\n\t// either given by the leftmost child of v or by the thread of v. The function\n\t// returns null if and only if v is on the highest level of its subtree.\n\tfunction nextLeft(v) {\n\t  var children = v.children;\n\t  return children ? children[0] : v.t;\n\t}\n\t\n\t// This function works analogously to nextLeft.\n\tfunction nextRight(v) {\n\t  var children = v.children;\n\t  return children ? children[children.length - 1] : v.t;\n\t}\n\t\n\t// Shifts the current subtree rooted at w+. This is done by increasing\n\t// prelim(w+) and mod(w+) by shift.\n\tfunction moveSubtree(wm, wp, shift) {\n\t  var change = shift / (wp.i - wm.i);\n\t  wp.c -= change;\n\t  wp.s += shift;\n\t  wm.c += change;\n\t  wp.z += shift;\n\t  wp.m += shift;\n\t}\n\t\n\t// All other shifts, applied to the smaller subtrees between w- and w+, are\n\t// performed by this function. To prepare the shifts, we have to adjust\n\t// change(w+), shift(w+), and change(w-).\n\tfunction executeShifts(v) {\n\t  var shift = 0,\n\t      change = 0,\n\t      children = v.children,\n\t      i = children.length,\n\t      w;\n\t  while (--i >= 0) {\n\t    w = children[i];\n\t    w.z += shift;\n\t    w.m += shift;\n\t    shift += w.s + (change += w.c);\n\t  }\n\t}\n\t\n\t// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t// returns the specified (default) ancestor.\n\tfunction nextAncestor(vim, v, ancestor) {\n\t  return vim.a.parent === v.parent ? vim.a : ancestor;\n\t}\n\t\n\tfunction TreeNode(node, i) {\n\t  this._ = node;\n\t  this.parent = null;\n\t  this.children = null;\n\t  this.A = null; // default ancestor\n\t  this.a = this; // ancestor\n\t  this.z = 0; // prelim\n\t  this.m = 0; // mod\n\t  this.c = 0; // change\n\t  this.s = 0; // shift\n\t  this.t = null; // thread\n\t  this.i = i; // number\n\t}\n\t\n\tTreeNode.prototype = Object.create(Node.prototype);\n\t\n\tfunction treeRoot(root) {\n\t  var tree = new TreeNode(root, 0),\n\t      node,\n\t      nodes = [tree],\n\t      child,\n\t      children,\n\t      i,\n\t      n;\n\t\n\t  while (node = nodes.pop()) {\n\t    if (children = node._.children) {\n\t      node.children = new Array(n = children.length);\n\t      for (i = n - 1; i >= 0; --i) {\n\t        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t        child.parent = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t  return tree;\n\t}\n\t\n\t// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\tvar tree = function() {\n\t  var separation = defaultSeparation$1,\n\t      dx = 1,\n\t      dy = 1,\n\t      nodeSize = null;\n\t\n\t  function tree(root) {\n\t    var t = treeRoot(root);\n\t\n\t    // Compute the layout using Buchheim et al.’s algorithm.\n\t    t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t    t.eachBefore(secondWalk);\n\t\n\t    // If a fixed node size is specified, scale x and y.\n\t    if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t    // If a fixed tree size is specified, scale x and y based on the extent.\n\t    // Compute the left-most, right-most, and depth-most nodes for extents.\n\t    else {\n\t      var left = root,\n\t          right = root,\n\t          bottom = root;\n\t      root.eachBefore(function(node) {\n\t        if (node.x < left.x) left = node;\n\t        if (node.x > right.x) right = node;\n\t        if (node.depth > bottom.depth) bottom = node;\n\t      });\n\t      var s = left === right ? 1 : separation(left, right) / 2,\n\t          tx = s - left.x,\n\t          kx = dx / (right.x + s + tx),\n\t          ky = dy / (bottom.depth || 1);\n\t      root.eachBefore(function(node) {\n\t        node.x = (node.x + tx) * kx;\n\t        node.y = node.depth * ky;\n\t      });\n\t    }\n\t\n\t    return root;\n\t  }\n\t\n\t  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t  // applied recursively to the children of v, as well as the function\n\t  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t  // node v is placed to the midpoint of its outermost children.\n\t  function firstWalk(v) {\n\t    var children = v.children,\n\t        siblings = v.parent.children,\n\t        w = v.i ? siblings[v.i - 1] : null;\n\t    if (children) {\n\t      executeShifts(v);\n\t      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t      if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t        v.m = v.z - midpoint;\n\t      } else {\n\t        v.z = midpoint;\n\t      }\n\t    } else if (w) {\n\t      v.z = w.z + separation(v._, w._);\n\t    }\n\t    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t  }\n\t\n\t  // Computes all real x-coordinates by summing up the modifiers recursively.\n\t  function secondWalk(v) {\n\t    v._.x = v.z + v.parent.m;\n\t    v.m += v.parent.m;\n\t  }\n\t\n\t  // The core of the algorithm. Here, a new subtree is combined with the\n\t  // previous subtrees. Threads are used to traverse the inside and outside\n\t  // contours of the left and right subtree up to the highest common level. The\n\t  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t  // superscript o means outside and i means inside, the subscript - means left\n\t  // subtree and + means right subtree. For summing up the modifiers along the\n\t  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t  // nodes of the inside contours conflict, we compute the left one of the\n\t  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t  // Finally, we add a new thread (if necessary).\n\t  function apportion(v, w, ancestor) {\n\t    if (w) {\n\t      var vip = v,\n\t          vop = v,\n\t          vim = w,\n\t          vom = vip.parent.children[0],\n\t          sip = vip.m,\n\t          sop = vop.m,\n\t          sim = vim.m,\n\t          som = vom.m,\n\t          shift;\n\t      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t        vom = nextLeft(vom);\n\t        vop = nextRight(vop);\n\t        vop.a = v;\n\t        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t        if (shift > 0) {\n\t          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t          sip += shift;\n\t          sop += shift;\n\t        }\n\t        sim += vim.m;\n\t        sip += vip.m;\n\t        som += vom.m;\n\t        sop += vop.m;\n\t      }\n\t      if (vim && !nextRight(vop)) {\n\t        vop.t = vim;\n\t        vop.m += sim - sop;\n\t      }\n\t      if (vip && !nextLeft(vom)) {\n\t        vom.t = vip;\n\t        vom.m += sip - som;\n\t        ancestor = v;\n\t      }\n\t    }\n\t    return ancestor;\n\t  }\n\t\n\t  function sizeNode(node) {\n\t    node.x *= dx;\n\t    node.y = node.depth * dy;\n\t  }\n\t\n\t  tree.separation = function(x) {\n\t    return arguments.length ? (separation = x, tree) : separation;\n\t  };\n\t\n\t  tree.size = function(x) {\n\t    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t  };\n\t\n\t  tree.nodeSize = function(x) {\n\t    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t  };\n\t\n\t  return tree;\n\t};\n\t\n\tvar treemapSlice = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      node,\n\t      i = -1,\n\t      n = nodes.length,\n\t      k = parent.value && (y1 - y0) / parent.value;\n\t\n\t  while (++i < n) {\n\t    node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t    node.y0 = y0, node.y1 = y0 += node.value * k;\n\t  }\n\t};\n\t\n\tvar phi = (1 + Math.sqrt(5)) / 2;\n\t\n\tfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t  var rows = [],\n\t      nodes = parent.children,\n\t      row,\n\t      nodeValue,\n\t      i0 = 0,\n\t      i1 = 0,\n\t      n = nodes.length,\n\t      dx, dy,\n\t      value = parent.value,\n\t      sumValue,\n\t      minValue,\n\t      maxValue,\n\t      newRatio,\n\t      minRatio,\n\t      alpha,\n\t      beta;\n\t\n\t  while (i0 < n) {\n\t    dx = x1 - x0, dy = y1 - y0;\n\t\n\t    // Find the next non-empty node.\n\t    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n\t    minValue = maxValue = sumValue;\n\t    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t    beta = sumValue * sumValue * alpha;\n\t    minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t    // Keep adding nodes while the aspect ratio maintains or improves.\n\t    for (; i1 < n; ++i1) {\n\t      sumValue += nodeValue = nodes[i1].value;\n\t      if (nodeValue < minValue) minValue = nodeValue;\n\t      if (nodeValue > maxValue) maxValue = nodeValue;\n\t      beta = sumValue * sumValue * alpha;\n\t      newRatio = Math.max(maxValue / beta, beta / minValue);\n\t      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t      minRatio = newRatio;\n\t    }\n\t\n\t    // Position and record the row orientation.\n\t    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t    value -= sumValue, i0 = i1;\n\t  }\n\t\n\t  return rows;\n\t}\n\t\n\tvar squarify = (function custom(ratio) {\n\t\n\t  function squarify(parent, x0, y0, x1, y1) {\n\t    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  squarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return squarify;\n\t})(phi);\n\t\n\tvar index$1 = function() {\n\t  var tile = squarify,\n\t      round = false,\n\t      dx = 1,\n\t      dy = 1,\n\t      paddingStack = [0],\n\t      paddingInner = constantZero,\n\t      paddingTop = constantZero,\n\t      paddingRight = constantZero,\n\t      paddingBottom = constantZero,\n\t      paddingLeft = constantZero;\n\t\n\t  function treemap(root) {\n\t    root.x0 =\n\t    root.y0 = 0;\n\t    root.x1 = dx;\n\t    root.y1 = dy;\n\t    root.eachBefore(positionNode);\n\t    paddingStack = [0];\n\t    if (round) root.eachBefore(roundNode);\n\t    return root;\n\t  }\n\t\n\t  function positionNode(node) {\n\t    var p = paddingStack[node.depth],\n\t        x0 = node.x0 + p,\n\t        y0 = node.y0 + p,\n\t        x1 = node.x1 - p,\n\t        y1 = node.y1 - p;\n\t    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t    node.x0 = x0;\n\t    node.y0 = y0;\n\t    node.x1 = x1;\n\t    node.y1 = y1;\n\t    if (node.children) {\n\t      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t      x0 += paddingLeft(node) - p;\n\t      y0 += paddingTop(node) - p;\n\t      x1 -= paddingRight(node) - p;\n\t      y1 -= paddingBottom(node) - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      tile(node, x0, y0, x1, y1);\n\t    }\n\t  }\n\t\n\t  treemap.round = function(x) {\n\t    return arguments.length ? (round = !!x, treemap) : round;\n\t  };\n\t\n\t  treemap.size = function(x) {\n\t    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t  };\n\t\n\t  treemap.tile = function(x) {\n\t    return arguments.length ? (tile = required(x), treemap) : tile;\n\t  };\n\t\n\t  treemap.padding = function(x) {\n\t    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t  };\n\t\n\t  treemap.paddingInner = function(x) {\n\t    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n\t  };\n\t\n\t  treemap.paddingOuter = function(x) {\n\t    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t  };\n\t\n\t  treemap.paddingTop = function(x) {\n\t    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n\t  };\n\t\n\t  treemap.paddingRight = function(x) {\n\t    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n\t  };\n\t\n\t  treemap.paddingBottom = function(x) {\n\t    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n\t  };\n\t\n\t  treemap.paddingLeft = function(x) {\n\t    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n\t  };\n\t\n\t  return treemap;\n\t};\n\t\n\tvar binary = function(parent, x0, y0, x1, y1) {\n\t  var nodes = parent.children,\n\t      i, n = nodes.length,\n\t      sum, sums = new Array(n + 1);\n\t\n\t  for (sums[0] = sum = i = 0; i < n; ++i) {\n\t    sums[i + 1] = sum += nodes[i].value;\n\t  }\n\t\n\t  partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t  function partition(i, j, value, x0, y0, x1, y1) {\n\t    if (i >= j - 1) {\n\t      var node = nodes[i];\n\t      node.x0 = x0, node.y0 = y0;\n\t      node.x1 = x1, node.y1 = y1;\n\t      return;\n\t    }\n\t\n\t    var valueOffset = sums[i],\n\t        valueTarget = (value / 2) + valueOffset,\n\t        k = i + 1,\n\t        hi = j - 1;\n\t\n\t    while (k < hi) {\n\t      var mid = k + hi >>> 1;\n\t      if (sums[mid] < valueTarget) k = mid + 1;\n\t      else hi = mid;\n\t    }\n\t\n\t    var valueLeft = sums[k] - valueOffset,\n\t        valueRight = value - valueLeft;\n\t\n\t    if ((y1 - y0) > (x1 - x0)) {\n\t      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, x1, yk);\n\t      partition(k, j, valueRight, x0, yk, x1, y1);\n\t    } else {\n\t      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t      partition(i, k, valueLeft, x0, y0, xk, y1);\n\t      partition(k, j, valueRight, xk, y0, x1, y1);\n\t    }\n\t  }\n\t};\n\t\n\tvar sliceDice = function(parent, x0, y0, x1, y1) {\n\t  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t};\n\t\n\tvar resquarify = (function custom(ratio) {\n\t\n\t  function resquarify(parent, x0, y0, x1, y1) {\n\t    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t      var rows,\n\t          row,\n\t          nodes,\n\t          i,\n\t          j = -1,\n\t          n,\n\t          m = rows.length,\n\t          value = parent.value;\n\t\n\t      while (++j < m) {\n\t        row = rows[j], nodes = row.children;\n\t        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t        value -= row.value;\n\t      }\n\t    } else {\n\t      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t      rows.ratio = ratio;\n\t    }\n\t  }\n\t\n\t  resquarify.ratio = function(x) {\n\t    return custom((x = +x) > 1 ? x : 1);\n\t  };\n\t\n\t  return resquarify;\n\t})(phi);\n\t\n\tvar center$1 = function(x, y) {\n\t  var nodes;\n\t\n\t  if (x == null) x = 0;\n\t  if (y == null) y = 0;\n\t\n\t  function force() {\n\t    var i,\n\t        n = nodes.length,\n\t        node,\n\t        sx = 0,\n\t        sy = 0;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i], sx += node.x, sy += node.y;\n\t    }\n\t\n\t    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t      node = nodes[i], node.x -= sx, node.y -= sy;\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = +_, force) : x;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = +_, force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar constant$7 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar jiggle = function() {\n\t  return (Math.random() - 0.5) * 1e-6;\n\t};\n\t\n\tfunction x$1(d) {\n\t  return d.x + d.vx;\n\t}\n\t\n\tfunction y$1(d) {\n\t  return d.y + d.vy;\n\t}\n\t\n\tvar collide = function(radius) {\n\t  var nodes,\n\t      radii,\n\t      strength = 1,\n\t      iterations = 1;\n\t\n\t  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\t\n\t  function force() {\n\t    var i, n = nodes.length,\n\t        tree,\n\t        node,\n\t        xi,\n\t        yi,\n\t        ri,\n\t        ri2;\n\t\n\t    for (var k = 0; k < iterations; ++k) {\n\t      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        ri = radii[node.index], ri2 = ri * ri;\n\t        xi = node.x + node.vx;\n\t        yi = node.y + node.vy;\n\t        tree.visit(apply);\n\t      }\n\t    }\n\t\n\t    function apply(quad, x0, y0, x1, y1) {\n\t      var data = quad.data, rj = quad.r, r = ri + rj;\n\t      if (data) {\n\t        if (data.index > node.index) {\n\t          var x = xi - data.x - data.vx,\n\t              y = yi - data.y - data.vy,\n\t              l = x * x + y * y;\n\t          if (l < r * r) {\n\t            if (x === 0) x = jiggle(), l += x * x;\n\t            if (y === 0) y = jiggle(), l += y * y;\n\t            l = (r - (l = Math.sqrt(l))) / l * strength;\n\t            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t            node.vy += (y *= l) * r;\n\t            data.vx -= x * (r = 1 - r);\n\t            data.vy -= y * r;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t    }\n\t  }\n\t\n\t  function prepare(quad) {\n\t    if (quad.data) return quad.r = radii[quad.data.index];\n\t    for (var i = quad.r = 0; i < 4; ++i) {\n\t      if (quad[i] && quad[i].r > quad.r) {\n\t        quad.r = quad[i].r;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    radii = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = +_, force) : strength;\n\t  };\n\t\n\t  force.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction index$2(d) {\n\t  return d.index;\n\t}\n\t\n\tfunction find(nodeById, nodeId) {\n\t  var node = nodeById.get(nodeId);\n\t  if (!node) throw new Error(\"missing: \" + nodeId);\n\t  return node;\n\t}\n\t\n\tvar link = function(links) {\n\t  var id = index$2,\n\t      strength = defaultStrength,\n\t      strengths,\n\t      distance = constant$7(30),\n\t      distances,\n\t      nodes,\n\t      count,\n\t      bias,\n\t      iterations = 1;\n\t\n\t  if (links == null) links = [];\n\t\n\t  function defaultStrength(link) {\n\t    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t  }\n\t\n\t  function force(alpha) {\n\t    for (var k = 0, n = links.length; k < iterations; ++k) {\n\t      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t        link = links[i], source = link.source, target = link.target;\n\t        x = target.x + target.vx - source.x - source.vx || jiggle();\n\t        y = target.y + target.vy - source.y - source.vy || jiggle();\n\t        l = Math.sqrt(x * x + y * y);\n\t        l = (l - distances[i]) / l * alpha * strengths[i];\n\t        x *= l, y *= l;\n\t        target.vx -= x * (b = bias[i]);\n\t        target.vy -= y * b;\n\t        source.vx += x * (b = 1 - b);\n\t        source.vy += y * b;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t\n\t    var i,\n\t        n = nodes.length,\n\t        m = links.length,\n\t        nodeById = map$1(nodes, id),\n\t        link;\n\t\n\t    for (i = 0, count = new Array(n); i < m; ++i) {\n\t      link = links[i], link.index = i;\n\t      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n\t      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n\t      count[link.source.index] = (count[link.source.index] || 0) + 1;\n\t      count[link.target.index] = (count[link.target.index] || 0) + 1;\n\t    }\n\t\n\t    for (i = 0, bias = new Array(m); i < m; ++i) {\n\t      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t    }\n\t\n\t    strengths = new Array(m), initializeStrength();\n\t    distances = new Array(m), initializeDistance();\n\t  }\n\t\n\t  function initializeStrength() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      strengths[i] = +strength(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  function initializeDistance() {\n\t    if (!nodes) return;\n\t\n\t    for (var i = 0, n = links.length; i < n; ++i) {\n\t      distances[i] = +distance(links[i], i, links);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.links = function(_) {\n\t    return arguments.length ? (links = _, initialize(), force) : links;\n\t  };\n\t\n\t  force.id = function(_) {\n\t    return arguments.length ? (id = _, force) : id;\n\t  };\n\t\n\t  force.iterations = function(_) {\n\t    return arguments.length ? (iterations = +_, force) : iterations;\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n\t  };\n\t\n\t  force.distance = function(_) {\n\t    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction x$2(d) {\n\t  return d.x;\n\t}\n\t\n\tfunction y$2(d) {\n\t  return d.y;\n\t}\n\t\n\tvar initialRadius = 10;\n\tvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t\n\tvar simulation = function(nodes) {\n\t  var simulation,\n\t      alpha = 1,\n\t      alphaMin = 0.001,\n\t      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t      alphaTarget = 0,\n\t      velocityDecay = 0.6,\n\t      forces = map$1(),\n\t      stepper = timer(step),\n\t      event = dispatch(\"tick\", \"end\");\n\t\n\t  if (nodes == null) nodes = [];\n\t\n\t  function step() {\n\t    tick();\n\t    event.call(\"tick\", simulation);\n\t    if (alpha < alphaMin) {\n\t      stepper.stop();\n\t      event.call(\"end\", simulation);\n\t    }\n\t  }\n\t\n\t  function tick() {\n\t    var i, n = nodes.length, node;\n\t\n\t    alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t    forces.each(function(force) {\n\t      force(alpha);\n\t    });\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      node = nodes[i];\n\t      if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t      else node.x = node.fx, node.vx = 0;\n\t      if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t      else node.y = node.fy, node.vy = 0;\n\t    }\n\t  }\n\t\n\t  function initializeNodes() {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.index = i;\n\t      if (isNaN(node.x) || isNaN(node.y)) {\n\t        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t        node.x = radius * Math.cos(angle);\n\t        node.y = radius * Math.sin(angle);\n\t      }\n\t      if (isNaN(node.vx) || isNaN(node.vy)) {\n\t        node.vx = node.vy = 0;\n\t      }\n\t    }\n\t  }\n\t\n\t  function initializeForce(force) {\n\t    if (force.initialize) force.initialize(nodes);\n\t    return force;\n\t  }\n\t\n\t  initializeNodes();\n\t\n\t  return simulation = {\n\t    tick: tick,\n\t\n\t    restart: function() {\n\t      return stepper.restart(step), simulation;\n\t    },\n\t\n\t    stop: function() {\n\t      return stepper.stop(), simulation;\n\t    },\n\t\n\t    nodes: function(_) {\n\t      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t    },\n\t\n\t    alpha: function(_) {\n\t      return arguments.length ? (alpha = +_, simulation) : alpha;\n\t    },\n\t\n\t    alphaMin: function(_) {\n\t      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t    },\n\t\n\t    alphaDecay: function(_) {\n\t      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t    },\n\t\n\t    alphaTarget: function(_) {\n\t      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t    },\n\t\n\t    velocityDecay: function(_) {\n\t      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t    },\n\t\n\t    force: function(name, _) {\n\t      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t    },\n\t\n\t    find: function(x, y, radius) {\n\t      var i = 0,\n\t          n = nodes.length,\n\t          dx,\n\t          dy,\n\t          d2,\n\t          node,\n\t          closest;\n\t\n\t      if (radius == null) radius = Infinity;\n\t      else radius *= radius;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        dx = x - node.x;\n\t        dy = y - node.y;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) closest = node, radius = d2;\n\t      }\n\t\n\t      return closest;\n\t    },\n\t\n\t    on: function(name, _) {\n\t      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t    }\n\t  };\n\t};\n\t\n\tvar manyBody = function() {\n\t  var nodes,\n\t      node,\n\t      alpha,\n\t      strength = constant$7(-30),\n\t      strengths,\n\t      distanceMin2 = 1,\n\t      distanceMax2 = Infinity,\n\t      theta2 = 0.81;\n\t\n\t  function force(_) {\n\t    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length, node;\n\t    strengths = new Array(n);\n\t    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n\t  }\n\t\n\t  function accumulate(quad) {\n\t    var strength = 0, q, c, x$$1, y$$1, i;\n\t\n\t    // For internal nodes, accumulate forces from child quadrants.\n\t    if (quad.length) {\n\t      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n\t        if ((q = quad[i]) && (c = q.value)) {\n\t          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n\t        }\n\t      }\n\t      quad.x = x$$1 / strength;\n\t      quad.y = y$$1 / strength;\n\t    }\n\t\n\t    // For leaf nodes, accumulate forces from coincident quadrants.\n\t    else {\n\t      q = quad;\n\t      q.x = q.data.x;\n\t      q.y = q.data.y;\n\t      do strength += strengths[q.data.index];\n\t      while (q = q.next);\n\t    }\n\t\n\t    quad.value = strength;\n\t  }\n\t\n\t  function apply(quad, x1, _, x2) {\n\t    if (!quad.value) return true;\n\t\n\t    var x$$1 = quad.x - node.x,\n\t        y$$1 = quad.y - node.y,\n\t        w = x2 - x1,\n\t        l = x$$1 * x$$1 + y$$1 * y$$1;\n\t\n\t    // Apply the Barnes-Hut approximation if possible.\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (w * w / theta2 < l) {\n\t      if (l < distanceMax2) {\n\t        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t        node.vx += x$$1 * quad.value * alpha / l;\n\t        node.vy += y$$1 * quad.value * alpha / l;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // Otherwise, process points directly.\n\t    else if (quad.length || l >= distanceMax2) return;\n\t\n\t    // Limit forces for very close nodes; randomize direction if coincident.\n\t    if (quad.data !== node || quad.next) {\n\t      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n\t      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n\t      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t    }\n\t\n\t    do if (quad.data !== node) {\n\t      w = strengths[quad.data.index] * alpha / l;\n\t      node.vx += x$$1 * w;\n\t      node.vy += y$$1 * w;\n\t    } while (quad = quad.next);\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.distanceMin = function(_) {\n\t    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t  };\n\t\n\t  force.distanceMax = function(_) {\n\t    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t  };\n\t\n\t  force.theta = function(_) {\n\t    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar x$3 = function(x) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      xz;\n\t\n\t  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    xz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.x = function(_) {\n\t    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tvar y$3 = function(y) {\n\t  var strength = constant$7(0.1),\n\t      nodes,\n\t      strengths,\n\t      yz;\n\t\n\t  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\t\n\t  function force(alpha) {\n\t    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    if (!nodes) return;\n\t    var i, n = nodes.length;\n\t    strengths = new Array(n);\n\t    yz = new Array(n);\n\t    for (i = 0; i < n; ++i) {\n\t      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t    }\n\t  }\n\t\n\t  force.initialize = function(_) {\n\t    nodes = _;\n\t    initialize();\n\t  };\n\t\n\t  force.strength = function(_) {\n\t    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n\t  };\n\t\n\t  force.y = function(_) {\n\t    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n\t  };\n\t\n\t  return force;\n\t};\n\t\n\tfunction nopropagation() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar dragDisable = function(view) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", noevent, true);\n\t  } else {\n\t    root.__noselect = root.style.MozUserSelect;\n\t    root.style.MozUserSelect = \"none\";\n\t  }\n\t};\n\t\n\tfunction yesdrag(view, noclick) {\n\t  var root = view.document.documentElement,\n\t      selection$$1 = select(view).on(\"dragstart.drag\", null);\n\t  if (noclick) {\n\t    selection$$1.on(\"click.drag\", noevent, true);\n\t    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n\t  }\n\t  if (\"onselectstart\" in root) {\n\t    selection$$1.on(\"selectstart.drag\", null);\n\t  } else {\n\t    root.style.MozUserSelect = root.__noselect;\n\t    delete root.__noselect;\n\t  }\n\t}\n\t\n\tvar constant$8 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.subject = subject;\n\t  this.identifier = id;\n\t  this.active = active;\n\t  this.x = x;\n\t  this.y = y;\n\t  this.dx = dx;\n\t  this.dy = dy;\n\t  this._ = dispatch;\n\t}\n\t\n\tDragEvent.prototype.on = function() {\n\t  var value = this._.on.apply(this._, arguments);\n\t  return value === this._ ? this : value;\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultContainer() {\n\t  return this.parentNode;\n\t}\n\t\n\tfunction defaultSubject(d) {\n\t  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t}\n\t\n\tvar drag = function() {\n\t  var filter = defaultFilter,\n\t      container = defaultContainer,\n\t      subject = defaultSubject,\n\t      gestures = {},\n\t      listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t      active = 0,\n\t      mousemoving,\n\t      touchending;\n\t\n\t  function drag(selection$$1) {\n\t    selection$$1\n\t        .on(\"mousedown.drag\", mousedowned)\n\t        .on(\"touchstart.drag\", touchstarted)\n\t        .on(\"touchmove.drag\", touchmoved)\n\t        .on(\"touchend.drag touchcancel.drag\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t    if (!gesture) return;\n\t    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t    dragDisable(exports.event.view);\n\t    nopropagation();\n\t    mousemoving = false;\n\t    gesture(\"start\");\n\t  }\n\t\n\t  function mousemoved() {\n\t    noevent();\n\t    mousemoving = true;\n\t    gestures.mouse(\"drag\");\n\t  }\n\t\n\t  function mouseupped() {\n\t    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t    yesdrag(exports.event.view, mousemoving);\n\t    noevent();\n\t    gestures.mouse(\"end\");\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var touches$$1 = exports.event.changedTouches,\n\t        c = container.apply(this, arguments),\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n\t        nopropagation();\n\t        gesture(\"start\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        noevent();\n\t        gesture(\"drag\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function touchended() {\n\t    var touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, gesture;\n\t\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t    for (i = 0; i < n; ++i) {\n\t      if (gesture = gestures[touches$$1[i].identifier]) {\n\t        nopropagation();\n\t        gesture(\"end\");\n\t      }\n\t    }\n\t  }\n\t\n\t  function beforestart(id, container, point, that, args) {\n\t    var p = point(container, id), s, dx, dy,\n\t        sublisteners = listeners.copy();\n\t\n\t    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t      dx = s.x - p[0] || 0;\n\t      dy = s.y - p[1] || 0;\n\t      return true;\n\t    })) return;\n\t\n\t    return function gesture(type) {\n\t      var p0 = p, n;\n\t      switch (type) {\n\t        case \"start\": gestures[id] = gesture, n = active++; break;\n\t        case \"end\": delete gestures[id], --active; // nobreak\n\t        case \"drag\": p = point(container, id), n = active; break;\n\t      }\n\t      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t    };\n\t  }\n\t\n\t  drag.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n\t  };\n\t\n\t  drag.container = function(_) {\n\t    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n\t  };\n\t\n\t  drag.subject = function(_) {\n\t    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n\t  };\n\t\n\t  drag.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? drag : value;\n\t  };\n\t\n\t  return drag;\n\t};\n\t\n\tvar constant$9 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction x$4(d) {\n\t  return d[0];\n\t}\n\t\n\tfunction y$4(d) {\n\t  return d[1];\n\t}\n\t\n\tfunction RedBlackTree() {\n\t  this._ = null; // root node\n\t}\n\t\n\tfunction RedBlackNode(node) {\n\t  node.U = // parent node\n\t  node.C = // color - true for red, false for black\n\t  node.L = // left node\n\t  node.R = // right node\n\t  node.P = // previous node\n\t  node.N = null; // next node\n\t}\n\t\n\tRedBlackTree.prototype = {\n\t  constructor: RedBlackTree,\n\t\n\t  insert: function(after, node) {\n\t    var parent, grandpa, uncle;\n\t\n\t    if (after) {\n\t      node.P = after;\n\t      node.N = after.N;\n\t      if (after.N) after.N.P = node;\n\t      after.N = node;\n\t      if (after.R) {\n\t        after = after.R;\n\t        while (after.L) after = after.L;\n\t        after.L = node;\n\t      } else {\n\t        after.R = node;\n\t      }\n\t      parent = after;\n\t    } else if (this._) {\n\t      after = RedBlackFirst(this._);\n\t      node.P = null;\n\t      node.N = after;\n\t      after.P = after.L = node;\n\t      parent = after;\n\t    } else {\n\t      node.P = node.N = null;\n\t      this._ = node;\n\t      parent = null;\n\t    }\n\t    node.L = node.R = null;\n\t    node.U = parent;\n\t    node.C = true;\n\t\n\t    after = node;\n\t    while (parent && parent.C) {\n\t      grandpa = parent.U;\n\t      if (parent === grandpa.L) {\n\t        uncle = grandpa.R;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.R) {\n\t            RedBlackRotateLeft(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateRight(this, grandpa);\n\t        }\n\t      } else {\n\t        uncle = grandpa.L;\n\t        if (uncle && uncle.C) {\n\t          parent.C = uncle.C = false;\n\t          grandpa.C = true;\n\t          after = grandpa;\n\t        } else {\n\t          if (after === parent.L) {\n\t            RedBlackRotateRight(this, parent);\n\t            after = parent;\n\t            parent = after.U;\n\t          }\n\t          parent.C = false;\n\t          grandpa.C = true;\n\t          RedBlackRotateLeft(this, grandpa);\n\t        }\n\t      }\n\t      parent = after.U;\n\t    }\n\t    this._.C = false;\n\t  },\n\t\n\t  remove: function(node) {\n\t    if (node.N) node.N.P = node.P;\n\t    if (node.P) node.P.N = node.N;\n\t    node.N = node.P = null;\n\t\n\t    var parent = node.U,\n\t        sibling,\n\t        left = node.L,\n\t        right = node.R,\n\t        next,\n\t        red;\n\t\n\t    if (!left) next = right;\n\t    else if (!right) next = left;\n\t    else next = RedBlackFirst(right);\n\t\n\t    if (parent) {\n\t      if (parent.L === node) parent.L = next;\n\t      else parent.R = next;\n\t    } else {\n\t      this._ = next;\n\t    }\n\t\n\t    if (left && right) {\n\t      red = next.C;\n\t      next.C = node.C;\n\t      next.L = left;\n\t      left.U = next;\n\t      if (next !== right) {\n\t        parent = next.U;\n\t        next.U = node.U;\n\t        node = next.R;\n\t        parent.L = node;\n\t        next.R = right;\n\t        right.U = next;\n\t      } else {\n\t        next.U = parent;\n\t        parent = next;\n\t        node = next.R;\n\t      }\n\t    } else {\n\t      red = node.C;\n\t      node = next;\n\t    }\n\t\n\t    if (node) node.U = parent;\n\t    if (red) return;\n\t    if (node && node.C) { node.C = false; return; }\n\t\n\t    do {\n\t      if (node === this._) break;\n\t      if (node === parent.L) {\n\t        sibling = parent.R;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateLeft(this, parent);\n\t          sibling = parent.R;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.R || !sibling.R.C) {\n\t            sibling.L.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateRight(this, sibling);\n\t            sibling = parent.R;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.R.C = false;\n\t          RedBlackRotateLeft(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      } else {\n\t        sibling = parent.L;\n\t        if (sibling.C) {\n\t          sibling.C = false;\n\t          parent.C = true;\n\t          RedBlackRotateRight(this, parent);\n\t          sibling = parent.L;\n\t        }\n\t        if ((sibling.L && sibling.L.C)\n\t          || (sibling.R && sibling.R.C)) {\n\t          if (!sibling.L || !sibling.L.C) {\n\t            sibling.R.C = false;\n\t            sibling.C = true;\n\t            RedBlackRotateLeft(this, sibling);\n\t            sibling = parent.L;\n\t          }\n\t          sibling.C = parent.C;\n\t          parent.C = sibling.L.C = false;\n\t          RedBlackRotateRight(this, parent);\n\t          node = this._;\n\t          break;\n\t        }\n\t      }\n\t      sibling.C = true;\n\t      node = parent;\n\t      parent = parent.U;\n\t    } while (!node.C);\n\t\n\t    if (node) node.C = false;\n\t  }\n\t};\n\t\n\tfunction RedBlackRotateLeft(tree, node) {\n\t  var p = node,\n\t      q = node.R,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.R = q.L;\n\t  if (p.R) p.R.U = p;\n\t  q.L = p;\n\t}\n\t\n\tfunction RedBlackRotateRight(tree, node) {\n\t  var p = node,\n\t      q = node.L,\n\t      parent = p.U;\n\t\n\t  if (parent) {\n\t    if (parent.L === p) parent.L = q;\n\t    else parent.R = q;\n\t  } else {\n\t    tree._ = q;\n\t  }\n\t\n\t  q.U = parent;\n\t  p.U = q;\n\t  p.L = q.R;\n\t  if (p.L) p.L.U = p;\n\t  q.R = p;\n\t}\n\t\n\tfunction RedBlackFirst(node) {\n\t  while (node.L) node = node.L;\n\t  return node;\n\t}\n\t\n\tfunction createEdge(left, right, v0, v1) {\n\t  var edge = [null, null],\n\t      index = edges.push(edge) - 1;\n\t  edge.left = left;\n\t  edge.right = right;\n\t  if (v0) setEdgeEnd(edge, left, right, v0);\n\t  if (v1) setEdgeEnd(edge, right, left, v1);\n\t  cells[left.index].halfedges.push(index);\n\t  cells[right.index].halfedges.push(index);\n\t  return edge;\n\t}\n\t\n\tfunction createBorderEdge(left, v0, v1) {\n\t  var edge = [v0, v1];\n\t  edge.left = left;\n\t  return edge;\n\t}\n\t\n\tfunction setEdgeEnd(edge, left, right, vertex) {\n\t  if (!edge[0] && !edge[1]) {\n\t    edge[0] = vertex;\n\t    edge.left = left;\n\t    edge.right = right;\n\t  } else if (edge.left === right) {\n\t    edge[1] = vertex;\n\t  } else {\n\t    edge[0] = vertex;\n\t  }\n\t}\n\t\n\t// Liang–Barsky line clipping.\n\tfunction clipEdge(edge, x0, y0, x1, y1) {\n\t  var a = edge[0],\n\t      b = edge[1],\n\t      ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t  return true;\n\t}\n\t\n\tfunction connectEdge(edge, x0, y0, x1, y1) {\n\t  var v1 = edge[1];\n\t  if (v1) return true;\n\t\n\t  var v0 = edge[0],\n\t      left = edge.left,\n\t      right = edge.right,\n\t      lx = left[0],\n\t      ly = left[1],\n\t      rx = right[0],\n\t      ry = right[1],\n\t      fx = (lx + rx) / 2,\n\t      fy = (ly + ry) / 2,\n\t      fm,\n\t      fb;\n\t\n\t  if (ry === ly) {\n\t    if (fx < x0 || fx >= x1) return;\n\t    if (lx > rx) {\n\t      if (!v0) v0 = [fx, y0];\n\t      else if (v0[1] >= y1) return;\n\t      v1 = [fx, y1];\n\t    } else {\n\t      if (!v0) v0 = [fx, y1];\n\t      else if (v0[1] < y0) return;\n\t      v1 = [fx, y0];\n\t    }\n\t  } else {\n\t    fm = (lx - rx) / (ry - ly);\n\t    fb = fy - fm * fx;\n\t    if (fm < -1 || fm > 1) {\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [(y1 - fb) / fm, y1];\n\t      } else {\n\t        if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [(y0 - fb) / fm, y0];\n\t      }\n\t    } else {\n\t      if (ly < ry) {\n\t        if (!v0) v0 = [x0, fm * x0 + fb];\n\t        else if (v0[0] >= x1) return;\n\t        v1 = [x1, fm * x1 + fb];\n\t      } else {\n\t        if (!v0) v0 = [x1, fm * x1 + fb];\n\t        else if (v0[0] < x0) return;\n\t        v1 = [x0, fm * x0 + fb];\n\t      }\n\t    }\n\t  }\n\t\n\t  edge[0] = v0;\n\t  edge[1] = v1;\n\t  return true;\n\t}\n\t\n\tfunction clipEdges(x0, y0, x1, y1) {\n\t  var i = edges.length,\n\t      edge;\n\t\n\t  while (i--) {\n\t    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t        || !clipEdge(edge, x0, y0, x1, y1)\n\t        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t      delete edges[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createCell(site) {\n\t  return cells[site.index] = {\n\t    site: site,\n\t    halfedges: []\n\t  };\n\t}\n\t\n\tfunction cellHalfedgeAngle(cell, edge) {\n\t  var site = cell.site,\n\t      va = edge.left,\n\t      vb = edge.right;\n\t  if (site === vb) vb = va, va = site;\n\t  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t  if (site === va) va = edge[1], vb = edge[0];\n\t  else va = edge[0], vb = edge[1];\n\t  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t}\n\t\n\tfunction cellHalfedgeStart(cell, edge) {\n\t  return edge[+(edge.left !== cell.site)];\n\t}\n\t\n\tfunction cellHalfedgeEnd(cell, edge) {\n\t  return edge[+(edge.left === cell.site)];\n\t}\n\t\n\tfunction sortCellHalfedges() {\n\t  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t      var index = new Array(m),\n\t          array = new Array(m);\n\t      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t      index.sort(function(i, j) { return array[j] - array[i]; });\n\t      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t    }\n\t  }\n\t}\n\t\n\tfunction clipCells(x0, y0, x1, y1) {\n\t  var nCells = cells.length,\n\t      iCell,\n\t      cell,\n\t      site,\n\t      iHalfedge,\n\t      halfedges,\n\t      nHalfedges,\n\t      start,\n\t      startX,\n\t      startY,\n\t      end,\n\t      endX,\n\t      endY,\n\t      cover = true;\n\t\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      site = cell.site;\n\t      halfedges = cell.halfedges;\n\t      iHalfedge = halfedges.length;\n\t\n\t      // Remove any dangling clipped edges.\n\t      while (iHalfedge--) {\n\t        if (!edges[halfedges[iHalfedge]]) {\n\t          halfedges.splice(iHalfedge, 1);\n\t        }\n\t      }\n\t\n\t      // Insert any border edges as necessary.\n\t      iHalfedge = 0, nHalfedges = halfedges.length;\n\t      while (iHalfedge < nHalfedges) {\n\t        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t              : null)) - 1);\n\t          ++nHalfedges;\n\t        }\n\t      }\n\t\n\t      if (nHalfedges) cover = false;\n\t    }\n\t  }\n\t\n\t  // If there weren’t any edges, have the closest site cover the extent.\n\t  // It doesn’t matter which corner of the extent we measure!\n\t  if (cover) {\n\t    var dx, dy, d2, dc = Infinity;\n\t\n\t    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        dx = site[0] - x0;\n\t        dy = site[1] - y0;\n\t        d2 = dx * dx + dy * dy;\n\t        if (d2 < dc) dc = d2, cover = cell;\n\t      }\n\t    }\n\t\n\t    if (cover) {\n\t      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t      cover.halfedges.push(\n\t        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t        edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t        edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t        edges.push(createBorderEdge(site, v10, v00)) - 1\n\t      );\n\t    }\n\t  }\n\t\n\t  // Lastly delete any cells with no edges; these were entirely clipped.\n\t  for (iCell = 0; iCell < nCells; ++iCell) {\n\t    if (cell = cells[iCell]) {\n\t      if (!cell.halfedges.length) {\n\t        delete cells[iCell];\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar circlePool = [];\n\t\n\tvar firstCircle;\n\t\n\tfunction Circle() {\n\t  RedBlackNode(this);\n\t  this.x =\n\t  this.y =\n\t  this.arc =\n\t  this.site =\n\t  this.cy = null;\n\t}\n\t\n\tfunction attachCircle(arc) {\n\t  var lArc = arc.P,\n\t      rArc = arc.N;\n\t\n\t  if (!lArc || !rArc) return;\n\t\n\t  var lSite = lArc.site,\n\t      cSite = arc.site,\n\t      rSite = rArc.site;\n\t\n\t  if (lSite === rSite) return;\n\t\n\t  var bx = cSite[0],\n\t      by = cSite[1],\n\t      ax = lSite[0] - bx,\n\t      ay = lSite[1] - by,\n\t      cx = rSite[0] - bx,\n\t      cy = rSite[1] - by;\n\t\n\t  var d = 2 * (ax * cy - ay * cx);\n\t  if (d >= -epsilon2$1) return;\n\t\n\t  var ha = ax * ax + ay * ay,\n\t      hc = cx * cx + cy * cy,\n\t      x = (cy * ha - ay * hc) / d,\n\t      y = (ax * hc - cx * ha) / d;\n\t\n\t  var circle = circlePool.pop() || new Circle;\n\t  circle.arc = arc;\n\t  circle.site = cSite;\n\t  circle.x = x + bx;\n\t  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t  arc.circle = circle;\n\t\n\t  var before = null,\n\t      node = circles._;\n\t\n\t  while (node) {\n\t    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t      if (node.L) node = node.L;\n\t      else { before = node.P; break; }\n\t    } else {\n\t      if (node.R) node = node.R;\n\t      else { before = node; break; }\n\t    }\n\t  }\n\t\n\t  circles.insert(before, circle);\n\t  if (!before) firstCircle = circle;\n\t}\n\t\n\tfunction detachCircle(arc) {\n\t  var circle = arc.circle;\n\t  if (circle) {\n\t    if (!circle.P) firstCircle = circle.N;\n\t    circles.remove(circle);\n\t    circlePool.push(circle);\n\t    RedBlackNode(circle);\n\t    arc.circle = null;\n\t  }\n\t}\n\t\n\tvar beachPool = [];\n\t\n\tfunction Beach() {\n\t  RedBlackNode(this);\n\t  this.edge =\n\t  this.site =\n\t  this.circle = null;\n\t}\n\t\n\tfunction createBeach(site) {\n\t  var beach = beachPool.pop() || new Beach;\n\t  beach.site = site;\n\t  return beach;\n\t}\n\t\n\tfunction detachBeach(beach) {\n\t  detachCircle(beach);\n\t  beaches.remove(beach);\n\t  beachPool.push(beach);\n\t  RedBlackNode(beach);\n\t}\n\t\n\tfunction removeBeach(beach) {\n\t  var circle = beach.circle,\n\t      x = circle.x,\n\t      y = circle.cy,\n\t      vertex = [x, y],\n\t      previous = beach.P,\n\t      next = beach.N,\n\t      disappearing = [beach];\n\t\n\t  detachBeach(beach);\n\t\n\t  var lArc = previous;\n\t  while (lArc.circle\n\t      && Math.abs(x - lArc.circle.x) < epsilon$3\n\t      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t    previous = lArc.P;\n\t    disappearing.unshift(lArc);\n\t    detachBeach(lArc);\n\t    lArc = previous;\n\t  }\n\t\n\t  disappearing.unshift(lArc);\n\t  detachCircle(lArc);\n\t\n\t  var rArc = next;\n\t  while (rArc.circle\n\t      && Math.abs(x - rArc.circle.x) < epsilon$3\n\t      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t    next = rArc.N;\n\t    disappearing.push(rArc);\n\t    detachBeach(rArc);\n\t    rArc = next;\n\t  }\n\t\n\t  disappearing.push(rArc);\n\t  detachCircle(rArc);\n\t\n\t  var nArcs = disappearing.length,\n\t      iArc;\n\t  for (iArc = 1; iArc < nArcs; ++iArc) {\n\t    rArc = disappearing[iArc];\n\t    lArc = disappearing[iArc - 1];\n\t    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t  }\n\t\n\t  lArc = disappearing[0];\n\t  rArc = disappearing[nArcs - 1];\n\t  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction addBeach(site) {\n\t  var x = site[0],\n\t      directrix = site[1],\n\t      lArc,\n\t      rArc,\n\t      dxl,\n\t      dxr,\n\t      node = beaches._;\n\t\n\t  while (node) {\n\t    dxl = leftBreakPoint(node, directrix) - x;\n\t    if (dxl > epsilon$3) node = node.L; else {\n\t      dxr = x - rightBreakPoint(node, directrix);\n\t      if (dxr > epsilon$3) {\n\t        if (!node.R) {\n\t          lArc = node;\n\t          break;\n\t        }\n\t        node = node.R;\n\t      } else {\n\t        if (dxl > -epsilon$3) {\n\t          lArc = node.P;\n\t          rArc = node;\n\t        } else if (dxr > -epsilon$3) {\n\t          lArc = node;\n\t          rArc = node.N;\n\t        } else {\n\t          lArc = rArc = node;\n\t        }\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  createCell(site);\n\t  var newArc = createBeach(site);\n\t  beaches.insert(lArc, newArc);\n\t\n\t  if (!lArc && !rArc) return;\n\t\n\t  if (lArc === rArc) {\n\t    detachCircle(lArc);\n\t    rArc = createBeach(lArc.site);\n\t    beaches.insert(newArc, rArc);\n\t    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t    return;\n\t  }\n\t\n\t  if (!rArc) { // && lArc\n\t    newArc.edge = createEdge(lArc.site, newArc.site);\n\t    return;\n\t  }\n\t\n\t  // else lArc !== rArc\n\t  detachCircle(lArc);\n\t  detachCircle(rArc);\n\t\n\t  var lSite = lArc.site,\n\t      ax = lSite[0],\n\t      ay = lSite[1],\n\t      bx = site[0] - ax,\n\t      by = site[1] - ay,\n\t      rSite = rArc.site,\n\t      cx = rSite[0] - ax,\n\t      cy = rSite[1] - ay,\n\t      d = 2 * (bx * cy - by * cx),\n\t      hb = bx * bx + by * by,\n\t      hc = cx * cx + cy * cy,\n\t      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t  newArc.edge = createEdge(lSite, site, null, vertex);\n\t  rArc.edge = createEdge(site, rSite, null, vertex);\n\t  attachCircle(lArc);\n\t  attachCircle(rArc);\n\t}\n\t\n\tfunction leftBreakPoint(arc, directrix) {\n\t  var site = arc.site,\n\t      rfocx = site[0],\n\t      rfocy = site[1],\n\t      pby2 = rfocy - directrix;\n\t\n\t  if (!pby2) return rfocx;\n\t\n\t  var lArc = arc.P;\n\t  if (!lArc) return -Infinity;\n\t\n\t  site = lArc.site;\n\t  var lfocx = site[0],\n\t      lfocy = site[1],\n\t      plby2 = lfocy - directrix;\n\t\n\t  if (!plby2) return lfocx;\n\t\n\t  var hl = lfocx - rfocx,\n\t      aby2 = 1 / pby2 - 1 / plby2,\n\t      b = hl / plby2;\n\t\n\t  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t  return (rfocx + lfocx) / 2;\n\t}\n\t\n\tfunction rightBreakPoint(arc, directrix) {\n\t  var rArc = arc.N;\n\t  if (rArc) return leftBreakPoint(rArc, directrix);\n\t  var site = arc.site;\n\t  return site[1] === directrix ? site[0] : Infinity;\n\t}\n\t\n\tvar epsilon$3 = 1e-6;\n\tvar epsilon2$1 = 1e-12;\n\tvar beaches;\n\tvar cells;\n\tvar circles;\n\tvar edges;\n\t\n\tfunction triangleArea(a, b, c) {\n\t  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t}\n\t\n\tfunction lexicographic(a, b) {\n\t  return b[1] - a[1]\n\t      || b[0] - a[0];\n\t}\n\t\n\tfunction Diagram(sites, extent) {\n\t  var site = sites.sort(lexicographic).pop(),\n\t      x,\n\t      y,\n\t      circle;\n\t\n\t  edges = [];\n\t  cells = new Array(sites.length);\n\t  beaches = new RedBlackTree;\n\t  circles = new RedBlackTree;\n\t\n\t  while (true) {\n\t    circle = firstCircle;\n\t    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t      if (site[0] !== x || site[1] !== y) {\n\t        addBeach(site);\n\t        x = site[0], y = site[1];\n\t      }\n\t      site = sites.pop();\n\t    } else if (circle) {\n\t      removeBeach(circle.arc);\n\t    } else {\n\t      break;\n\t    }\n\t  }\n\t\n\t  sortCellHalfedges();\n\t\n\t  if (extent) {\n\t    var x0 = +extent[0][0],\n\t        y0 = +extent[0][1],\n\t        x1 = +extent[1][0],\n\t        y1 = +extent[1][1];\n\t    clipEdges(x0, y0, x1, y1);\n\t    clipCells(x0, y0, x1, y1);\n\t  }\n\t\n\t  this.edges = edges;\n\t  this.cells = cells;\n\t\n\t  beaches =\n\t  circles =\n\t  edges =\n\t  cells = null;\n\t}\n\t\n\tDiagram.prototype = {\n\t  constructor: Diagram,\n\t\n\t  polygons: function() {\n\t    var edges = this.edges;\n\t\n\t    return this.cells.map(function(cell) {\n\t      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t      polygon.data = cell.site.data;\n\t      return polygon;\n\t    });\n\t  },\n\t\n\t  triangles: function() {\n\t    var triangles = [],\n\t        edges = this.edges;\n\t\n\t    this.cells.forEach(function(cell, i) {\n\t      var site = cell.site,\n\t          halfedges = cell.halfedges,\n\t          j = -1,\n\t          m = halfedges.length,\n\t          s0,\n\t          e1 = edges[halfedges[m - 1]],\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t      while (++j < m) {\n\t        s0 = s1;\n\t        e1 = edges[halfedges[j]];\n\t        s1 = e1.left === site ? e1.right : e1.left;\n\t        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t          triangles.push([site.data, s0.data, s1.data]);\n\t        }\n\t      }\n\t    });\n\t\n\t    return triangles;\n\t  },\n\t\n\t  links: function() {\n\t    return this.edges.filter(function(edge) {\n\t      return edge.right;\n\t    }).map(function(edge) {\n\t      return {\n\t        source: edge.left.data,\n\t        target: edge.right.data\n\t      };\n\t    });\n\t  },\n\t\n\t  find: function(x, y, radius) {\n\t    var that = this,\n\t        i0, i1 = that._found || 0,\n\t        cell = that.cells[i1] || that.cells[i1 = 0],\n\t        dx = x - cell.site[0],\n\t        dy = y - cell.site[1],\n\t        d2 = dx * dx + dy * dy;\n\t\n\t    do {\n\t      cell = that.cells[i0 = i1], i1 = null;\n\t      cell.halfedges.forEach(function(e) {\n\t        var edge = that.edges[e], v = edge.left;\n\t        if ((v === cell.site || !v) && !(v = edge.right)) return;\n\t        var vx = x - v[0],\n\t            vy = y - v[1],\n\t            v2 = vx * vx + vy * vy;\n\t        if (v2 < d2) d2 = v2, i1 = v.index;\n\t      });\n\t    } while (i1 !== null);\n\t\n\t    that._found = i0;\n\t\n\t    return radius == null || d2 <= radius * radius ? cell.site : null;\n\t  }\n\t};\n\t\n\tvar voronoi = function() {\n\t  var x$$1 = x$4,\n\t      y$$1 = y$4,\n\t      extent = null;\n\t\n\t  function voronoi(data) {\n\t    return new Diagram(data.map(function(d, i) {\n\t      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n\t      s.index = i;\n\t      s.data = d;\n\t      return s;\n\t    }), extent);\n\t  }\n\t\n\t  voronoi.polygons = function(data) {\n\t    return voronoi(data).polygons();\n\t  };\n\t\n\t  voronoi.links = function(data) {\n\t    return voronoi(data).links();\n\t  };\n\t\n\t  voronoi.triangles = function(data) {\n\t    return voronoi(data).triangles();\n\t  };\n\t\n\t  voronoi.x = function(_) {\n\t    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n\t  };\n\t\n\t  voronoi.y = function(_) {\n\t    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n\t  };\n\t\n\t  voronoi.extent = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t  };\n\t\n\t  voronoi.size = function(_) {\n\t    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t  };\n\t\n\t  return voronoi;\n\t};\n\t\n\tvar constant$10 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction ZoomEvent(target, type, transform) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.transform = transform;\n\t}\n\t\n\tfunction Transform(k, x, y) {\n\t  this.k = k;\n\t  this.x = x;\n\t  this.y = y;\n\t}\n\t\n\tTransform.prototype = {\n\t  constructor: Transform,\n\t  scale: function(k) {\n\t    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t  },\n\t  translate: function(x, y) {\n\t    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t  },\n\t  apply: function(point) {\n\t    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t  },\n\t  applyX: function(x) {\n\t    return x * this.k + this.x;\n\t  },\n\t  applyY: function(y) {\n\t    return y * this.k + this.y;\n\t  },\n\t  invert: function(location) {\n\t    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t  },\n\t  invertX: function(x) {\n\t    return (x - this.x) / this.k;\n\t  },\n\t  invertY: function(y) {\n\t    return (y - this.y) / this.k;\n\t  },\n\t  rescaleX: function(x) {\n\t    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t  },\n\t  rescaleY: function(y) {\n\t    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t  },\n\t  toString: function() {\n\t    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t  }\n\t};\n\t\n\tvar identity$6 = new Transform(1, 0, 0);\n\t\n\ttransform.prototype = Transform.prototype;\n\t\n\tfunction transform(node) {\n\t  return node.__zoom || identity$6;\n\t}\n\t\n\tfunction nopropagation$1() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$1 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$1() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent() {\n\t  var e = this, w, h;\n\t  if (e instanceof SVGElement) {\n\t    e = e.ownerSVGElement || e;\n\t    w = e.width.baseVal.value;\n\t    h = e.height.baseVal.value;\n\t  } else {\n\t    w = e.clientWidth;\n\t    h = e.clientHeight;\n\t  }\n\t  return [[0, 0], [w, h]];\n\t}\n\t\n\tfunction defaultTransform() {\n\t  return this.__zoom || identity$6;\n\t}\n\t\n\tvar zoom = function() {\n\t  var filter = defaultFilter$1,\n\t      extent = defaultExtent,\n\t      k0 = 0,\n\t      k1 = Infinity,\n\t      x0 = -k1,\n\t      x1 = k1,\n\t      y0 = x0,\n\t      y1 = x1,\n\t      duration = 250,\n\t      interpolate$$1 = interpolateZoom,\n\t      gestures = [],\n\t      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t      touchstarting,\n\t      touchending,\n\t      touchDelay = 500,\n\t      wheelDelay = 150;\n\t\n\t  function zoom(selection$$1) {\n\t    selection$$1\n\t        .on(\"wheel.zoom\", wheeled)\n\t        .on(\"mousedown.zoom\", mousedowned)\n\t        .on(\"dblclick.zoom\", dblclicked)\n\t        .on(\"touchstart.zoom\", touchstarted)\n\t        .on(\"touchmove.zoom\", touchmoved)\n\t        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .property(\"__zoom\", defaultTransform);\n\t  }\n\t\n\t  zoom.transform = function(collection, transform) {\n\t    var selection$$1 = collection.selection ? collection.selection() : collection;\n\t    selection$$1.property(\"__zoom\", defaultTransform);\n\t    if (collection !== selection$$1) {\n\t      schedule(collection, transform);\n\t    } else {\n\t      selection$$1.interrupt().each(function() {\n\t        gesture(this, arguments)\n\t            .start()\n\t            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t            .end();\n\t      });\n\t    }\n\t  };\n\t\n\t  zoom.scaleBy = function(selection$$1, k) {\n\t    zoom.scaleTo(selection$$1, function() {\n\t      var k0 = this.__zoom.k,\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return k0 * k1;\n\t    });\n\t  };\n\t\n\t  zoom.scaleTo = function(selection$$1, k) {\n\t    zoom.transform(selection$$1, function() {\n\t      var e = extent.apply(this, arguments),\n\t          t0 = this.__zoom,\n\t          p0 = centroid(e),\n\t          p1 = t0.invert(p0),\n\t          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t      return constrain(translate(scale(t0, k1), p0, p1), e);\n\t    });\n\t  };\n\t\n\t  zoom.translateBy = function(selection$$1, x, y) {\n\t    zoom.transform(selection$$1, function() {\n\t      return constrain(this.__zoom.translate(\n\t        typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t        typeof y === \"function\" ? y.apply(this, arguments) : y\n\t      ), extent.apply(this, arguments));\n\t    });\n\t  };\n\t\n\t  function scale(transform, k) {\n\t    k = Math.max(k0, Math.min(k1, k));\n\t    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t  }\n\t\n\t  function translate(transform, p0, p1) {\n\t    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t  }\n\t\n\t  function constrain(transform, extent) {\n\t    var dx0 = transform.invertX(extent[0][0]) - x0,\n\t        dx1 = transform.invertX(extent[1][0]) - x1,\n\t        dy0 = transform.invertY(extent[0][1]) - y0,\n\t        dy1 = transform.invertY(extent[1][1]) - y1;\n\t    return transform.translate(\n\t      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n\t      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n\t    );\n\t  }\n\t\n\t  function centroid(extent) {\n\t    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t  }\n\t\n\t  function schedule(transition$$1, transform, center) {\n\t    transition$$1\n\t        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t        .tween(\"zoom\", function() {\n\t          var that = this,\n\t              args = arguments,\n\t              g = gesture(that, args),\n\t              e = extent.apply(that, args),\n\t              p = center || centroid(e),\n\t              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t              a = that.__zoom,\n\t              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t          return function(t) {\n\t            if (t === 1) t = b; // Avoid rounding error on end.\n\t            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t            g.zoom(null, t);\n\t          };\n\t        });\n\t  }\n\t\n\t  function gesture(that, args) {\n\t    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t      if ((g = gestures[i]).that === that) {\n\t        return g;\n\t      }\n\t    }\n\t    return new Gesture(that, args);\n\t  }\n\t\n\t  function Gesture(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.index = -1;\n\t    this.active = 0;\n\t    this.extent = extent.apply(that, args);\n\t  }\n\t\n\t  Gesture.prototype = {\n\t    start: function() {\n\t      if (++this.active === 1) {\n\t        this.index = gestures.push(this) - 1;\n\t        this.emit(\"start\");\n\t      }\n\t      return this;\n\t    },\n\t    zoom: function(key, transform) {\n\t      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t      this.that.__zoom = transform;\n\t      this.emit(\"zoom\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) {\n\t        gestures.splice(this.index, 1);\n\t        this.index = -1;\n\t        this.emit(\"end\");\n\t      }\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function wheeled() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        t = this.__zoom,\n\t        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t        p = mouse(this);\n\t\n\t    // If the mouse is in the same location as before, reuse it.\n\t    // If there were recent wheel events, reset the wheel idle timeout.\n\t    if (g.wheel) {\n\t      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t        g.mouse[1] = t.invert(g.mouse[0] = p);\n\t      }\n\t      clearTimeout(g.wheel);\n\t    }\n\t\n\t    // If this wheel event won’t trigger a transform change, ignore it.\n\t    else if (t.k === k) return;\n\t\n\t    // Otherwise, capture the mouse point and location at the start.\n\t    else {\n\t      g.mouse = [p, t.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t\n\t    noevent$1();\n\t    g.wheel = setTimeout(wheelidled, wheelDelay);\n\t    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t    function wheelidled() {\n\t      g.wheel = null;\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function mousedowned() {\n\t    if (touchending || !filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t        p = mouse(this);\n\t\n\t    dragDisable(exports.event.view);\n\t    nopropagation$1();\n\t    g.mouse = [p, this.__zoom.invert(p)];\n\t    interrupt(this);\n\t    g.start();\n\t\n\t    function mousemoved() {\n\t      noevent$1();\n\t      g.moved = true;\n\t      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t    }\n\t\n\t    function mouseupped() {\n\t      v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t      yesdrag(exports.event.view, g.moved);\n\t      noevent$1();\n\t      g.end();\n\t    }\n\t  }\n\t\n\t  function dblclicked() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var t0 = this.__zoom,\n\t        p0 = mouse(this),\n\t        p1 = t0.invert(p0),\n\t        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t    noevent$1();\n\t    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t    else select(this).call(zoom.transform, t1);\n\t  }\n\t\n\t  function touchstarted() {\n\t    if (!filter.apply(this, arguments)) return;\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p;\n\t\n\t    nopropagation$1();\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      p = [p, this.__zoom.invert(p), t.identifier];\n\t      if (!g.touch0) g.touch0 = p;\n\t      else if (!g.touch1) g.touch1 = p;\n\t    }\n\t\n\t    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\t    if (touchstarting) {\n\t      touchstarting = clearTimeout(touchstarting);\n\t      if (!g.touch1) {\n\t        g.end();\n\t        p = select(this).on(\"dblclick.zoom\");\n\t        if (p) p.apply(this, arguments);\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (exports.event.touches.length === n) {\n\t      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t      interrupt(this);\n\t      g.start();\n\t    }\n\t  }\n\t\n\t  function touchmoved() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t, p, l;\n\t\n\t    noevent$1();\n\t    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n\t      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t    }\n\t    t = g.that.__zoom;\n\t    if (g.touch1) {\n\t      var p0 = g.touch0[0], l0 = g.touch0[1],\n\t          p1 = g.touch1[0], l1 = g.touch1[1],\n\t          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t      t = scale(t, Math.sqrt(dp / dl));\n\t      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t    }\n\t    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t    else return;\n\t    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t  }\n\t\n\t  function touchended() {\n\t    var g = gesture(this, arguments),\n\t        touches$$1 = exports.event.changedTouches,\n\t        n = touches$$1.length, i, t;\n\t\n\t    nopropagation$1();\n\t    if (touchending) clearTimeout(touchending);\n\t    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t    for (i = 0; i < n; ++i) {\n\t      t = touches$$1[i];\n\t      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t    }\n\t    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t    if (!g.touch0) g.end();\n\t  }\n\t\n\t  zoom.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n\t  };\n\t\n\t  zoom.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t  };\n\t\n\t  zoom.scaleExtent = function(_) {\n\t    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t  };\n\t\n\t  zoom.translateExtent = function(_) {\n\t    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  zoom.duration = function(_) {\n\t    return arguments.length ? (duration = +_, zoom) : duration;\n\t  };\n\t\n\t  zoom.interpolate = function(_) {\n\t    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n\t  };\n\t\n\t  zoom.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? zoom : value;\n\t  };\n\t\n\t  return zoom;\n\t};\n\t\n\tvar constant$11 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar BrushEvent = function(target, type, selection) {\n\t  this.target = target;\n\t  this.type = type;\n\t  this.selection = selection;\n\t};\n\t\n\tfunction nopropagation$2() {\n\t  exports.event.stopImmediatePropagation();\n\t}\n\t\n\tvar noevent$2 = function() {\n\t  exports.event.preventDefault();\n\t  exports.event.stopImmediatePropagation();\n\t};\n\t\n\tvar MODE_DRAG = {name: \"drag\"};\n\tvar MODE_SPACE = {name: \"space\"};\n\tvar MODE_HANDLE = {name: \"handle\"};\n\tvar MODE_CENTER = {name: \"center\"};\n\t\n\tvar X = {\n\t  name: \"x\",\n\t  handles: [\"e\", \"w\"].map(type$1),\n\t  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t};\n\t\n\tvar Y = {\n\t  name: \"y\",\n\t  handles: [\"n\", \"s\"].map(type$1),\n\t  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t};\n\t\n\tvar XY = {\n\t  name: \"xy\",\n\t  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t  input: function(xy) { return xy; },\n\t  output: function(xy) { return xy; }\n\t};\n\t\n\tvar cursors = {\n\t  overlay: \"crosshair\",\n\t  selection: \"move\",\n\t  n: \"ns-resize\",\n\t  e: \"ew-resize\",\n\t  s: \"ns-resize\",\n\t  w: \"ew-resize\",\n\t  nw: \"nwse-resize\",\n\t  ne: \"nesw-resize\",\n\t  se: \"nwse-resize\",\n\t  sw: \"nesw-resize\"\n\t};\n\t\n\tvar flipX = {\n\t  e: \"w\",\n\t  w: \"e\",\n\t  nw: \"ne\",\n\t  ne: \"nw\",\n\t  se: \"sw\",\n\t  sw: \"se\"\n\t};\n\t\n\tvar flipY = {\n\t  n: \"s\",\n\t  s: \"n\",\n\t  nw: \"sw\",\n\t  ne: \"se\",\n\t  se: \"ne\",\n\t  sw: \"nw\"\n\t};\n\t\n\tvar signsX = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: null,\n\t  e: +1,\n\t  s: null,\n\t  w: -1,\n\t  nw: -1,\n\t  ne: +1,\n\t  se: +1,\n\t  sw: -1\n\t};\n\t\n\tvar signsY = {\n\t  overlay: +1,\n\t  selection: +1,\n\t  n: -1,\n\t  e: null,\n\t  s: +1,\n\t  w: null,\n\t  nw: -1,\n\t  ne: -1,\n\t  se: +1,\n\t  sw: +1\n\t};\n\t\n\tfunction type$1(t) {\n\t  return {type: t};\n\t}\n\t\n\t// Ignore right-click, since that should open the context menu.\n\tfunction defaultFilter$2() {\n\t  return !exports.event.button;\n\t}\n\t\n\tfunction defaultExtent$1() {\n\t  var svg = this.ownerSVGElement || this;\n\t  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t}\n\t\n\t// Like d3.local, but with the name “__brush” rather than auto-generated.\n\tfunction local$1(node) {\n\t  while (!node.__brush) if (!(node = node.parentNode)) return;\n\t  return node.__brush;\n\t}\n\t\n\tfunction empty$1(extent) {\n\t  return extent[0][0] === extent[1][0]\n\t      || extent[0][1] === extent[1][1];\n\t}\n\t\n\tfunction brushSelection(node) {\n\t  var state = node.__brush;\n\t  return state ? state.dim.output(state.selection) : null;\n\t}\n\t\n\tfunction brushX() {\n\t  return brush$1(X);\n\t}\n\t\n\tfunction brushY() {\n\t  return brush$1(Y);\n\t}\n\t\n\tvar brush = function() {\n\t  return brush$1(XY);\n\t};\n\t\n\tfunction brush$1(dim) {\n\t  var extent = defaultExtent$1,\n\t      filter = defaultFilter$2,\n\t      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t      handleSize = 6,\n\t      touchending;\n\t\n\t  function brush(group) {\n\t    var overlay = group\n\t        .property(\"__brush\", initialize)\n\t      .selectAll(\".overlay\")\n\t      .data([type$1(\"overlay\")]);\n\t\n\t    overlay.enter().append(\"rect\")\n\t        .attr(\"class\", \"overlay\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .attr(\"cursor\", cursors.overlay)\n\t      .merge(overlay)\n\t        .each(function() {\n\t          var extent = local$1(this).extent;\n\t          select(this)\n\t              .attr(\"x\", extent[0][0])\n\t              .attr(\"y\", extent[0][1])\n\t              .attr(\"width\", extent[1][0] - extent[0][0])\n\t              .attr(\"height\", extent[1][1] - extent[0][1]);\n\t        });\n\t\n\t    group.selectAll(\".selection\")\n\t      .data([type$1(\"selection\")])\n\t      .enter().append(\"rect\")\n\t        .attr(\"class\", \"selection\")\n\t        .attr(\"cursor\", cursors.selection)\n\t        .attr(\"fill\", \"#777\")\n\t        .attr(\"fill-opacity\", 0.3)\n\t        .attr(\"stroke\", \"#fff\")\n\t        .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t    var handle = group.selectAll(\".handle\")\n\t      .data(dim.handles, function(d) { return d.type; });\n\t\n\t    handle.exit().remove();\n\t\n\t    handle.enter().append(\"rect\")\n\t        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t    group\n\t        .each(redraw)\n\t        .attr(\"fill\", \"none\")\n\t        .attr(\"pointer-events\", \"all\")\n\t        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t        .on(\"mousedown.brush touchstart.brush\", started);\n\t  }\n\t\n\t  brush.move = function(group, selection$$1) {\n\t    if (group.selection) {\n\t      group\n\t          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t          .tween(\"brush\", function() {\n\t            var that = this,\n\t                state = that.__brush,\n\t                emit = emitter(that, arguments),\n\t                selection0 = state.selection,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n\t                i = interpolate(selection0, selection1);\n\t\n\t            function tween(t) {\n\t              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t              redraw.call(that);\n\t              emit.brush();\n\t            }\n\t\n\t            return selection0 && selection1 ? tween : tween(1);\n\t          });\n\t    } else {\n\t      group\n\t          .each(function() {\n\t            var that = this,\n\t                args = arguments,\n\t                state = that.__brush,\n\t                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n\t                emit = emitter(that, args).beforestart();\n\t\n\t            interrupt(that);\n\t            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t            redraw.call(that);\n\t            emit.start().brush().end();\n\t          });\n\t    }\n\t  };\n\t\n\t  function redraw() {\n\t    var group = select(this),\n\t        selection$$1 = local$1(this).selection;\n\t\n\t    if (selection$$1) {\n\t      group.selectAll(\".selection\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", selection$$1[0][0])\n\t          .attr(\"y\", selection$$1[0][1])\n\t          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n\t          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\t\n\t      group.selectAll(\".handle\")\n\t          .style(\"display\", null)\n\t          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n\t          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n\t          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n\t          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n\t    }\n\t\n\t    else {\n\t      group.selectAll(\".selection,.handle\")\n\t          .style(\"display\", \"none\")\n\t          .attr(\"x\", null)\n\t          .attr(\"y\", null)\n\t          .attr(\"width\", null)\n\t          .attr(\"height\", null);\n\t    }\n\t  }\n\t\n\t  function emitter(that, args) {\n\t    return that.__brush.emitter || new Emitter(that, args);\n\t  }\n\t\n\t  function Emitter(that, args) {\n\t    this.that = that;\n\t    this.args = args;\n\t    this.state = that.__brush;\n\t    this.active = 0;\n\t  }\n\t\n\t  Emitter.prototype = {\n\t    beforestart: function() {\n\t      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t      return this;\n\t    },\n\t    start: function() {\n\t      if (this.starting) this.starting = false, this.emit(\"start\");\n\t      return this;\n\t    },\n\t    brush: function() {\n\t      this.emit(\"brush\");\n\t      return this;\n\t    },\n\t    end: function() {\n\t      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t      return this;\n\t    },\n\t    emit: function(type) {\n\t      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t    }\n\t  };\n\t\n\t  function started() {\n\t    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t    else if (touchending) return;\n\t    if (!filter.apply(this, arguments)) return;\n\t\n\t    var that = this,\n\t        type = exports.event.target.__data__.type,\n\t        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t        signX = dim === Y ? null : signsX[type],\n\t        signY = dim === X ? null : signsY[type],\n\t        state = local$1(that),\n\t        extent = state.extent,\n\t        selection$$1 = state.selection,\n\t        W = extent[0][0], w0, w1,\n\t        N = extent[0][1], n0, n1,\n\t        E = extent[1][0], e0, e1,\n\t        S = extent[1][1], s0, s1,\n\t        dx,\n\t        dy,\n\t        moving,\n\t        shifting = signX && signY && exports.event.shiftKey,\n\t        lockX,\n\t        lockY,\n\t        point0 = mouse(that),\n\t        point = point0,\n\t        emit = emitter(that, arguments).beforestart();\n\t\n\t    if (type === \"overlay\") {\n\t      state.selection = selection$$1 = [\n\t        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t      ];\n\t    } else {\n\t      w0 = selection$$1[0][0];\n\t      n0 = selection$$1[0][1];\n\t      e0 = selection$$1[1][0];\n\t      s0 = selection$$1[1][1];\n\t    }\n\t\n\t    w1 = w0;\n\t    n1 = n0;\n\t    e1 = e0;\n\t    s1 = s0;\n\t\n\t    var group = select(that)\n\t        .attr(\"pointer-events\", \"none\");\n\t\n\t    var overlay = group.selectAll(\".overlay\")\n\t        .attr(\"cursor\", cursors[type]);\n\t\n\t    if (exports.event.touches) {\n\t      group\n\t          .on(\"touchmove.brush\", moved, true)\n\t          .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t    } else {\n\t      var view = select(exports.event.view)\n\t          .on(\"keydown.brush\", keydowned, true)\n\t          .on(\"keyup.brush\", keyupped, true)\n\t          .on(\"mousemove.brush\", moved, true)\n\t          .on(\"mouseup.brush\", ended, true);\n\t\n\t      dragDisable(exports.event.view);\n\t    }\n\t\n\t    nopropagation$2();\n\t    interrupt(that);\n\t    redraw.call(that);\n\t    emit.start();\n\t\n\t    function moved() {\n\t      var point1 = mouse(that);\n\t      if (shifting && !lockX && !lockY) {\n\t        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t        else lockX = true;\n\t      }\n\t      point = point1;\n\t      moving = true;\n\t      noevent$2();\n\t      move();\n\t    }\n\t\n\t    function move() {\n\t      var t;\n\t\n\t      dx = point[0] - point0[0];\n\t      dy = point[1] - point0[1];\n\t\n\t      switch (mode) {\n\t        case MODE_SPACE:\n\t        case MODE_DRAG: {\n\t          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_HANDLE: {\n\t          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t          break;\n\t        }\n\t        case MODE_CENTER: {\n\t          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (e1 < w1) {\n\t        signX *= -1;\n\t        t = w0, w0 = e0, e0 = t;\n\t        t = w1, w1 = e1, e1 = t;\n\t        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t      }\n\t\n\t      if (s1 < n1) {\n\t        signY *= -1;\n\t        t = n0, n0 = s0, s0 = t;\n\t        t = n1, n1 = s1, s1 = t;\n\t        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t      }\n\t\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n\t      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n\t      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\t\n\t      if (selection$$1[0][0] !== w1\n\t          || selection$$1[0][1] !== n1\n\t          || selection$$1[1][0] !== e1\n\t          || selection$$1[1][1] !== s1) {\n\t        state.selection = [[w1, n1], [e1, s1]];\n\t        redraw.call(that);\n\t        emit.brush();\n\t      }\n\t    }\n\t\n\t    function ended() {\n\t      nopropagation$2();\n\t      if (exports.event.touches) {\n\t        if (exports.event.touches.length) return;\n\t        if (touchending) clearTimeout(touchending);\n\t        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t      } else {\n\t        yesdrag(exports.event.view, moving);\n\t        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t      }\n\t      group.attr(\"pointer-events\", \"all\");\n\t      overlay.attr(\"cursor\", cursors.overlay);\n\t      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n\t      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n\t      emit.end();\n\t    }\n\t\n\t    function keydowned() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          shifting = signX && signY;\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_HANDLE) {\n\t            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t            mode = MODE_CENTER;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE; takes priority over ALT\n\t          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t            mode = MODE_SPACE;\n\t            overlay.attr(\"cursor\", cursors.selection);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t\n\t    function keyupped() {\n\t      switch (exports.event.keyCode) {\n\t        case 16: { // SHIFT\n\t          if (shifting) {\n\t            lockX = lockY = shifting = false;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 18: { // ALT\n\t          if (mode === MODE_CENTER) {\n\t            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t            mode = MODE_HANDLE;\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        case 32: { // SPACE\n\t          if (mode === MODE_SPACE) {\n\t            if (exports.event.altKey) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t            } else {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t            }\n\t            overlay.attr(\"cursor\", cursors[type]);\n\t            move();\n\t          }\n\t          break;\n\t        }\n\t        default: return;\n\t      }\n\t      noevent$2();\n\t    }\n\t  }\n\t\n\t  function initialize() {\n\t    var state = this.__brush || {selection: null};\n\t    state.extent = extent.apply(this, arguments);\n\t    state.dim = dim;\n\t    return state;\n\t  }\n\t\n\t  brush.extent = function(_) {\n\t    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t  };\n\t\n\t  brush.filter = function(_) {\n\t    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n\t  };\n\t\n\t  brush.handleSize = function(_) {\n\t    return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t  };\n\t\n\t  brush.on = function() {\n\t    var value = listeners.on.apply(listeners, arguments);\n\t    return value === listeners ? brush : value;\n\t  };\n\t\n\t  return brush;\n\t}\n\t\n\tvar cos = Math.cos;\n\tvar sin = Math.sin;\n\tvar pi$3 = Math.PI;\n\tvar halfPi$2 = pi$3 / 2;\n\tvar tau$3 = pi$3 * 2;\n\tvar max$1 = Math.max;\n\t\n\tfunction compareValue(compare) {\n\t  return function(a, b) {\n\t    return compare(\n\t      a.source.value + a.target.value,\n\t      b.source.value + b.target.value\n\t    );\n\t  };\n\t}\n\t\n\tvar chord = function() {\n\t  var padAngle = 0,\n\t      sortGroups = null,\n\t      sortSubgroups = null,\n\t      sortChords = null;\n\t\n\t  function chord(matrix) {\n\t    var n = matrix.length,\n\t        groupSums = [],\n\t        groupIndex = range(n),\n\t        subgroupIndex = [],\n\t        chords = [],\n\t        groups = chords.groups = new Array(n),\n\t        subgroups = new Array(n * n),\n\t        k,\n\t        x,\n\t        x0,\n\t        dx,\n\t        i,\n\t        j;\n\t\n\t    // Compute the sum.\n\t    k = 0, i = -1; while (++i < n) {\n\t      x = 0, j = -1; while (++j < n) {\n\t        x += matrix[i][j];\n\t      }\n\t      groupSums.push(x);\n\t      subgroupIndex.push(range(n));\n\t      k += x;\n\t    }\n\t\n\t    // Sort groups…\n\t    if (sortGroups) groupIndex.sort(function(a, b) {\n\t      return sortGroups(groupSums[a], groupSums[b]);\n\t    });\n\t\n\t    // Sort subgroups…\n\t    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t      d.sort(function(a, b) {\n\t        return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t      });\n\t    });\n\t\n\t    // Convert the sum to scaling factor for [0, 2pi].\n\t    // TODO Allow start and end angle to be specified?\n\t    // TODO Allow padding to be specified as percentage?\n\t    k = max$1(0, tau$3 - padAngle * n) / k;\n\t    dx = k ? padAngle : tau$3 / n;\n\t\n\t    // Compute the start and end angle for each group and subgroup.\n\t    // Note: Opera has a bug reordering object literal properties!\n\t    x = 0, i = -1; while (++i < n) {\n\t      x0 = x, j = -1; while (++j < n) {\n\t        var di = groupIndex[i],\n\t            dj = subgroupIndex[di][j],\n\t            v = matrix[di][dj],\n\t            a0 = x,\n\t            a1 = x += v * k;\n\t        subgroups[dj * n + di] = {\n\t          index: di,\n\t          subindex: dj,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          value: v\n\t        };\n\t      }\n\t      groups[di] = {\n\t        index: di,\n\t        startAngle: x0,\n\t        endAngle: x,\n\t        value: groupSums[di]\n\t      };\n\t      x += dx;\n\t    }\n\t\n\t    // Generate chords for each (non-empty) subgroup-subgroup link.\n\t    i = -1; while (++i < n) {\n\t      j = i - 1; while (++j < n) {\n\t        var source = subgroups[j * n + i],\n\t            target = subgroups[i * n + j];\n\t        if (source.value || target.value) {\n\t          chords.push(source.value < target.value\n\t              ? {source: target, target: source}\n\t              : {source: source, target: target});\n\t        }\n\t      }\n\t    }\n\t\n\t    return sortChords ? chords.sort(sortChords) : chords;\n\t  }\n\t\n\t  chord.padAngle = function(_) {\n\t    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t  };\n\t\n\t  chord.sortGroups = function(_) {\n\t    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t  };\n\t\n\t  chord.sortSubgroups = function(_) {\n\t    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t  };\n\t\n\t  chord.sortChords = function(_) {\n\t    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t  };\n\t\n\t  return chord;\n\t};\n\t\n\tvar slice$5 = Array.prototype.slice;\n\t\n\tvar constant$12 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tfunction defaultSource(d) {\n\t  return d.source;\n\t}\n\t\n\tfunction defaultTarget(d) {\n\t  return d.target;\n\t}\n\t\n\tfunction defaultRadius$1(d) {\n\t  return d.radius;\n\t}\n\t\n\tfunction defaultStartAngle(d) {\n\t  return d.startAngle;\n\t}\n\t\n\tfunction defaultEndAngle(d) {\n\t  return d.endAngle;\n\t}\n\t\n\tvar ribbon = function() {\n\t  var source = defaultSource,\n\t      target = defaultTarget,\n\t      radius = defaultRadius$1,\n\t      startAngle = defaultStartAngle,\n\t      endAngle = defaultEndAngle,\n\t      context = null;\n\t\n\t  function ribbon() {\n\t    var buffer,\n\t        argv = slice$5.call(arguments),\n\t        s = source.apply(this, argv),\n\t        t = target.apply(this, argv),\n\t        sr = +radius.apply(this, (argv[0] = s, argv)),\n\t        sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t        sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t        sx0 = sr * cos(sa0),\n\t        sy0 = sr * sin(sa0),\n\t        tr = +radius.apply(this, (argv[0] = t, argv)),\n\t        ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t    if (!context) context = buffer = path();\n\t\n\t    context.moveTo(sx0, sy0);\n\t    context.arc(0, 0, sr, sa0, sa1);\n\t    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t      context.arc(0, 0, tr, ta0, ta1);\n\t    }\n\t    context.quadraticCurveTo(0, 0, sx0, sy0);\n\t    context.closePath();\n\t\n\t    if (buffer) return context = null, buffer + \"\" || null;\n\t  }\n\t\n\t  ribbon.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n\t  };\n\t\n\t  ribbon.startAngle = function(_) {\n\t    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n\t  };\n\t\n\t  ribbon.endAngle = function(_) {\n\t    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n\t  };\n\t\n\t  ribbon.source = function(_) {\n\t    return arguments.length ? (source = _, ribbon) : source;\n\t  };\n\t\n\t  ribbon.target = function(_) {\n\t    return arguments.length ? (target = _, ribbon) : target;\n\t  };\n\t\n\t  ribbon.context = function(_) {\n\t    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t  };\n\t\n\t  return ribbon;\n\t};\n\t\n\t// Adds floating point numbers with twice the normal precision.\n\t// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t// 305–363 (1997).\n\t// Code adapted from GeographicLib by Charles F. F. Karney,\n\t// http://geographiclib.sourceforge.net/\n\t\n\tvar adder = function() {\n\t  return new Adder;\n\t};\n\t\n\tfunction Adder() {\n\t  this.reset();\n\t}\n\t\n\tAdder.prototype = {\n\t  constructor: Adder,\n\t  reset: function() {\n\t    this.s = // rounded value\n\t    this.t = 0; // exact error\n\t  },\n\t  add: function(y) {\n\t    add$1(temp, y, this.t);\n\t    add$1(this, temp.s, this.s);\n\t    if (this.s) this.t += temp.t;\n\t    else this.s = temp.t;\n\t  },\n\t  valueOf: function() {\n\t    return this.s;\n\t  }\n\t};\n\t\n\tvar temp = new Adder;\n\t\n\tfunction add$1(adder, a, b) {\n\t  var x = adder.s = a + b,\n\t      bv = x - a,\n\t      av = x - bv;\n\t  adder.t = (a - av) + (b - bv);\n\t}\n\t\n\tvar epsilon$4 = 1e-6;\n\tvar epsilon2$2 = 1e-12;\n\tvar pi$4 = Math.PI;\n\tvar halfPi$3 = pi$4 / 2;\n\tvar quarterPi = pi$4 / 4;\n\tvar tau$4 = pi$4 * 2;\n\t\n\tvar degrees$1 = 180 / pi$4;\n\tvar radians = pi$4 / 180;\n\t\n\tvar abs = Math.abs;\n\tvar atan = Math.atan;\n\tvar atan2 = Math.atan2;\n\tvar cos$1 = Math.cos;\n\tvar ceil = Math.ceil;\n\tvar exp = Math.exp;\n\t\n\tvar log$1 = Math.log;\n\tvar pow$1 = Math.pow;\n\tvar sin$1 = Math.sin;\n\tvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\tvar sqrt$1 = Math.sqrt;\n\tvar tan = Math.tan;\n\t\n\tfunction acos(x) {\n\t  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t}\n\t\n\tfunction asin$1(x) {\n\t  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t}\n\t\n\tfunction haversin(x) {\n\t  return (x = sin$1(x / 2)) * x;\n\t}\n\t\n\tfunction noop$2() {}\n\t\n\tfunction streamGeometry(geometry, stream) {\n\t  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t    streamGeometryType[geometry.type](geometry, stream);\n\t  }\n\t}\n\t\n\tvar streamObjectType = {\n\t  Feature: function(feature, stream) {\n\t    streamGeometry(feature.geometry, stream);\n\t  },\n\t  FeatureCollection: function(object, stream) {\n\t    var features = object.features, i = -1, n = features.length;\n\t    while (++i < n) streamGeometry(features[i].geometry, stream);\n\t  }\n\t};\n\t\n\tvar streamGeometryType = {\n\t  Sphere: function(object, stream) {\n\t    stream.sphere();\n\t  },\n\t  Point: function(object, stream) {\n\t    object = object.coordinates;\n\t    stream.point(object[0], object[1], object[2]);\n\t  },\n\t  MultiPoint: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t  },\n\t  LineString: function(object, stream) {\n\t    streamLine(object.coordinates, stream, 0);\n\t  },\n\t  MultiLineString: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamLine(coordinates[i], stream, 0);\n\t  },\n\t  Polygon: function(object, stream) {\n\t    streamPolygon(object.coordinates, stream);\n\t  },\n\t  MultiPolygon: function(object, stream) {\n\t    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t    while (++i < n) streamPolygon(coordinates[i], stream);\n\t  },\n\t  GeometryCollection: function(object, stream) {\n\t    var geometries = object.geometries, i = -1, n = geometries.length;\n\t    while (++i < n) streamGeometry(geometries[i], stream);\n\t  }\n\t};\n\t\n\tfunction streamLine(coordinates, stream, closed) {\n\t  var i = -1, n = coordinates.length - closed, coordinate;\n\t  stream.lineStart();\n\t  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t  stream.lineEnd();\n\t}\n\t\n\tfunction streamPolygon(coordinates, stream) {\n\t  var i = -1, n = coordinates.length;\n\t  stream.polygonStart();\n\t  while (++i < n) streamLine(coordinates[i], stream, 1);\n\t  stream.polygonEnd();\n\t}\n\t\n\tvar geoStream = function(object, stream) {\n\t  if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t    streamObjectType[object.type](object, stream);\n\t  } else {\n\t    streamGeometry(object, stream);\n\t  }\n\t};\n\t\n\tvar areaRingSum = adder();\n\t\n\tvar areaSum = adder();\n\tvar lambda00;\n\tvar phi00;\n\tvar lambda0;\n\tvar cosPhi0;\n\tvar sinPhi0;\n\t\n\tvar areaStream = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaRingSum.reset();\n\t    areaStream.lineStart = areaRingStart;\n\t    areaStream.lineEnd = areaRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    var areaRing = +areaRingSum;\n\t    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t    this.lineStart = this.lineEnd = this.point = noop$2;\n\t  },\n\t  sphere: function() {\n\t    areaSum.add(tau$4);\n\t  }\n\t};\n\t\n\tfunction areaRingStart() {\n\t  areaStream.point = areaPointFirst;\n\t}\n\t\n\tfunction areaRingEnd() {\n\t  areaPoint(lambda00, phi00);\n\t}\n\t\n\tfunction areaPointFirst(lambda, phi) {\n\t  areaStream.point = areaPoint;\n\t  lambda00 = lambda, phi00 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t}\n\t\n\tfunction areaPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t  // Spherical excess E for a spherical triangle with vertices: south pole,\n\t  // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t  var dLambda = lambda - lambda0,\n\t      sdLambda = dLambda >= 0 ? 1 : -1,\n\t      adLambda = sdLambda * dLambda,\n\t      cosPhi = cos$1(phi),\n\t      sinPhi = sin$1(phi),\n\t      k = sinPhi0 * sinPhi,\n\t      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t      v = k * sdLambda * sin$1(adLambda);\n\t  areaRingSum.add(atan2(v, u));\n\t\n\t  // Advance the previous points.\n\t  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t}\n\t\n\tvar area$2 = function(object) {\n\t  areaSum.reset();\n\t  geoStream(object, areaStream);\n\t  return areaSum * 2;\n\t};\n\t\n\tfunction spherical(cartesian) {\n\t  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t}\n\t\n\tfunction cartesian(spherical) {\n\t  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t}\n\t\n\tfunction cartesianDot(a, b) {\n\t  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t}\n\t\n\tfunction cartesianCross(a, b) {\n\t  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t}\n\t\n\t// TODO return a\n\tfunction cartesianAddInPlace(a, b) {\n\t  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t}\n\t\n\tfunction cartesianScale(vector, k) {\n\t  return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t}\n\t\n\t// TODO return d\n\tfunction cartesianNormalizeInPlace(d) {\n\t  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t  d[0] /= l, d[1] /= l, d[2] /= l;\n\t}\n\t\n\tvar lambda0$1;\n\tvar phi0;\n\tvar lambda1;\n\tvar phi1;\n\tvar lambda2;\n\tvar lambda00$1;\n\tvar phi00$1;\n\tvar p0;\n\tvar deltaSum = adder();\n\tvar ranges;\n\tvar range$1;\n\t\n\tvar boundsStream = {\n\t  point: boundsPoint,\n\t  lineStart: boundsLineStart,\n\t  lineEnd: boundsLineEnd,\n\t  polygonStart: function() {\n\t    boundsStream.point = boundsRingPoint;\n\t    boundsStream.lineStart = boundsRingStart;\n\t    boundsStream.lineEnd = boundsRingEnd;\n\t    deltaSum.reset();\n\t    areaStream.polygonStart();\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream.polygonEnd();\n\t    boundsStream.point = boundsPoint;\n\t    boundsStream.lineStart = boundsLineStart;\n\t    boundsStream.lineEnd = boundsLineEnd;\n\t    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t    else if (deltaSum > epsilon$4) phi1 = 90;\n\t    else if (deltaSum < -epsilon$4) phi0 = -90;\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  }\n\t};\n\t\n\tfunction boundsPoint(lambda, phi) {\n\t  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t  if (phi < phi0) phi0 = phi;\n\t  if (phi > phi1) phi1 = phi;\n\t}\n\t\n\tfunction linePoint(lambda, phi) {\n\t  var p = cartesian([lambda * radians, phi * radians]);\n\t  if (p0) {\n\t    var normal = cartesianCross(p0, p),\n\t        equatorial = [normal[1], -normal[0], 0],\n\t        inflection = cartesianCross(equatorial, normal);\n\t    cartesianNormalizeInPlace(inflection);\n\t    inflection = spherical(inflection);\n\t    var delta = lambda - lambda2,\n\t        sign$$1 = delta > 0 ? 1 : -1,\n\t        lambdai = inflection[0] * degrees$1 * sign$$1,\n\t        phii,\n\t        antimeridian = abs(delta) > 180;\n\t    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = inflection[1] * degrees$1;\n\t      if (phii > phi1) phi1 = phii;\n\t    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n\t      phii = -inflection[1] * degrees$1;\n\t      if (phii < phi0) phi0 = phii;\n\t    } else {\n\t      if (phi < phi0) phi0 = phi;\n\t      if (phi > phi1) phi1 = phi;\n\t    }\n\t    if (antimeridian) {\n\t      if (lambda < lambda2) {\n\t        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t      } else {\n\t        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t      }\n\t    } else {\n\t      if (lambda1 >= lambda0$1) {\n\t        if (lambda < lambda0$1) lambda0$1 = lambda;\n\t        if (lambda > lambda1) lambda1 = lambda;\n\t      } else {\n\t        if (lambda > lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      }\n\t    }\n\t  } else {\n\t    boundsPoint(lambda, phi);\n\t  }\n\t  p0 = p, lambda2 = lambda;\n\t}\n\t\n\tfunction boundsLineStart() {\n\t  boundsStream.point = linePoint;\n\t}\n\t\n\tfunction boundsLineEnd() {\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  boundsStream.point = boundsPoint;\n\t  p0 = null;\n\t}\n\t\n\tfunction boundsRingPoint(lambda, phi) {\n\t  if (p0) {\n\t    var delta = lambda - lambda2;\n\t    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t  } else {\n\t    lambda00$1 = lambda, phi00$1 = phi;\n\t  }\n\t  areaStream.point(lambda, phi);\n\t  linePoint(lambda, phi);\n\t}\n\t\n\tfunction boundsRingStart() {\n\t  areaStream.lineStart();\n\t}\n\t\n\tfunction boundsRingEnd() {\n\t  boundsRingPoint(lambda00$1, phi00$1);\n\t  areaStream.lineEnd();\n\t  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t  range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t  p0 = null;\n\t}\n\t\n\t// Finds the left-right distance between two longitudes.\n\t// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t// the distance between ±180° to be 360°.\n\tfunction angle(lambda0, lambda1) {\n\t  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t}\n\t\n\tfunction rangeCompare(a, b) {\n\t  return a[0] - b[0];\n\t}\n\t\n\tfunction rangeContains(range, x) {\n\t  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t}\n\t\n\tvar bounds = function(feature) {\n\t  var i, n, a, b, merged, deltaMax, delta;\n\t\n\t  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t  ranges = [];\n\t  geoStream(feature, boundsStream);\n\t\n\t  // First, sort ranges by their minimum longitudes.\n\t  if (n = ranges.length) {\n\t    ranges.sort(rangeCompare);\n\t\n\t    // Then, merge any ranges that overlap.\n\t    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t      b = ranges[i];\n\t      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t      } else {\n\t        merged.push(a = b);\n\t      }\n\t    }\n\t\n\t    // Finally, find the largest gap between the merged ranges.\n\t    // The final bounding box will be the inverse of this gap.\n\t    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t      b = merged[i];\n\t      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t    }\n\t  }\n\t\n\t  ranges = range$1 = null;\n\t\n\t  return lambda0$1 === Infinity || phi0 === Infinity\n\t      ? [[NaN, NaN], [NaN, NaN]]\n\t      : [[lambda0$1, phi0], [lambda1, phi1]];\n\t};\n\t\n\tvar W0;\n\tvar W1;\n\tvar X0;\n\tvar Y0;\n\tvar Z0;\n\tvar X1;\n\tvar Y1;\n\tvar Z1;\n\tvar X2;\n\tvar Y2;\n\tvar Z2;\n\tvar lambda00$2;\n\tvar phi00$2;\n\tvar x0;\n\tvar y0;\n\tvar z0; // previous point\n\t\n\tvar centroidStream = {\n\t  sphere: noop$2,\n\t  point: centroidPoint,\n\t  lineStart: centroidLineStart,\n\t  lineEnd: centroidLineEnd,\n\t  polygonStart: function() {\n\t    centroidStream.lineStart = centroidRingStart;\n\t    centroidStream.lineEnd = centroidRingEnd;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream.lineStart = centroidLineStart;\n\t    centroidStream.lineEnd = centroidLineEnd;\n\t  }\n\t};\n\t\n\t// Arithmetic mean of Cartesian vectors.\n\tfunction centroidPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t}\n\t\n\tfunction centroidPointCartesian(x, y, z) {\n\t  ++W0;\n\t  X0 += (x - X0) / W0;\n\t  Y0 += (y - Y0) / W0;\n\t  Z0 += (z - Z0) / W0;\n\t}\n\t\n\tfunction centroidLineStart() {\n\t  centroidStream.point = centroidLinePointFirst;\n\t}\n\t\n\tfunction centroidLinePointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidStream.point = centroidLinePoint;\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLinePoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidLineEnd() {\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\t// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t// J. Applied Mechanics 42, 239 (1975).\n\tfunction centroidRingStart() {\n\t  centroidStream.point = centroidRingPointFirst;\n\t}\n\t\n\tfunction centroidRingEnd() {\n\t  centroidRingPoint(lambda00$2, phi00$2);\n\t  centroidStream.point = centroidPoint;\n\t}\n\t\n\tfunction centroidRingPointFirst(lambda, phi) {\n\t  lambda00$2 = lambda, phi00$2 = phi;\n\t  lambda *= radians, phi *= radians;\n\t  centroidStream.point = centroidRingPoint;\n\t  var cosPhi = cos$1(phi);\n\t  x0 = cosPhi * cos$1(lambda);\n\t  y0 = cosPhi * sin$1(lambda);\n\t  z0 = sin$1(phi);\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tfunction centroidRingPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var cosPhi = cos$1(phi),\n\t      x = cosPhi * cos$1(lambda),\n\t      y = cosPhi * sin$1(lambda),\n\t      z = sin$1(phi),\n\t      cx = y0 * z - z0 * y,\n\t      cy = z0 * x - x0 * z,\n\t      cz = x0 * y - y0 * x,\n\t      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t      u = x0 * x + y0 * y + z0 * z,\n\t      v = m && -acos(u) / m, // area weight\n\t      w = atan2(m, u); // line weight\n\t  X2 += v * cx;\n\t  Y2 += v * cy;\n\t  Z2 += v * cz;\n\t  W1 += w;\n\t  X1 += w * (x0 + (x0 = x));\n\t  Y1 += w * (y0 + (y0 = y));\n\t  Z1 += w * (z0 + (z0 = z));\n\t  centroidPointCartesian(x0, y0, z0);\n\t}\n\t\n\tvar centroid$1 = function(object) {\n\t  W0 = W1 =\n\t  X0 = Y0 = Z0 =\n\t  X1 = Y1 = Z1 =\n\t  X2 = Y2 = Z2 = 0;\n\t  geoStream(object, centroidStream);\n\t\n\t  var x = X2,\n\t      y = Y2,\n\t      z = Z2,\n\t      m = x * x + y * y + z * z;\n\t\n\t  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t  if (m < epsilon2$2) {\n\t    x = X1, y = Y1, z = Z1;\n\t    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t    m = x * x + y * y + z * z;\n\t    // If the feature still has an undefined ccentroid, then return.\n\t    if (m < epsilon2$2) return [NaN, NaN];\n\t  }\n\t\n\t  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t};\n\t\n\tvar constant$13 = function(x) {\n\t  return function() {\n\t    return x;\n\t  };\n\t};\n\t\n\tvar compose = function(a, b) {\n\t\n\t  function compose(x, y) {\n\t    return x = a(x, y), b(x[0], x[1]);\n\t  }\n\t\n\t  if (a.invert && b.invert) compose.invert = function(x, y) {\n\t    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t  };\n\t\n\t  return compose;\n\t};\n\t\n\tfunction rotationIdentity(lambda, phi) {\n\t  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t}\n\t\n\trotationIdentity.invert = rotationIdentity;\n\t\n\tfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t    : rotationLambda(deltaLambda))\n\t    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t    : rotationIdentity);\n\t}\n\t\n\tfunction forwardRotationLambda(deltaLambda) {\n\t  return function(lambda, phi) {\n\t    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  };\n\t}\n\t\n\tfunction rotationLambda(deltaLambda) {\n\t  var rotation = forwardRotationLambda(deltaLambda);\n\t  rotation.invert = forwardRotationLambda(-deltaLambda);\n\t  return rotation;\n\t}\n\t\n\tfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n\t  var cosDeltaPhi = cos$1(deltaPhi),\n\t      sinDeltaPhi = sin$1(deltaPhi),\n\t      cosDeltaGamma = cos$1(deltaGamma),\n\t      sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t  function rotation(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t    return [\n\t      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t    ];\n\t  }\n\t\n\t  rotation.invert = function(lambda, phi) {\n\t    var cosPhi = cos$1(phi),\n\t        x = cos$1(lambda) * cosPhi,\n\t        y = sin$1(lambda) * cosPhi,\n\t        z = sin$1(phi),\n\t        k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t    return [\n\t      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t    ];\n\t  };\n\t\n\t  return rotation;\n\t}\n\t\n\tvar rotation = function(rotate) {\n\t  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t  function forward(coordinates) {\n\t    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  }\n\t\n\t  forward.invert = function(coordinates) {\n\t    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t  };\n\t\n\t  return forward;\n\t};\n\t\n\t// Generates a circle centered at [0°, 0°], with a given radius and precision.\n\tfunction circleStream(stream, radius, delta, direction, t0, t1) {\n\t  if (!delta) return;\n\t  var cosRadius = cos$1(radius),\n\t      sinRadius = sin$1(radius),\n\t      step = direction * delta;\n\t  if (t0 == null) {\n\t    t0 = radius + direction * tau$4;\n\t    t1 = radius - step / 2;\n\t  } else {\n\t    t0 = circleRadius(cosRadius, t0);\n\t    t1 = circleRadius(cosRadius, t1);\n\t    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t  }\n\t  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t    stream.point(point[0], point[1]);\n\t  }\n\t}\n\t\n\t// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\tfunction circleRadius(cosRadius, point) {\n\t  point = cartesian(point), point[0] -= cosRadius;\n\t  cartesianNormalizeInPlace(point);\n\t  var radius = acos(-point[1]);\n\t  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t}\n\t\n\tvar circle$1 = function() {\n\t  var center = constant$13([0, 0]),\n\t      radius = constant$13(90),\n\t      precision = constant$13(6),\n\t      ring,\n\t      rotate,\n\t      stream = {point: point};\n\t\n\t  function point(x, y) {\n\t    ring.push(x = rotate(x, y));\n\t    x[0] *= degrees$1, x[1] *= degrees$1;\n\t  }\n\t\n\t  function circle() {\n\t    var c = center.apply(this, arguments),\n\t        r = radius.apply(this, arguments) * radians,\n\t        p = precision.apply(this, arguments) * radians;\n\t    ring = [];\n\t    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t    circleStream(stream, r, p, 1);\n\t    c = {type: \"Polygon\", coordinates: [ring]};\n\t    ring = rotate = null;\n\t    return c;\n\t  }\n\t\n\t  circle.center = function(_) {\n\t    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n\t  };\n\t\n\t  circle.radius = function(_) {\n\t    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n\t  };\n\t\n\t  circle.precision = function(_) {\n\t    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n\t  };\n\t\n\t  return circle;\n\t};\n\t\n\tvar clipBuffer = function() {\n\t  var lines = [],\n\t      line;\n\t  return {\n\t    point: function(x, y) {\n\t      line.push([x, y]);\n\t    },\n\t    lineStart: function() {\n\t      lines.push(line = []);\n\t    },\n\t    lineEnd: noop$2,\n\t    rejoin: function() {\n\t      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t    },\n\t    result: function() {\n\t      var result = lines;\n\t      lines = [];\n\t      line = null;\n\t      return result;\n\t    }\n\t  };\n\t};\n\t\n\tvar clipLine = function(a, b, x0, y0, x1, y1) {\n\t  var ax = a[0],\n\t      ay = a[1],\n\t      bx = b[0],\n\t      by = b[1],\n\t      t0 = 0,\n\t      t1 = 1,\n\t      dx = bx - ax,\n\t      dy = by - ay,\n\t      r;\n\t\n\t  r = x0 - ax;\n\t  if (!dx && r > 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dx > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = x1 - ax;\n\t  if (!dx && r < 0) return;\n\t  r /= dx;\n\t  if (dx < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dx > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  r = y0 - ay;\n\t  if (!dy && r > 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  } else if (dy > 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  }\n\t\n\t  r = y1 - ay;\n\t  if (!dy && r < 0) return;\n\t  r /= dy;\n\t  if (dy < 0) {\n\t    if (r > t1) return;\n\t    if (r > t0) t0 = r;\n\t  } else if (dy > 0) {\n\t    if (r < t0) return;\n\t    if (r < t1) t1 = r;\n\t  }\n\t\n\t  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t  return true;\n\t};\n\t\n\tvar pointEqual = function(a, b) {\n\t  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t};\n\t\n\tfunction Intersection(point, points, other, entry) {\n\t  this.x = point;\n\t  this.z = points;\n\t  this.o = other; // another intersection\n\t  this.e = entry; // is an entry?\n\t  this.v = false; // visited\n\t  this.n = this.p = null; // next & previous\n\t}\n\t\n\t// A generalized polygon clipping algorithm: given a polygon that has been cut\n\t// into its visible line segments, and rejoins the segments by interpolating\n\t// along the clip edge.\n\tvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n\t  var subject = [],\n\t      clip = [],\n\t      i,\n\t      n;\n\t\n\t  segments.forEach(function(segment) {\n\t    if ((n = segment.length - 1) <= 0) return;\n\t    var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t    // If the first and last points of a segment are coincident, then treat as a\n\t    // closed ring. TODO if all rings are closed, then the winding order of the\n\t    // exterior ring should be checked.\n\t    if (pointEqual(p0, p1)) {\n\t      stream.lineStart();\n\t      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t      stream.lineEnd();\n\t      return;\n\t    }\n\t\n\t    subject.push(x = new Intersection(p0, segment, null, true));\n\t    clip.push(x.o = new Intersection(p0, null, x, false));\n\t    subject.push(x = new Intersection(p1, segment, null, false));\n\t    clip.push(x.o = new Intersection(p1, null, x, true));\n\t  });\n\t\n\t  if (!subject.length) return;\n\t\n\t  clip.sort(compareIntersection);\n\t  link$1(subject);\n\t  link$1(clip);\n\t\n\t  for (i = 0, n = clip.length; i < n; ++i) {\n\t    clip[i].e = startInside = !startInside;\n\t  }\n\t\n\t  var start = subject[0],\n\t      points,\n\t      point;\n\t\n\t  while (1) {\n\t    // Find first unvisited intersection.\n\t    var current = start,\n\t        isSubject = true;\n\t    while (current.v) if ((current = current.n) === start) return;\n\t    points = current.z;\n\t    stream.lineStart();\n\t    do {\n\t      current.v = current.o.v = true;\n\t      if (current.e) {\n\t        if (isSubject) {\n\t          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.n.x, 1, stream);\n\t        }\n\t        current = current.n;\n\t      } else {\n\t        if (isSubject) {\n\t          points = current.p.z;\n\t          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t        } else {\n\t          interpolate(current.x, current.p.x, -1, stream);\n\t        }\n\t        current = current.p;\n\t      }\n\t      current = current.o;\n\t      points = current.z;\n\t      isSubject = !isSubject;\n\t    } while (!current.v);\n\t    stream.lineEnd();\n\t  }\n\t};\n\t\n\tfunction link$1(array) {\n\t  if (!(n = array.length)) return;\n\t  var n,\n\t      i = 0,\n\t      a = array[0],\n\t      b;\n\t  while (++i < n) {\n\t    a.n = b = array[i];\n\t    b.p = a;\n\t    a = b;\n\t  }\n\t  a.n = b = array[0];\n\t  b.p = a;\n\t}\n\t\n\tvar clipMax = 1e9;\n\tvar clipMin = -clipMax;\n\t\n\t// TODO Use d3-polygon’s polygonContains here for the ring check?\n\t// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\tfunction clipExtent(x0, y0, x1, y1) {\n\t\n\t  function visible(x, y) {\n\t    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t  }\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    var a = 0, a1 = 0;\n\t    if (from == null\n\t        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t        || comparePoint(from, to) < 0 ^ direction > 0) {\n\t      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t      while ((a = (a + direction + 4) % 4) !== a1);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function corner(p, direction) {\n\t    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t  }\n\t\n\t  function compareIntersection(a, b) {\n\t    return comparePoint(a.x, b.x);\n\t  }\n\t\n\t  function comparePoint(a, b) {\n\t    var ca = corner(a, 1),\n\t        cb = corner(b, 1);\n\t    return ca !== cb ? ca - cb\n\t        : ca === 0 ? b[1] - a[1]\n\t        : ca === 1 ? a[0] - b[0]\n\t        : ca === 2 ? a[1] - b[1]\n\t        : b[0] - a[0];\n\t  }\n\t\n\t  return function(stream) {\n\t    var activeStream = stream,\n\t        bufferStream = clipBuffer(),\n\t        segments,\n\t        polygon,\n\t        ring,\n\t        x__, y__, v__, // first point\n\t        x_, y_, v_, // previous point\n\t        first,\n\t        clean;\n\t\n\t    var clipStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: polygonStart,\n\t      polygonEnd: polygonEnd\n\t    };\n\t\n\t    function point(x, y) {\n\t      if (visible(x, y)) activeStream.point(x, y);\n\t    }\n\t\n\t    function polygonInside() {\n\t      var winding = 0;\n\t\n\t      for (var i = 0, n = polygon.length; i < n; ++i) {\n\t        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t        }\n\t      }\n\t\n\t      return winding;\n\t    }\n\t\n\t    // Buffer geometry within a polygon and then clip it en masse.\n\t    function polygonStart() {\n\t      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t    }\n\t\n\t    function polygonEnd() {\n\t      var startInside = polygonInside(),\n\t          cleanInside = clean && startInside,\n\t          visible = (segments = merge(segments)).length;\n\t      if (cleanInside || visible) {\n\t        stream.polygonStart();\n\t        if (cleanInside) {\n\t          stream.lineStart();\n\t          interpolate(null, null, 1, stream);\n\t          stream.lineEnd();\n\t        }\n\t        if (visible) {\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t        }\n\t        stream.polygonEnd();\n\t      }\n\t      activeStream = stream, segments = polygon = ring = null;\n\t    }\n\t\n\t    function lineStart() {\n\t      clipStream.point = linePoint;\n\t      if (polygon) polygon.push(ring = []);\n\t      first = true;\n\t      v_ = false;\n\t      x_ = y_ = NaN;\n\t    }\n\t\n\t    // TODO rather than special-case polygons, simply handle them separately.\n\t    // Ideally, coincident intersection points should be jittered to avoid\n\t    // clipping issues.\n\t    function lineEnd() {\n\t      if (segments) {\n\t        linePoint(x__, y__);\n\t        if (v__ && v_) bufferStream.rejoin();\n\t        segments.push(bufferStream.result());\n\t      }\n\t      clipStream.point = point;\n\t      if (v_) activeStream.lineEnd();\n\t    }\n\t\n\t    function linePoint(x, y) {\n\t      var v = visible(x, y);\n\t      if (polygon) ring.push([x, y]);\n\t      if (first) {\n\t        x__ = x, y__ = y, v__ = v;\n\t        first = false;\n\t        if (v) {\n\t          activeStream.lineStart();\n\t          activeStream.point(x, y);\n\t        }\n\t      } else {\n\t        if (v && v_) activeStream.point(x, y);\n\t        else {\n\t          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t          if (clipLine(a, b, x0, y0, x1, y1)) {\n\t            if (!v_) {\n\t              activeStream.lineStart();\n\t              activeStream.point(a[0], a[1]);\n\t            }\n\t            activeStream.point(b[0], b[1]);\n\t            if (!v) activeStream.lineEnd();\n\t            clean = false;\n\t          } else if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t            clean = false;\n\t          }\n\t        }\n\t      }\n\t      x_ = x, y_ = y, v_ = v;\n\t    }\n\t\n\t    return clipStream;\n\t  };\n\t}\n\t\n\tvar extent$1 = function() {\n\t  var x0 = 0,\n\t      y0 = 0,\n\t      x1 = 960,\n\t      y1 = 500,\n\t      cache,\n\t      cacheStream,\n\t      clip;\n\t\n\t  return clip = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t    },\n\t    extent: function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t    }\n\t  };\n\t};\n\t\n\tvar lengthSum = adder();\n\tvar lambda0$2;\n\tvar sinPhi0$1;\n\tvar cosPhi0$1;\n\t\n\tvar lengthStream = {\n\t  sphere: noop$2,\n\t  point: noop$2,\n\t  lineStart: lengthLineStart,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2\n\t};\n\t\n\tfunction lengthLineStart() {\n\t  lengthStream.point = lengthPointFirst;\n\t  lengthStream.lineEnd = lengthLineEnd;\n\t}\n\t\n\tfunction lengthLineEnd() {\n\t  lengthStream.point = lengthStream.lineEnd = noop$2;\n\t}\n\t\n\tfunction lengthPointFirst(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t  lengthStream.point = lengthPoint;\n\t}\n\t\n\tfunction lengthPoint(lambda, phi) {\n\t  lambda *= radians, phi *= radians;\n\t  var sinPhi = sin$1(phi),\n\t      cosPhi = cos$1(phi),\n\t      delta = abs(lambda - lambda0$2),\n\t      cosDelta = cos$1(delta),\n\t      sinDelta = sin$1(delta),\n\t      x = cosPhi * sinDelta,\n\t      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t}\n\t\n\tvar length$2 = function(object) {\n\t  lengthSum.reset();\n\t  geoStream(object, lengthStream);\n\t  return +lengthSum;\n\t};\n\t\n\tvar coordinates = [null, null];\n\tvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\t\n\tvar distance = function(a, b) {\n\t  coordinates[0] = a;\n\t  coordinates[1] = b;\n\t  return length$2(object$1);\n\t};\n\t\n\tfunction graticuleX(y0, y1, dy) {\n\t  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t  return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticuleY(x0, x1, dx) {\n\t  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t  return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t}\n\t\n\tfunction graticule() {\n\t  var x1, x0, X1, X0,\n\t      y1, y0, Y1, Y0,\n\t      dx = 10, dy = dx, DX = 90, DY = 360,\n\t      x, y, X, Y,\n\t      precision = 2.5;\n\t\n\t  function graticule() {\n\t    return {type: \"MultiLineString\", coordinates: lines()};\n\t  }\n\t\n\t  function lines() {\n\t    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t  }\n\t\n\t  graticule.lines = function() {\n\t    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t  };\n\t\n\t  graticule.outline = function() {\n\t    return {\n\t      type: \"Polygon\",\n\t      coordinates: [\n\t        X(X0).concat(\n\t        Y(Y1).slice(1),\n\t        X(X1).reverse().slice(1),\n\t        Y(Y0).reverse().slice(1))\n\t      ]\n\t    };\n\t  };\n\t\n\t  graticule.extent = function(_) {\n\t    if (!arguments.length) return graticule.extentMinor();\n\t    return graticule.extentMajor(_).extentMinor(_);\n\t  };\n\t\n\t  graticule.extentMajor = function(_) {\n\t    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t    X0 = +_[0][0], X1 = +_[1][0];\n\t    Y0 = +_[0][1], Y1 = +_[1][1];\n\t    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.extentMinor = function(_) {\n\t    if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t    x0 = +_[0][0], x1 = +_[1][0];\n\t    y0 = +_[0][1], y1 = +_[1][1];\n\t    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t    return graticule.precision(precision);\n\t  };\n\t\n\t  graticule.step = function(_) {\n\t    if (!arguments.length) return graticule.stepMinor();\n\t    return graticule.stepMajor(_).stepMinor(_);\n\t  };\n\t\n\t  graticule.stepMajor = function(_) {\n\t    if (!arguments.length) return [DX, DY];\n\t    DX = +_[0], DY = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.stepMinor = function(_) {\n\t    if (!arguments.length) return [dx, dy];\n\t    dx = +_[0], dy = +_[1];\n\t    return graticule;\n\t  };\n\t\n\t  graticule.precision = function(_) {\n\t    if (!arguments.length) return precision;\n\t    precision = +_;\n\t    x = graticuleX(y0, y1, 90);\n\t    y = graticuleY(x0, x1, precision);\n\t    X = graticuleX(Y0, Y1, 90);\n\t    Y = graticuleY(X0, X1, precision);\n\t    return graticule;\n\t  };\n\t\n\t  return graticule\n\t      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t}\n\t\n\tfunction graticule10() {\n\t  return graticule()();\n\t}\n\t\n\tvar interpolate$2 = function(a, b) {\n\t  var x0 = a[0] * radians,\n\t      y0 = a[1] * radians,\n\t      x1 = b[0] * radians,\n\t      y1 = b[1] * radians,\n\t      cy0 = cos$1(y0),\n\t      sy0 = sin$1(y0),\n\t      cy1 = cos$1(y1),\n\t      sy1 = sin$1(y1),\n\t      kx0 = cy0 * cos$1(x0),\n\t      ky0 = cy0 * sin$1(x0),\n\t      kx1 = cy1 * cos$1(x1),\n\t      ky1 = cy1 * sin$1(x1),\n\t      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t      k = sin$1(d);\n\t\n\t  var interpolate = d ? function(t) {\n\t    var B = sin$1(t *= d) / k,\n\t        A = sin$1(d - t) / k,\n\t        x = A * kx0 + B * kx1,\n\t        y = A * ky0 + B * ky1,\n\t        z = A * sy0 + B * sy1;\n\t    return [\n\t      atan2(y, x) * degrees$1,\n\t      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t    ];\n\t  } : function() {\n\t    return [x0 * degrees$1, y0 * degrees$1];\n\t  };\n\t\n\t  interpolate.distance = d;\n\t\n\t  return interpolate;\n\t};\n\t\n\tvar identity$7 = function(x) {\n\t  return x;\n\t};\n\t\n\tvar areaSum$1 = adder();\n\tvar areaRingSum$1 = adder();\n\tvar x00;\n\tvar y00;\n\tvar x0$1;\n\tvar y0$1;\n\t\n\tvar areaStream$1 = {\n\t  point: noop$2,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: function() {\n\t    areaStream$1.lineStart = areaRingStart$1;\n\t    areaStream$1.lineEnd = areaRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t    areaSum$1.add(abs(areaRingSum$1));\n\t    areaRingSum$1.reset();\n\t  },\n\t  result: function() {\n\t    var area = areaSum$1 / 2;\n\t    areaSum$1.reset();\n\t    return area;\n\t  }\n\t};\n\t\n\tfunction areaRingStart$1() {\n\t  areaStream$1.point = areaPointFirst$1;\n\t}\n\t\n\tfunction areaPointFirst$1(x, y) {\n\t  areaStream$1.point = areaPoint$1;\n\t  x00 = x0$1 = x, y00 = y0$1 = y;\n\t}\n\t\n\tfunction areaPoint$1(x, y) {\n\t  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t  x0$1 = x, y0$1 = y;\n\t}\n\t\n\tfunction areaRingEnd$1() {\n\t  areaPoint$1(x00, y00);\n\t}\n\t\n\tvar x0$2 = Infinity;\n\tvar y0$2 = x0$2;\n\tvar x1 = -x0$2;\n\tvar y1 = x1;\n\t\n\tvar boundsStream$1 = {\n\t  point: boundsPoint$1,\n\t  lineStart: noop$2,\n\t  lineEnd: noop$2,\n\t  polygonStart: noop$2,\n\t  polygonEnd: noop$2,\n\t  result: function() {\n\t    var bounds = [[x0$2, y0$2], [x1, y1]];\n\t    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t    return bounds;\n\t  }\n\t};\n\t\n\tfunction boundsPoint$1(x, y) {\n\t  if (x < x0$2) x0$2 = x;\n\t  if (x > x1) x1 = x;\n\t  if (y < y0$2) y0$2 = y;\n\t  if (y > y1) y1 = y;\n\t}\n\t\n\t// TODO Enforce positive area for exterior, negative area for interior?\n\t\n\tvar X0$1 = 0;\n\tvar Y0$1 = 0;\n\tvar Z0$1 = 0;\n\tvar X1$1 = 0;\n\tvar Y1$1 = 0;\n\tvar Z1$1 = 0;\n\tvar X2$1 = 0;\n\tvar Y2$1 = 0;\n\tvar Z2$1 = 0;\n\tvar x00$1;\n\tvar y00$1;\n\tvar x0$3;\n\tvar y0$3;\n\t\n\tvar centroidStream$1 = {\n\t  point: centroidPoint$1,\n\t  lineStart: centroidLineStart$1,\n\t  lineEnd: centroidLineEnd$1,\n\t  polygonStart: function() {\n\t    centroidStream$1.lineStart = centroidRingStart$1;\n\t    centroidStream$1.lineEnd = centroidRingEnd$1;\n\t  },\n\t  polygonEnd: function() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t    centroidStream$1.lineStart = centroidLineStart$1;\n\t    centroidStream$1.lineEnd = centroidLineEnd$1;\n\t  },\n\t  result: function() {\n\t    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t        : [NaN, NaN];\n\t    X0$1 = Y0$1 = Z0$1 =\n\t    X1$1 = Y1$1 = Z1$1 =\n\t    X2$1 = Y2$1 = Z2$1 = 0;\n\t    return centroid;\n\t  }\n\t};\n\t\n\tfunction centroidPoint$1(x, y) {\n\t  X0$1 += x;\n\t  Y0$1 += y;\n\t  ++Z0$1;\n\t}\n\t\n\tfunction centroidLineStart$1() {\n\t  centroidStream$1.point = centroidPointFirstLine;\n\t}\n\t\n\tfunction centroidPointFirstLine(x, y) {\n\t  centroidStream$1.point = centroidPointLine;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidPointLine(x, y) {\n\t  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction centroidLineEnd$1() {\n\t  centroidStream$1.point = centroidPoint$1;\n\t}\n\t\n\tfunction centroidRingStart$1() {\n\t  centroidStream$1.point = centroidPointFirstRing;\n\t}\n\t\n\tfunction centroidRingEnd$1() {\n\t  centroidPointRing(x00$1, y00$1);\n\t}\n\t\n\tfunction centroidPointFirstRing(x, y) {\n\t  centroidStream$1.point = centroidPointRing;\n\t  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t}\n\t\n\tfunction centroidPointRing(x, y) {\n\t  var dx = x - x0$3,\n\t      dy = y - y0$3,\n\t      z = sqrt$1(dx * dx + dy * dy);\n\t\n\t  X1$1 += z * (x0$3 + x) / 2;\n\t  Y1$1 += z * (y0$3 + y) / 2;\n\t  Z1$1 += z;\n\t\n\t  z = y0$3 * x - x0$3 * y;\n\t  X2$1 += z * (x0$3 + x);\n\t  Y2$1 += z * (y0$3 + y);\n\t  Z2$1 += z * 3;\n\t  centroidPoint$1(x0$3 = x, y0$3 = y);\n\t}\n\t\n\tfunction PathContext(context) {\n\t  this._context = context;\n\t}\n\t\n\tPathContext.prototype = {\n\t  _radius: 4.5,\n\t  pointRadius: function(_) {\n\t    return this._radius = _, this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._context.closePath();\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._context.moveTo(x, y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._context.lineTo(x, y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._context.moveTo(x + this._radius, y);\n\t        this._context.arc(x, y, this._radius, 0, tau$4);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: noop$2\n\t};\n\t\n\tfunction PathString() {\n\t  this._string = [];\n\t}\n\t\n\tPathString.prototype = {\n\t  _circle: circle$2(4.5),\n\t  pointRadius: function(_) {\n\t    return this._circle = circle$2(_), this;\n\t  },\n\t  polygonStart: function() {\n\t    this._line = 0;\n\t  },\n\t  polygonEnd: function() {\n\t    this._line = NaN;\n\t  },\n\t  lineStart: function() {\n\t    this._point = 0;\n\t  },\n\t  lineEnd: function() {\n\t    if (this._line === 0) this._string.push(\"Z\");\n\t    this._point = NaN;\n\t  },\n\t  point: function(x, y) {\n\t    switch (this._point) {\n\t      case 0: {\n\t        this._string.push(\"M\", x, \",\", y);\n\t        this._point = 1;\n\t        break;\n\t      }\n\t      case 1: {\n\t        this._string.push(\"L\", x, \",\", y);\n\t        break;\n\t      }\n\t      default: {\n\t        this._string.push(\"M\", x, \",\", y, this._circle);\n\t        break;\n\t      }\n\t    }\n\t  },\n\t  result: function() {\n\t    if (this._string.length) {\n\t      var result = this._string.join(\"\");\n\t      this._string = [];\n\t      return result;\n\t    }\n\t  }\n\t};\n\t\n\tfunction circle$2(radius) {\n\t  return \"m0,\" + radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t      + \"z\";\n\t}\n\t\n\tvar index$3 = function(projection, context) {\n\t  var pointRadius = 4.5,\n\t      projectionStream,\n\t      contextStream;\n\t\n\t  function path(object) {\n\t    if (object) {\n\t      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t      geoStream(object, projectionStream(contextStream));\n\t    }\n\t    return contextStream.result();\n\t  }\n\t\n\t  path.area = function(object) {\n\t    geoStream(object, projectionStream(areaStream$1));\n\t    return areaStream$1.result();\n\t  };\n\t\n\t  path.bounds = function(object) {\n\t    geoStream(object, projectionStream(boundsStream$1));\n\t    return boundsStream$1.result();\n\t  };\n\t\n\t  path.centroid = function(object) {\n\t    geoStream(object, projectionStream(centroidStream$1));\n\t    return centroidStream$1.result();\n\t  };\n\t\n\t  path.projection = function(_) {\n\t    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n\t  };\n\t\n\t  path.context = function(_) {\n\t    if (!arguments.length) return context;\n\t    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n\t    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t    return path;\n\t  };\n\t\n\t  path.pointRadius = function(_) {\n\t    if (!arguments.length) return pointRadius;\n\t    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t    return path;\n\t  };\n\t\n\t  return path.projection(projection).context(context);\n\t};\n\t\n\tvar sum$2 = adder();\n\t\n\tvar polygonContains = function(polygon, point) {\n\t  var lambda = point[0],\n\t      phi = point[1],\n\t      normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t      angle = 0,\n\t      winding = 0;\n\t\n\t  sum$2.reset();\n\t\n\t  for (var i = 0, n = polygon.length; i < n; ++i) {\n\t    if (!(m = (ring = polygon[i]).length)) continue;\n\t    var ring,\n\t        m,\n\t        point0 = ring[m - 1],\n\t        lambda0 = point0[0],\n\t        phi0 = point0[1] / 2 + quarterPi,\n\t        sinPhi0 = sin$1(phi0),\n\t        cosPhi0 = cos$1(phi0);\n\t\n\t    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t      var point1 = ring[j],\n\t          lambda1 = point1[0],\n\t          phi1 = point1[1] / 2 + quarterPi,\n\t          sinPhi1 = sin$1(phi1),\n\t          cosPhi1 = cos$1(phi1),\n\t          delta = lambda1 - lambda0,\n\t          sign$$1 = delta >= 0 ? 1 : -1,\n\t          absDelta = sign$$1 * delta,\n\t          antimeridian = absDelta > pi$4,\n\t          k = sinPhi0 * sinPhi1;\n\t\n\t      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\t\n\t      // Are the longitudes either side of the point’s meridian (lambda),\n\t      // and are the latitudes smaller than the parallel (phi)?\n\t      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t        cartesianNormalizeInPlace(arc);\n\t        var intersection = cartesianCross(normal, arc);\n\t        cartesianNormalizeInPlace(intersection);\n\t        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  // First, determine whether the South pole is inside or outside:\n\t  //\n\t  // It is inside if:\n\t  // * the polygon winds around it in a clockwise direction.\n\t  // * the polygon does not (cumulatively) wind around it, but has a negative\n\t  //   (counter-clockwise) area.\n\t  //\n\t  // Second, count the (signed) number of times a segment crosses a lambda\n\t  // from the point to the South pole.  If it is zero, then the point is the\n\t  // same side as the South pole.\n\t\n\t  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t};\n\t\n\tvar clip = function(pointVisible, clipLine, interpolate, start) {\n\t  return function(rotate, sink) {\n\t    var line = clipLine(sink),\n\t        rotatedStart = rotate.invert(start[0], start[1]),\n\t        ringBuffer = clipBuffer(),\n\t        ringSink = clipLine(ringBuffer),\n\t        polygonStarted = false,\n\t        polygon,\n\t        segments,\n\t        ring;\n\t\n\t    var clip = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        clip.point = pointRing;\n\t        clip.lineStart = ringStart;\n\t        clip.lineEnd = ringEnd;\n\t        segments = [];\n\t        polygon = [];\n\t      },\n\t      polygonEnd: function() {\n\t        clip.point = point;\n\t        clip.lineStart = lineStart;\n\t        clip.lineEnd = lineEnd;\n\t        segments = merge(segments);\n\t        var startInside = polygonContains(polygon, rotatedStart);\n\t        if (segments.length) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t        } else if (startInside) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t        }\n\t        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t        segments = polygon = null;\n\t      },\n\t      sphere: function() {\n\t        sink.polygonStart();\n\t        sink.lineStart();\n\t        interpolate(null, null, 1, sink);\n\t        sink.lineEnd();\n\t        sink.polygonEnd();\n\t      }\n\t    };\n\t\n\t    function point(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t    }\n\t\n\t    function pointLine(lambda, phi) {\n\t      var point = rotate(lambda, phi);\n\t      line.point(point[0], point[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      clip.point = pointLine;\n\t      line.lineStart();\n\t    }\n\t\n\t    function lineEnd() {\n\t      clip.point = point;\n\t      line.lineEnd();\n\t    }\n\t\n\t    function pointRing(lambda, phi) {\n\t      ring.push([lambda, phi]);\n\t      var point = rotate(lambda, phi);\n\t      ringSink.point(point[0], point[1]);\n\t    }\n\t\n\t    function ringStart() {\n\t      ringSink.lineStart();\n\t      ring = [];\n\t    }\n\t\n\t    function ringEnd() {\n\t      pointRing(ring[0][0], ring[0][1]);\n\t      ringSink.lineEnd();\n\t\n\t      var clean = ringSink.clean(),\n\t          ringSegments = ringBuffer.result(),\n\t          i, n = ringSegments.length, m,\n\t          segment,\n\t          point;\n\t\n\t      ring.pop();\n\t      polygon.push(ring);\n\t      ring = null;\n\t\n\t      if (!n) return;\n\t\n\t      // No intersections.\n\t      if (clean & 1) {\n\t        segment = ringSegments[0];\n\t        if ((m = segment.length - 1) > 0) {\n\t          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t          sink.lineStart();\n\t          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t          sink.lineEnd();\n\t        }\n\t        return;\n\t      }\n\t\n\t      // Rejoin connected segments.\n\t      // TODO reuse ringBuffer.rejoin()?\n\t      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t      segments.push(ringSegments.filter(validSegment));\n\t    }\n\t\n\t    return clip;\n\t  };\n\t};\n\t\n\tfunction validSegment(segment) {\n\t  return segment.length > 1;\n\t}\n\t\n\t// Intersections are sorted along the clip edge. For both antimeridian cutting\n\t// and circle clipping, the same comparison is used.\n\tfunction compareIntersection(a, b) {\n\t  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t}\n\t\n\tvar clipAntimeridian = clip(\n\t  function() { return true; },\n\t  clipAntimeridianLine,\n\t  clipAntimeridianInterpolate,\n\t  [-pi$4, -halfPi$3]\n\t);\n\t\n\t// Takes a line and cuts into visible segments. Return values: 0 - there were\n\t// intersections or the line was empty; 1 - no intersections; 2 - there were\n\t// intersections, and the first and last segments should be rejoined.\n\tfunction clipAntimeridianLine(stream) {\n\t  var lambda0 = NaN,\n\t      phi0 = NaN,\n\t      sign0 = NaN,\n\t      clean; // no intersections\n\t\n\t  return {\n\t    lineStart: function() {\n\t      stream.lineStart();\n\t      clean = 1;\n\t    },\n\t    point: function(lambda1, phi1) {\n\t      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t          delta = abs(lambda1 - lambda0);\n\t      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        stream.point(lambda1, phi0);\n\t        clean = 0;\n\t      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t        stream.point(sign0, phi0);\n\t        stream.lineEnd();\n\t        stream.lineStart();\n\t        stream.point(sign1, phi0);\n\t        clean = 0;\n\t      }\n\t      stream.point(lambda0 = lambda1, phi0 = phi1);\n\t      sign0 = sign1;\n\t    },\n\t    lineEnd: function() {\n\t      stream.lineEnd();\n\t      lambda0 = phi0 = NaN;\n\t    },\n\t    clean: function() {\n\t      return 2 - clean; // if intersections, rejoin first and last segments\n\t    }\n\t  };\n\t}\n\t\n\tfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t  var cosPhi0,\n\t      cosPhi1,\n\t      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t  return abs(sinLambda0Lambda1) > epsilon$4\n\t      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t      : (phi0 + phi1) / 2;\n\t}\n\t\n\tfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n\t  var phi;\n\t  if (from == null) {\n\t    phi = direction * halfPi$3;\n\t    stream.point(-pi$4, phi);\n\t    stream.point(0, phi);\n\t    stream.point(pi$4, phi);\n\t    stream.point(pi$4, 0);\n\t    stream.point(pi$4, -phi);\n\t    stream.point(0, -phi);\n\t    stream.point(-pi$4, -phi);\n\t    stream.point(-pi$4, 0);\n\t    stream.point(-pi$4, phi);\n\t  } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t    phi = direction * lambda / 2;\n\t    stream.point(-lambda, phi);\n\t    stream.point(0, phi);\n\t    stream.point(lambda, phi);\n\t  } else {\n\t    stream.point(to[0], to[1]);\n\t  }\n\t}\n\t\n\tvar clipCircle = function(radius, delta) {\n\t  var cr = cos$1(radius),\n\t      smallRadius = cr > 0,\n\t      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t  function interpolate(from, to, direction, stream) {\n\t    circleStream(stream, radius, delta, direction, from, to);\n\t  }\n\t\n\t  function visible(lambda, phi) {\n\t    return cos$1(lambda) * cos$1(phi) > cr;\n\t  }\n\t\n\t  // Takes a line and cuts into visible segments. Return values used for polygon\n\t  // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t  // intersections 2 - there were intersections, and the first and last segments\n\t  // should be rejoined.\n\t  function clipLine(stream) {\n\t    var point0, // previous point\n\t        c0, // code for previous point\n\t        v0, // visibility of previous point\n\t        v00, // visibility of first point\n\t        clean; // no intersections\n\t    return {\n\t      lineStart: function() {\n\t        v00 = v0 = false;\n\t        clean = 1;\n\t      },\n\t      point: function(lambda, phi) {\n\t        var point1 = [lambda, phi],\n\t            point2,\n\t            v = visible(lambda, phi),\n\t            c = smallRadius\n\t              ? v ? 0 : code(lambda, phi)\n\t              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t        // Handle degeneracies.\n\t        // TODO ignore if not clipping polygons.\n\t        if (v !== v0) {\n\t          point2 = intersect(point0, point1);\n\t          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t            point1[0] += epsilon$4;\n\t            point1[1] += epsilon$4;\n\t            v = visible(point1[0], point1[1]);\n\t          }\n\t        }\n\t        if (v !== v0) {\n\t          clean = 0;\n\t          if (v) {\n\t            // outside going in\n\t            stream.lineStart();\n\t            point2 = intersect(point1, point0);\n\t            stream.point(point2[0], point2[1]);\n\t          } else {\n\t            // inside going out\n\t            point2 = intersect(point0, point1);\n\t            stream.point(point2[0], point2[1]);\n\t            stream.lineEnd();\n\t          }\n\t          point0 = point2;\n\t        } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t          var t;\n\t          // If the codes for two points are different, or are both zero,\n\t          // and there this segment intersects with the small circle.\n\t          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t            clean = 0;\n\t            if (smallRadius) {\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t            } else {\n\t              stream.point(t[1][0], t[1][1]);\n\t              stream.lineEnd();\n\t              stream.lineStart();\n\t              stream.point(t[0][0], t[0][1]);\n\t            }\n\t          }\n\t        }\n\t        if (v && (!point0 || !pointEqual(point0, point1))) {\n\t          stream.point(point1[0], point1[1]);\n\t        }\n\t        point0 = point1, v0 = v, c0 = c;\n\t      },\n\t      lineEnd: function() {\n\t        if (v0) stream.lineEnd();\n\t        point0 = null;\n\t      },\n\t      // Rejoin first and last segments if there were intersections and the first\n\t      // and last points were visible.\n\t      clean: function() {\n\t        return clean | ((v00 && v0) << 1);\n\t      }\n\t    };\n\t  }\n\t\n\t  // Intersects the great circle between a and b with the clip circle.\n\t  function intersect(a, b, two) {\n\t    var pa = cartesian(a),\n\t        pb = cartesian(b);\n\t\n\t    // We have two planes, n1.p = d1 and n2.p = d2.\n\t    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t    var n1 = [1, 0, 0], // normal\n\t        n2 = cartesianCross(pa, pb),\n\t        n2n2 = cartesianDot(n2, n2),\n\t        n1n2 = n2[0], // cartesianDot(n1, n2),\n\t        determinant = n2n2 - n1n2 * n1n2;\n\t\n\t    // Two polar points.\n\t    if (!determinant) return !two && a;\n\t\n\t    var c1 =  cr * n2n2 / determinant,\n\t        c2 = -cr * n1n2 / determinant,\n\t        n1xn2 = cartesianCross(n1, n2),\n\t        A = cartesianScale(n1, c1),\n\t        B = cartesianScale(n2, c2);\n\t    cartesianAddInPlace(A, B);\n\t\n\t    // Solve |p(t)|^2 = 1.\n\t    var u = n1xn2,\n\t        w = cartesianDot(A, u),\n\t        uu = cartesianDot(u, u),\n\t        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t    if (t2 < 0) return;\n\t\n\t    var t = sqrt$1(t2),\n\t        q = cartesianScale(u, (-w - t) / uu);\n\t    cartesianAddInPlace(q, A);\n\t    q = spherical(q);\n\t\n\t    if (!two) return q;\n\t\n\t    // Two intersection points.\n\t    var lambda0 = a[0],\n\t        lambda1 = b[0],\n\t        phi0 = a[1],\n\t        phi1 = b[1],\n\t        z;\n\t\n\t    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t    var delta = lambda1 - lambda0,\n\t        polar = abs(delta - pi$4) < epsilon$4,\n\t        meridian = polar || delta < epsilon$4;\n\t\n\t    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t    // Check that the first point is between a and b.\n\t    if (meridian\n\t        ? polar\n\t          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t          : phi0 <= q[1] && q[1] <= phi1\n\t        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t      var q1 = cartesianScale(u, (-w + t) / uu);\n\t      cartesianAddInPlace(q1, A);\n\t      return [q, spherical(q1)];\n\t    }\n\t  }\n\t\n\t  // Generates a 4-bit vector representing the location of a point relative to\n\t  // the small circle's bounding box.\n\t  function code(lambda, phi) {\n\t    var r = smallRadius ? radius : pi$4 - radius,\n\t        code = 0;\n\t    if (lambda < -r) code |= 1; // left\n\t    else if (lambda > r) code |= 2; // right\n\t    if (phi < -r) code |= 4; // below\n\t    else if (phi > r) code |= 8; // above\n\t    return code;\n\t  }\n\t\n\t  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t};\n\t\n\tvar transform$1 = function(methods) {\n\t  return {\n\t    stream: transformer(methods)\n\t  };\n\t};\n\t\n\tfunction transformer(methods) {\n\t  return function(stream) {\n\t    var s = new TransformStream;\n\t    for (var key in methods) s[key] = methods[key];\n\t    s.stream = stream;\n\t    return s;\n\t  };\n\t}\n\t\n\tfunction TransformStream() {}\n\t\n\tTransformStream.prototype = {\n\t  constructor: TransformStream,\n\t  point: function(x, y) { this.stream.point(x, y); },\n\t  sphere: function() { this.stream.sphere(); },\n\t  lineStart: function() { this.stream.lineStart(); },\n\t  lineEnd: function() { this.stream.lineEnd(); },\n\t  polygonStart: function() { this.stream.polygonStart(); },\n\t  polygonEnd: function() { this.stream.polygonEnd(); }\n\t};\n\t\n\tfunction fitExtent(projection, extent, object) {\n\t  var w = extent[1][0] - extent[0][0],\n\t      h = extent[1][1] - extent[0][1],\n\t      clip = projection.clipExtent && projection.clipExtent();\n\t\n\t  projection\n\t      .scale(150)\n\t      .translate([0, 0]);\n\t\n\t  if (clip != null) projection.clipExtent(null);\n\t\n\t  geoStream(object, projection.stream(boundsStream$1));\n\t\n\t  var b = boundsStream$1.result(),\n\t      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t  if (clip != null) projection.clipExtent(clip);\n\t\n\t  return projection\n\t      .scale(k * 150)\n\t      .translate([x, y]);\n\t}\n\t\n\tfunction fitSize(projection, size, object) {\n\t  return fitExtent(projection, [[0, 0], size], object);\n\t}\n\t\n\tvar maxDepth = 16;\n\tvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\t\n\tvar resample = function(project, delta2) {\n\t  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t};\n\t\n\tfunction resampleNone(project) {\n\t  return transformer({\n\t    point: function(x, y) {\n\t      x = project(x, y);\n\t      this.stream.point(x[0], x[1]);\n\t    }\n\t  });\n\t}\n\t\n\tfunction resample$1(project, delta2) {\n\t\n\t  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t    var dx = x1 - x0,\n\t        dy = y1 - y0,\n\t        d2 = dx * dx + dy * dy;\n\t    if (d2 > 4 * delta2 && depth--) {\n\t      var a = a0 + a1,\n\t          b = b0 + b1,\n\t          c = c0 + c1,\n\t          m = sqrt$1(a * a + b * b + c * c),\n\t          phi2 = asin$1(c /= m),\n\t          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t          p = project(lambda2, phi2),\n\t          x2 = p[0],\n\t          y2 = p[1],\n\t          dx2 = x2 - x0,\n\t          dy2 = y2 - y0,\n\t          dz = dy * dx2 - dx * dy2;\n\t      if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t        stream.point(x2, y2);\n\t        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t      }\n\t    }\n\t  }\n\t  return function(stream) {\n\t    var lambda00, x00, y00, a00, b00, c00, // first point\n\t        lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t    var resampleStream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t    };\n\t\n\t    function point(x, y) {\n\t      x = project(x, y);\n\t      stream.point(x[0], x[1]);\n\t    }\n\t\n\t    function lineStart() {\n\t      x0 = NaN;\n\t      resampleStream.point = linePoint;\n\t      stream.lineStart();\n\t    }\n\t\n\t    function linePoint(lambda, phi) {\n\t      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t      stream.point(x0, y0);\n\t    }\n\t\n\t    function lineEnd() {\n\t      resampleStream.point = point;\n\t      stream.lineEnd();\n\t    }\n\t\n\t    function ringStart() {\n\t      lineStart();\n\t      resampleStream.point = ringPoint;\n\t      resampleStream.lineEnd = ringEnd;\n\t    }\n\t\n\t    function ringPoint(lambda, phi) {\n\t      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t      resampleStream.point = linePoint;\n\t    }\n\t\n\t    function ringEnd() {\n\t      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t      resampleStream.lineEnd = lineEnd;\n\t      lineEnd();\n\t    }\n\t\n\t    return resampleStream;\n\t  };\n\t}\n\t\n\tvar transformRadians = transformer({\n\t  point: function(x, y) {\n\t    this.stream.point(x * radians, y * radians);\n\t  }\n\t});\n\t\n\tfunction projection(project) {\n\t  return projectionMutator(function() { return project; })();\n\t}\n\t\n\tfunction projectionMutator(projectAt) {\n\t  var project,\n\t      k = 150, // scale\n\t      x = 480, y = 250, // translate\n\t      dx, dy, lambda = 0, phi = 0, // center\n\t      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t      theta = null, preclip = clipAntimeridian, // clip angle\n\t      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t      cache,\n\t      cacheStream;\n\t\n\t  function projection(point) {\n\t    point = projectRotate(point[0] * radians, point[1] * radians);\n\t    return [point[0] * k + dx, dy - point[1] * k];\n\t  }\n\t\n\t  function invert(point) {\n\t    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t    return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t  }\n\t\n\t  function projectTransform(x, y) {\n\t    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t  }\n\t\n\t  projection.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t  };\n\t\n\t  projection.clipAngle = function(_) {\n\t    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t  };\n\t\n\t  projection.clipExtent = function(_) {\n\t    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t  };\n\t\n\t  projection.scale = function(_) {\n\t    return arguments.length ? (k = +_, recenter()) : k;\n\t  };\n\t\n\t  projection.translate = function(_) {\n\t    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t  };\n\t\n\t  projection.center = function(_) {\n\t    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t  };\n\t\n\t  projection.rotate = function(_) {\n\t    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t  };\n\t\n\t  projection.precision = function(_) {\n\t    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t  };\n\t\n\t  projection.fitExtent = function(extent, object) {\n\t    return fitExtent(projection, extent, object);\n\t  };\n\t\n\t  projection.fitSize = function(size, object) {\n\t    return fitSize(projection, size, object);\n\t  };\n\t\n\t  function recenter() {\n\t    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t    var center = project(lambda, phi);\n\t    dx = x - center[0] * k;\n\t    dy = y + center[1] * k;\n\t    return reset();\n\t  }\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return function() {\n\t    project = projectAt.apply(this, arguments);\n\t    projection.invert = project.invert && invert;\n\t    return recenter();\n\t  };\n\t}\n\t\n\tfunction conicProjection(projectAt) {\n\t  var phi0 = 0,\n\t      phi1 = pi$4 / 3,\n\t      m = projectionMutator(projectAt),\n\t      p = m(phi0, phi1);\n\t\n\t  p.parallels = function(_) {\n\t    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t  };\n\t\n\t  return p;\n\t}\n\t\n\tfunction cylindricalEqualAreaRaw(phi0) {\n\t  var cosPhi0 = cos$1(phi0);\n\t\n\t  function forward(lambda, phi) {\n\t    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n\t  }\n\t\n\t  forward.invert = function(x, y) {\n\t    return [x / cosPhi0, asin$1(y * cosPhi0)];\n\t  };\n\t\n\t  return forward;\n\t}\n\t\n\tfunction conicEqualAreaRaw(y0, y1) {\n\t  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\t\n\t  // Are the parallels symmetrical around the Equator?\n\t  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\t\n\t  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\t\n\t  function project(x, y) {\n\t    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var r0y = r0 - y;\n\t    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEqualArea = function() {\n\t  return conicProjection(conicEqualAreaRaw)\n\t      .scale(155.424)\n\t      .center([0, 33.6442]);\n\t};\n\t\n\tvar albers = function() {\n\t  return conicEqualArea()\n\t      .parallels([29.5, 45.5])\n\t      .scale(1070)\n\t      .translate([480, 250])\n\t      .rotate([96, 0])\n\t      .center([-0.6, 38.7]);\n\t};\n\t\n\t// The projections must have mutually exclusive clip regions on the sphere,\n\t// as this will avoid emitting interleaving lines and polygons.\n\tfunction multiplex(streams) {\n\t  var n = streams.length;\n\t  return {\n\t    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t  };\n\t}\n\t\n\t// A composite projection for the United States, configured by default for\n\t// 960×500. The projection also works quite well at 960×600 if you change the\n\t// scale to 1285 and adjust the translate accordingly. The set of standard\n\t// parallels for each region comes from USGS, which is published here:\n\t// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\tvar albersUsa = function() {\n\t  var cache,\n\t      cacheStream,\n\t      lower48 = albers(), lower48Point,\n\t      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t  function albersUsa(coordinates) {\n\t    var x = coordinates[0], y = coordinates[1];\n\t    return point = null,\n\t        (lower48Point.point(x, y), point)\n\t        || (alaskaPoint.point(x, y), point)\n\t        || (hawaiiPoint.point(x, y), point);\n\t  }\n\t\n\t  albersUsa.invert = function(coordinates) {\n\t    var k = lower48.scale(),\n\t        t = lower48.translate(),\n\t        x = (coordinates[0] - t[0]) / k,\n\t        y = (coordinates[1] - t[1]) / k;\n\t    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t        : lower48).invert(coordinates);\n\t  };\n\t\n\t  albersUsa.stream = function(stream) {\n\t    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t  };\n\t\n\t  albersUsa.precision = function(_) {\n\t    if (!arguments.length) return lower48.precision();\n\t    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.scale = function(_) {\n\t    if (!arguments.length) return lower48.scale();\n\t    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t    return albersUsa.translate(lower48.translate());\n\t  };\n\t\n\t  albersUsa.translate = function(_) {\n\t    if (!arguments.length) return lower48.translate();\n\t    var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t    lower48Point = lower48\n\t        .translate(_)\n\t        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t        .stream(pointStream);\n\t\n\t    alaskaPoint = alaska\n\t        .translate([x - 0.307 * k, y + 0.201 * k])\n\t        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    hawaiiPoint = hawaii\n\t        .translate([x - 0.205 * k, y + 0.212 * k])\n\t        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t        .stream(pointStream);\n\t\n\t    return reset();\n\t  };\n\t\n\t  albersUsa.fitExtent = function(extent, object) {\n\t    return fitExtent(albersUsa, extent, object);\n\t  };\n\t\n\t  albersUsa.fitSize = function(size, object) {\n\t    return fitSize(albersUsa, size, object);\n\t  };\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return albersUsa;\n\t  }\n\t\n\t  return albersUsa.scale(1070);\n\t};\n\t\n\tfunction azimuthalRaw(scale) {\n\t  return function(x, y) {\n\t    var cx = cos$1(x),\n\t        cy = cos$1(y),\n\t        k = scale(cx * cy);\n\t    return [\n\t      k * cy * sin$1(x),\n\t      k * sin$1(y)\n\t    ];\n\t  }\n\t}\n\t\n\tfunction azimuthalInvert(angle) {\n\t  return function(x, y) {\n\t    var z = sqrt$1(x * x + y * y),\n\t        c = angle(z),\n\t        sc = sin$1(c),\n\t        cc = cos$1(c);\n\t    return [\n\t      atan2(x * sc, z * cc),\n\t      asin$1(z && y * sc / z)\n\t    ];\n\t  }\n\t}\n\t\n\tvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t  return sqrt$1(2 / (1 + cxcy));\n\t});\n\t\n\tazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * asin$1(z / 2);\n\t});\n\t\n\tvar azimuthalEqualArea = function() {\n\t  return projection(azimuthalEqualAreaRaw)\n\t      .scale(124.75)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t  return (c = acos(c)) && c / sin$1(c);\n\t});\n\t\n\tazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t  return z;\n\t});\n\t\n\tvar azimuthalEquidistant = function() {\n\t  return projection(azimuthalEquidistantRaw)\n\t      .scale(79.4188)\n\t      .clipAngle(180 - 1e-3);\n\t};\n\t\n\tfunction mercatorRaw(lambda, phi) {\n\t  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t}\n\t\n\tmercatorRaw.invert = function(x, y) {\n\t  return [x, 2 * atan(exp(y)) - halfPi$3];\n\t};\n\t\n\tvar mercator = function() {\n\t  return mercatorProjection(mercatorRaw)\n\t      .scale(961 / tau$4);\n\t};\n\t\n\tfunction mercatorProjection(project) {\n\t  var m = projection(project),\n\t      scale = m.scale,\n\t      translate = m.translate,\n\t      clipExtent = m.clipExtent,\n\t      clipAuto;\n\t\n\t  m.scale = function(_) {\n\t    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t  };\n\t\n\t  m.translate = function(_) {\n\t    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t  };\n\t\n\t  m.clipExtent = function(_) {\n\t    if (!arguments.length) return clipAuto ? null : clipExtent();\n\t    if (clipAuto = _ == null) {\n\t      var k = pi$4 * scale(),\n\t          t = translate();\n\t      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t    }\n\t    clipExtent(_);\n\t    return m;\n\t  };\n\t\n\t  return m.clipExtent(null);\n\t}\n\t\n\tfunction tany(y) {\n\t  return tan((halfPi$3 + y) / 2);\n\t}\n\t\n\tfunction conicConformalRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t      f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t  if (!n) return mercatorRaw;\n\t\n\t  function project(x, y) {\n\t    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t    var r = f / pow$1(tany(y), n);\n\t    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicConformal = function() {\n\t  return conicProjection(conicConformalRaw)\n\t      .scale(109.5)\n\t      .parallels([30, 30]);\n\t};\n\t\n\tfunction equirectangularRaw(lambda, phi) {\n\t  return [lambda, phi];\n\t}\n\t\n\tequirectangularRaw.invert = equirectangularRaw;\n\t\n\tvar equirectangular = function() {\n\t  return projection(equirectangularRaw)\n\t      .scale(152.63);\n\t};\n\t\n\tfunction conicEquidistantRaw(y0, y1) {\n\t  var cy0 = cos$1(y0),\n\t      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t      g = cy0 / n + y0;\n\t\n\t  if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t  function project(x, y) {\n\t    var gy = g - y, nx = n * x;\n\t    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t  }\n\t\n\t  project.invert = function(x, y) {\n\t    var gy = g - y;\n\t    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t  };\n\t\n\t  return project;\n\t}\n\t\n\tvar conicEquidistant = function() {\n\t  return conicProjection(conicEquidistantRaw)\n\t      .scale(131.154)\n\t      .center([0, 13.9389]);\n\t};\n\t\n\tfunction gnomonicRaw(x, y) {\n\t  var cy = cos$1(y), k = cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tgnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\tvar gnomonic = function() {\n\t  return projection(gnomonicRaw)\n\t      .scale(144.049)\n\t      .clipAngle(60);\n\t};\n\t\n\tfunction scaleTranslate(kx, ky, tx, ty) {\n\t  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n\t    point: function(x, y) {\n\t      this.stream.point(x * kx + tx, y * ky + ty);\n\t    }\n\t  });\n\t}\n\t\n\tvar identity$8 = function() {\n\t  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n\t      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n\t      cache,\n\t      cacheStream,\n\t      projection;\n\t\n\t  function reset() {\n\t    cache = cacheStream = null;\n\t    return projection;\n\t  }\n\t\n\t  return projection = {\n\t    stream: function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n\t    },\n\t    clipExtent: function(_) {\n\t      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    },\n\t    scale: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n\t    },\n\t    translate: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n\t    },\n\t    reflectX: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n\t    },\n\t    reflectY: function(_) {\n\t      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n\t    },\n\t    fitExtent: function(extent, object) {\n\t      return fitExtent(projection, extent, object);\n\t    },\n\t    fitSize: function(size, object) {\n\t      return fitSize(projection, size, object);\n\t    }\n\t  };\n\t};\n\t\n\tfunction orthographicRaw(x, y) {\n\t  return [cos$1(y) * sin$1(x), sin$1(y)];\n\t}\n\t\n\torthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\tvar orthographic = function() {\n\t  return projection(orthographicRaw)\n\t      .scale(249.5)\n\t      .clipAngle(90 + epsilon$4);\n\t};\n\t\n\tfunction stereographicRaw(x, y) {\n\t  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t  return [cy * sin$1(x) / k, sin$1(y) / k];\n\t}\n\t\n\tstereographicRaw.invert = azimuthalInvert(function(z) {\n\t  return 2 * atan(z);\n\t});\n\t\n\tvar stereographic = function() {\n\t  return projection(stereographicRaw)\n\t      .scale(250)\n\t      .clipAngle(142);\n\t};\n\t\n\tfunction transverseMercatorRaw(lambda, phi) {\n\t  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t}\n\t\n\ttransverseMercatorRaw.invert = function(x, y) {\n\t  return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t};\n\t\n\tvar transverseMercator = function() {\n\t  var m = mercatorProjection(transverseMercatorRaw),\n\t      center = m.center,\n\t      rotate = m.rotate;\n\t\n\t  m.center = function(_) {\n\t    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t  };\n\t\n\t  m.rotate = function(_) {\n\t    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t  };\n\t\n\t  return rotate([0, 0, 90])\n\t      .scale(159.155);\n\t};\n\t\n\texports.version = version;\n\texports.bisect = bisectRight;\n\texports.bisectRight = bisectRight;\n\texports.bisectLeft = bisectLeft;\n\texports.ascending = ascending;\n\texports.bisector = bisector;\n\texports.descending = descending;\n\texports.deviation = deviation;\n\texports.extent = extent;\n\texports.histogram = histogram;\n\texports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\texports.thresholdScott = scott;\n\texports.thresholdSturges = sturges;\n\texports.max = max;\n\texports.mean = mean;\n\texports.median = median;\n\texports.merge = merge;\n\texports.min = min;\n\texports.pairs = pairs;\n\texports.permute = permute;\n\texports.quantile = threshold;\n\texports.range = range;\n\texports.scan = scan;\n\texports.shuffle = shuffle;\n\texports.sum = sum;\n\texports.ticks = ticks;\n\texports.tickStep = tickStep;\n\texports.transpose = transpose;\n\texports.variance = variance;\n\texports.zip = zip;\n\texports.entries = entries;\n\texports.keys = keys;\n\texports.values = values;\n\texports.map = map$1;\n\texports.set = set;\n\texports.nest = nest;\n\texports.randomUniform = uniform;\n\texports.randomNormal = normal;\n\texports.randomLogNormal = logNormal;\n\texports.randomBates = bates;\n\texports.randomIrwinHall = irwinHall;\n\texports.randomExponential = exponential;\n\texports.easeLinear = linear;\n\texports.easeQuad = quadInOut;\n\texports.easeQuadIn = quadIn;\n\texports.easeQuadOut = quadOut;\n\texports.easeQuadInOut = quadInOut;\n\texports.easeCubic = cubicInOut;\n\texports.easeCubicIn = cubicIn;\n\texports.easeCubicOut = cubicOut;\n\texports.easeCubicInOut = cubicInOut;\n\texports.easePoly = polyInOut;\n\texports.easePolyIn = polyIn;\n\texports.easePolyOut = polyOut;\n\texports.easePolyInOut = polyInOut;\n\texports.easeSin = sinInOut;\n\texports.easeSinIn = sinIn;\n\texports.easeSinOut = sinOut;\n\texports.easeSinInOut = sinInOut;\n\texports.easeExp = expInOut;\n\texports.easeExpIn = expIn;\n\texports.easeExpOut = expOut;\n\texports.easeExpInOut = expInOut;\n\texports.easeCircle = circleInOut;\n\texports.easeCircleIn = circleIn;\n\texports.easeCircleOut = circleOut;\n\texports.easeCircleInOut = circleInOut;\n\texports.easeBounce = bounceOut;\n\texports.easeBounceIn = bounceIn;\n\texports.easeBounceOut = bounceOut;\n\texports.easeBounceInOut = bounceInOut;\n\texports.easeBack = backInOut;\n\texports.easeBackIn = backIn;\n\texports.easeBackOut = backOut;\n\texports.easeBackInOut = backInOut;\n\texports.easeElastic = elasticOut;\n\texports.easeElasticIn = elasticIn;\n\texports.easeElasticOut = elasticOut;\n\texports.easeElasticInOut = elasticInOut;\n\texports.polygonArea = area;\n\texports.polygonCentroid = centroid;\n\texports.polygonHull = hull;\n\texports.polygonContains = contains;\n\texports.polygonLength = length$1;\n\texports.path = path;\n\texports.quadtree = quadtree;\n\texports.queue = queue;\n\texports.arc = arc;\n\texports.area = area$1;\n\texports.line = line;\n\texports.pie = pie;\n\texports.radialArea = radialArea;\n\texports.radialLine = radialLine$1;\n\texports.symbol = symbol;\n\texports.symbols = symbols;\n\texports.symbolCircle = circle;\n\texports.symbolCross = cross$1;\n\texports.symbolDiamond = diamond;\n\texports.symbolSquare = square;\n\texports.symbolStar = star;\n\texports.symbolTriangle = triangle;\n\texports.symbolWye = wye;\n\texports.curveBasisClosed = basisClosed;\n\texports.curveBasisOpen = basisOpen;\n\texports.curveBasis = basis;\n\texports.curveBundle = bundle;\n\texports.curveCardinalClosed = cardinalClosed;\n\texports.curveCardinalOpen = cardinalOpen;\n\texports.curveCardinal = cardinal;\n\texports.curveCatmullRomClosed = catmullRomClosed;\n\texports.curveCatmullRomOpen = catmullRomOpen;\n\texports.curveCatmullRom = catmullRom;\n\texports.curveLinearClosed = linearClosed;\n\texports.curveLinear = curveLinear;\n\texports.curveMonotoneX = monotoneX;\n\texports.curveMonotoneY = monotoneY;\n\texports.curveNatural = natural;\n\texports.curveStep = step;\n\texports.curveStepAfter = stepAfter;\n\texports.curveStepBefore = stepBefore;\n\texports.stack = stack;\n\texports.stackOffsetExpand = expand;\n\texports.stackOffsetNone = none;\n\texports.stackOffsetSilhouette = silhouette;\n\texports.stackOffsetWiggle = wiggle;\n\texports.stackOrderAscending = ascending$1;\n\texports.stackOrderDescending = descending$2;\n\texports.stackOrderInsideOut = insideOut;\n\texports.stackOrderNone = none$1;\n\texports.stackOrderReverse = reverse;\n\texports.color = color;\n\texports.rgb = rgb;\n\texports.hsl = hsl;\n\texports.lab = lab;\n\texports.hcl = hcl;\n\texports.cubehelix = cubehelix;\n\texports.interpolate = interpolate;\n\texports.interpolateArray = array$1;\n\texports.interpolateDate = date;\n\texports.interpolateNumber = interpolateNumber;\n\texports.interpolateObject = object;\n\texports.interpolateRound = interpolateRound;\n\texports.interpolateString = interpolateString;\n\texports.interpolateTransformCss = interpolateTransformCss;\n\texports.interpolateTransformSvg = interpolateTransformSvg;\n\texports.interpolateZoom = interpolateZoom;\n\texports.interpolateRgb = interpolateRgb;\n\texports.interpolateRgbBasis = rgbBasis;\n\texports.interpolateRgbBasisClosed = rgbBasisClosed;\n\texports.interpolateHsl = hsl$2;\n\texports.interpolateHslLong = hslLong;\n\texports.interpolateLab = lab$1;\n\texports.interpolateHcl = hcl$2;\n\texports.interpolateHclLong = hclLong;\n\texports.interpolateCubehelix = cubehelix$2;\n\texports.interpolateCubehelixLong = cubehelixLong;\n\texports.interpolateBasis = basis$2;\n\texports.interpolateBasisClosed = basisClosed$1;\n\texports.quantize = quantize;\n\texports.dispatch = dispatch;\n\texports.dsvFormat = dsv;\n\texports.csvParse = csvParse;\n\texports.csvParseRows = csvParseRows;\n\texports.csvFormat = csvFormat;\n\texports.csvFormatRows = csvFormatRows;\n\texports.tsvParse = tsvParse;\n\texports.tsvParseRows = tsvParseRows;\n\texports.tsvFormat = tsvFormat;\n\texports.tsvFormatRows = tsvFormatRows;\n\texports.request = request;\n\texports.html = html;\n\texports.json = json;\n\texports.text = text;\n\texports.xml = xml;\n\texports.csv = csv$1;\n\texports.tsv = tsv$1;\n\texports.now = now;\n\texports.timer = timer;\n\texports.timerFlush = timerFlush;\n\texports.timeout = timeout$1;\n\texports.interval = interval$1;\n\texports.timeInterval = newInterval;\n\texports.timeMillisecond = millisecond;\n\texports.timeMilliseconds = milliseconds;\n\texports.timeSecond = second;\n\texports.timeSeconds = seconds;\n\texports.timeMinute = minute;\n\texports.timeMinutes = minutes;\n\texports.timeHour = hour;\n\texports.timeHours = hours;\n\texports.timeDay = day;\n\texports.timeDays = days;\n\texports.timeWeek = sunday;\n\texports.timeWeeks = sundays;\n\texports.timeSunday = sunday;\n\texports.timeSundays = sundays;\n\texports.timeMonday = monday;\n\texports.timeMondays = mondays;\n\texports.timeTuesday = tuesday;\n\texports.timeTuesdays = tuesdays;\n\texports.timeWednesday = wednesday;\n\texports.timeWednesdays = wednesdays;\n\texports.timeThursday = thursday;\n\texports.timeThursdays = thursdays;\n\texports.timeFriday = friday;\n\texports.timeFridays = fridays;\n\texports.timeSaturday = saturday;\n\texports.timeSaturdays = saturdays;\n\texports.timeMonth = month;\n\texports.timeMonths = months;\n\texports.timeYear = year;\n\texports.timeYears = years;\n\texports.utcMillisecond = millisecond;\n\texports.utcMilliseconds = milliseconds;\n\texports.utcSecond = second;\n\texports.utcSeconds = seconds;\n\texports.utcMinute = utcMinute;\n\texports.utcMinutes = utcMinutes;\n\texports.utcHour = utcHour;\n\texports.utcHours = utcHours;\n\texports.utcDay = utcDay;\n\texports.utcDays = utcDays;\n\texports.utcWeek = utcSunday;\n\texports.utcWeeks = utcSundays;\n\texports.utcSunday = utcSunday;\n\texports.utcSundays = utcSundays;\n\texports.utcMonday = utcMonday;\n\texports.utcMondays = utcMondays;\n\texports.utcTuesday = utcTuesday;\n\texports.utcTuesdays = utcTuesdays;\n\texports.utcWednesday = utcWednesday;\n\texports.utcWednesdays = utcWednesdays;\n\texports.utcThursday = utcThursday;\n\texports.utcThursdays = utcThursdays;\n\texports.utcFriday = utcFriday;\n\texports.utcFridays = utcFridays;\n\texports.utcSaturday = utcSaturday;\n\texports.utcSaturdays = utcSaturdays;\n\texports.utcMonth = utcMonth;\n\texports.utcMonths = utcMonths;\n\texports.utcYear = utcYear;\n\texports.utcYears = utcYears;\n\texports.formatLocale = formatLocale;\n\texports.formatDefaultLocale = defaultLocale;\n\texports.formatSpecifier = formatSpecifier;\n\texports.precisionFixed = precisionFixed;\n\texports.precisionPrefix = precisionPrefix;\n\texports.precisionRound = precisionRound;\n\texports.isoFormat = formatIso;\n\texports.isoParse = parseIso;\n\texports.timeFormatLocale = formatLocale$1;\n\texports.timeFormatDefaultLocale = defaultLocale$1;\n\texports.scaleBand = band;\n\texports.scalePoint = point$4;\n\texports.scaleIdentity = identity$4;\n\texports.scaleLinear = linear$2;\n\texports.scaleLog = log;\n\texports.scaleOrdinal = ordinal;\n\texports.scaleImplicit = implicit;\n\texports.scalePow = pow;\n\texports.scaleSqrt = sqrt;\n\texports.scaleQuantile = quantile$$1;\n\texports.scaleQuantize = quantize$1;\n\texports.scaleThreshold = threshold$1;\n\texports.scaleTime = time;\n\texports.scaleUtc = utcTime;\n\texports.schemeCategory10 = category10;\n\texports.schemeCategory20b = category20b;\n\texports.schemeCategory20c = category20c;\n\texports.schemeCategory20 = category20;\n\texports.scaleSequential = sequential;\n\texports.interpolateCubehelixDefault = cubehelix$3;\n\texports.interpolateRainbow = rainbow$1;\n\texports.interpolateWarm = warm;\n\texports.interpolateCool = cool;\n\texports.interpolateViridis = viridis;\n\texports.interpolateMagma = magma;\n\texports.interpolateInferno = inferno;\n\texports.interpolatePlasma = plasma;\n\texports.creator = creator;\n\texports.customEvent = customEvent;\n\texports.local = local;\n\texports.matcher = matcher$1;\n\texports.mouse = mouse;\n\texports.namespace = namespace;\n\texports.namespaces = namespaces;\n\texports.select = select;\n\texports.selectAll = selectAll;\n\texports.selection = selection;\n\texports.selector = selector;\n\texports.selectorAll = selectorAll;\n\texports.touch = touch;\n\texports.touches = touches;\n\texports.window = window;\n\texports.active = active;\n\texports.interrupt = interrupt;\n\texports.transition = transition;\n\texports.axisTop = axisTop;\n\texports.axisRight = axisRight;\n\texports.axisBottom = axisBottom;\n\texports.axisLeft = axisLeft;\n\texports.cluster = cluster;\n\texports.hierarchy = hierarchy;\n\texports.pack = index;\n\texports.packSiblings = siblings;\n\texports.packEnclose = enclose;\n\texports.partition = partition;\n\texports.stratify = stratify;\n\texports.tree = tree;\n\texports.treemap = index$1;\n\texports.treemapBinary = binary;\n\texports.treemapDice = treemapDice;\n\texports.treemapSlice = treemapSlice;\n\texports.treemapSliceDice = sliceDice;\n\texports.treemapSquarify = squarify;\n\texports.treemapResquarify = resquarify;\n\texports.forceCenter = center$1;\n\texports.forceCollide = collide;\n\texports.forceLink = link;\n\texports.forceManyBody = manyBody;\n\texports.forceSimulation = simulation;\n\texports.forceX = x$3;\n\texports.forceY = y$3;\n\texports.drag = drag;\n\texports.dragDisable = dragDisable;\n\texports.dragEnable = yesdrag;\n\texports.voronoi = voronoi;\n\texports.zoom = zoom;\n\texports.zoomIdentity = identity$6;\n\texports.zoomTransform = transform;\n\texports.brush = brush;\n\texports.brushX = brushX;\n\texports.brushY = brushY;\n\texports.brushSelection = brushSelection;\n\texports.chord = chord;\n\texports.ribbon = ribbon;\n\texports.geoAlbers = albers;\n\texports.geoAlbersUsa = albersUsa;\n\texports.geoArea = area$2;\n\texports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\texports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\texports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\texports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\texports.geoBounds = bounds;\n\texports.geoCentroid = centroid$1;\n\texports.geoCircle = circle$1;\n\texports.geoClipExtent = extent$1;\n\texports.geoConicConformal = conicConformal;\n\texports.geoConicConformalRaw = conicConformalRaw;\n\texports.geoConicEqualArea = conicEqualArea;\n\texports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\texports.geoConicEquidistant = conicEquidistant;\n\texports.geoConicEquidistantRaw = conicEquidistantRaw;\n\texports.geoDistance = distance;\n\texports.geoEquirectangular = equirectangular;\n\texports.geoEquirectangularRaw = equirectangularRaw;\n\texports.geoGnomonic = gnomonic;\n\texports.geoGnomonicRaw = gnomonicRaw;\n\texports.geoGraticule = graticule;\n\texports.geoGraticule10 = graticule10;\n\texports.geoIdentity = identity$8;\n\texports.geoInterpolate = interpolate$2;\n\texports.geoLength = length$2;\n\texports.geoMercator = mercator;\n\texports.geoMercatorRaw = mercatorRaw;\n\texports.geoOrthographic = orthographic;\n\texports.geoOrthographicRaw = orthographicRaw;\n\texports.geoPath = index$3;\n\texports.geoProjection = projection;\n\texports.geoProjectionMutator = projectionMutator;\n\texports.geoRotation = rotation;\n\texports.geoStereographic = stereographic;\n\texports.geoStereographicRaw = stereographicRaw;\n\texports.geoStream = geoStream;\n\texports.geoTransform = transform$1;\n\texports.geoTransverseMercator = transverseMercator;\n\texports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 20300bc1538fc69e4695\n **/","import * as normalize from '../../node_modules/skeleton-css/css/normalize.css';\r\nimport * as skeletoncss from '../../node_modules/skeleton-css/css/skeleton.css';\r\nimport * as _ from 'lodash';\r\nimport PRNG from '../../support/js/index';\r\nimport renderHistogram from './renderHistogram';\r\nimport * as d3 from 'd3';\r\n\r\nlet seed = +new Date;\r\nlet numSamples = 100000;\r\n\r\nfunction renderAlg(alg) {\r\n    let data = _.times(numSamples, PRNG[alg](seed).bind(this, undefined, undefined))\r\n    renderHistogram(`#${alg}`, data);\r\n}\r\n\r\nrenderAlg('Alea');\r\nrenderAlg('KISS07');\r\nrenderAlg('Kybos');\r\nrenderAlg('LFib');\r\nrenderAlg('LFib4');\r\nrenderAlg('MRG32k3a');\r\nrenderAlg('Xorshift03');\r\nrenderAlg('Invwk');\r\n\r\n// let AleaData = _.times(numSamples, PRNG.Alea(seed).bind(this, undefined, undefined));\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../css-loader/index.js!./normalize.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./normalize.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./normalize.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/skeleton-css/css/normalize.css\n ** module id = 1\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader!../~/skeleton-css/css/normalize.css\n ** module id = 2\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader/lib/css-base.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/style-loader/addStyles.js\n ** module id = 4\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../css-loader/index.js!./skeleton.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../css-loader/index.js!./skeleton.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../css-loader/index.js!./skeleton.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/skeleton-css/css/skeleton.css\n ** module id = 5\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".container{position:relative;max-width:960px;margin:0 auto;padding:0 20px}.column,.columns,.container{width:100%;box-sizing:border-box}.column,.columns{float:left}@media (min-width:400px){.container{width:85%;padding:0}}@media (min-width:550px){.container{width:80%}.column,.columns{margin-left:4%}.column:first-child,.columns:first-child{margin-left:0}.one.column,.one.columns{width:4.66666666667%}.two.columns{width:13.3333333333%}.three.columns{width:22%}.four.columns{width:30.6666666667%}.five.columns{width:39.3333333333%}.six.columns{width:48%}.seven.columns{width:56.6666666667%}.eight.columns{width:65.3333333333%}.nine.columns{width:74%}.ten.columns{width:82.6666666667%}.eleven.columns{width:91.3333333333%}.twelve.columns{width:100%;margin-left:0}.one-third.column{width:30.6666666667%}.two-thirds.column{width:65.3333333333%}.one-half.column{width:48%}.offset-by-one.column,.offset-by-one.columns{margin-left:8.66666666667%}.offset-by-two.column,.offset-by-two.columns{margin-left:17.3333333333%}.offset-by-three.column,.offset-by-three.columns{margin-left:26%}.offset-by-four.column,.offset-by-four.columns{margin-left:34.6666666667%}.offset-by-five.column,.offset-by-five.columns{margin-left:43.3333333333%}.offset-by-six.column,.offset-by-six.columns{margin-left:52%}.offset-by-seven.column,.offset-by-seven.columns{margin-left:60.6666666667%}.offset-by-eight.column,.offset-by-eight.columns{margin-left:69.3333333333%}.offset-by-nine.column,.offset-by-nine.columns{margin-left:78%}.offset-by-ten.column,.offset-by-ten.columns{margin-left:86.6666666667%}.offset-by-eleven.column,.offset-by-eleven.columns{margin-left:95.3333333333%}.offset-by-one-third.column,.offset-by-one-third.columns{margin-left:34.6666666667%}.offset-by-two-thirds.column,.offset-by-two-thirds.columns{margin-left:69.3333333333%}.offset-by-one-half.column,.offset-by-one-half.columns{margin-left:52%}}html{font-size:62.5%}body{font-size:1.5em;line-height:1.6;font-weight:400;font-family:Raleway,HelveticaNeue,Helvetica Neue,Helvetica,Arial,sans-serif;color:#222}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:2rem;font-weight:300}h1{font-size:4rem;line-height:1.2}h1,h2{letter-spacing:-.1rem}h2{font-size:3.6rem;line-height:1.25}h3{font-size:3rem;line-height:1.3;letter-spacing:-.1rem}h4{font-size:2.4rem;line-height:1.35;letter-spacing:-.08rem}h5{font-size:1.8rem;line-height:1.5;letter-spacing:-.05rem}h6{font-size:1.5rem;line-height:1.6;letter-spacing:0}@media (min-width:550px){h1{font-size:5rem}h2{font-size:4.2rem}h3{font-size:3.6rem}h4{font-size:3rem}h5{font-size:2.4rem}h6{font-size:1.5rem}}p{margin-top:0}a{color:#1eaedb}a:hover{color:#0fa0ce}.button,button,input[type=button],input[type=reset],input[type=submit]{display:inline-block;height:38px;padding:0 30px;color:#555;text-align:center;font-size:11px;font-weight:600;line-height:38px;letter-spacing:.1rem;text-transform:uppercase;text-decoration:none;white-space:nowrap;background-color:transparent;border-radius:4px;border:1px solid #bbb;cursor:pointer;box-sizing:border-box}.button:focus,.button:hover,button:focus,button:hover,input[type=button]:focus,input[type=button]:hover,input[type=reset]:focus,input[type=reset]:hover,input[type=submit]:focus,input[type=submit]:hover{color:#333;border-color:#888;outline:0}.button.button-primary,button.button-primary,input[type=button].button-primary,input[type=reset].button-primary,input[type=submit].button-primary{color:#fff;background-color:#33c3f0;border-color:#33c3f0}.button.button-primary:focus,.button.button-primary:hover,button.button-primary:focus,button.button-primary:hover,input[type=button].button-primary:focus,input[type=button].button-primary:hover,input[type=reset].button-primary:focus,input[type=reset].button-primary:hover,input[type=submit].button-primary:focus,input[type=submit].button-primary:hover{color:#fff;background-color:#1eaedb;border-color:#1eaedb}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],select,textarea{height:38px;padding:6px 10px;background-color:#fff;border:1px solid #d1d1d1;border-radius:4px;box-shadow:none;box-sizing:border-box}input[type=email],input[type=number],input[type=password],input[type=search],input[type=tel],input[type=text],input[type=url],textarea{-webkit-appearance:none;-moz-appearance:none;appearance:none}textarea{min-height:65px;padding-top:6px;padding-bottom:6px}input[type=email]:focus,input[type=number]:focus,input[type=password]:focus,input[type=search]:focus,input[type=tel]:focus,input[type=text]:focus,input[type=url]:focus,select:focus,textarea:focus{border:1px solid #33c3f0;outline:0}label,legend{display:block;margin-bottom:.5rem;font-weight:600}fieldset{padding:0;border-width:0}input[type=checkbox],input[type=radio]{display:inline}label>.label-body{display:inline-block;margin-left:.5rem;font-weight:400}ul{list-style:circle inside}ol{list-style:decimal inside}ol,ul{padding-left:0;margin-top:0}ol ol,ol ul,ul ol,ul ul{margin:1.5rem 0 1.5rem 3rem;font-size:90%}li{margin-bottom:1rem}code{padding:.2rem .5rem;margin:0 .2rem;font-size:90%;white-space:nowrap;background:#f1f1f1;border:1px solid #e1e1e1;border-radius:4px}pre>code{display:block;padding:1rem 1.5rem;white-space:pre}td,th{padding:12px 15px;text-align:left;border-bottom:1px solid #e1e1e1}td:first-child,th:first-child{padding-left:0}td:last-child,th:last-child{padding-right:0}.button,button{margin-bottom:1rem}fieldset,input,select,textarea{margin-bottom:1.5rem}blockquote,dl,figure,form,ol,p,pre,table,ul{margin-bottom:2.5rem}.u-full-width{width:100%;box-sizing:border-box}.u-max-full-width{max-width:100%;box-sizing:border-box}.u-pull-right{float:right}.u-pull-left{float:left}hr{margin-top:3rem;margin-bottom:3.5rem;border-width:0;border-top:1px solid #e1e1e1}.container:after,.row:after,.u-cf{content:\\\"\\\";display:table;clear:both}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/css-loader!../~/skeleton-css/css/skeleton.css\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.2';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      value = Object(value);\n      return (symToStringTag && symToStringTag in value)\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      object = Object(object);\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lodash.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 8\n ** module chunks = 0\n **/","import Mash from './Mash';\r\nimport Invwk from './Invwk';\r\nimport Alea from './Alea';\r\nimport KISS07 from './KISS07';\r\nimport Kybos from './Kybos';\r\nimport LFib from './LFib';\r\nimport LFib4 from './LFIB4';\r\nimport MRG32k3a from './MRG32k3a';\r\nimport Xorshift03 from './Xorshift03';\r\n\r\nfunction random(generator) {\r\n  var rand = null;\r\n  return function () {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    rand = args.length\r\n      ? generator.apply(this, args)\r\n      : generator();\r\n\r\n    function range(from, to) {\r\n      if (typeof from !== 'undefined' && typeof to === 'undefined') {\r\n        return from * rand() | 0;\r\n      } else if (typeof from !== 'undefined' && typeof to !== 'undefined') {\r\n        return ((to - from) * rand() + from) | 0;\r\n      } else {\r\n        return rand();\r\n      }\r\n    }\r\n\r\n    return Object.assign(range, rand);\r\n  }\r\n}\r\n\r\nlet rand = random(Alea);\r\nrand.Invwk = random(Invwk);\r\nrand.Mash = Mash;\r\nrand.Alea = random(Alea);\r\nrand.KISS07 = random(KISS07);\r\nrand.Kybos = random(Kybos);\r\nrand.LFib = random(LFib);\r\nrand.LFib4 = random(LFib4);\r\nrand.MRG32k3a = random(MRG32k3a);\r\nrand.Xorshift03 = random(Xorshift03);\r\n\r\nmodule.exports = rand;\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/index.js\n **/","// From http://baagoe.com/en/RandomMusings/javascript/\r\n// Johannes Baagøe <baagoe@baagoe.com>, 2010\r\nexport default function Mash() {\r\n  var n = 0xefc8249d;\r\n\r\n  var mash = function (data) {\r\n    data = data.toString();\r\n    for (var i = 0; i < data.length; i++) {\r\n      n += data.charCodeAt(i);\r\n      var h = 0.02519603282416938 * n;\r\n      n = h >>> 0;\r\n      h -= n;\r\n      h *= n;\r\n      n = h >>> 0;\r\n      h -= n;\r\n      n += h * 0x100000000; // 2^32\r\n    }\r\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\r\n  };\r\n\r\n  mash.version = 'Mash 0.9';\r\n  return mash;\r\n\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/Mash.js\n **/","import Mash from './Mash';\r\n\r\n\r\n//Webkit2's crazy invertible mapping generator\r\n//Based on Andy Hyland's implementation: https://bocoup.com/weblog/random-numbers\r\nexport default function Invwk() {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    var mash = Mash();\r\n    var max = 0x100000000; // 2 ^ 32\r\n\r\n    if (args.length == 0) {\r\n      args = [+new Date];\r\n    }\r\n    \r\n    var seed = (mash(args.join('')) * max) | 0;\r\n    // var seed = (Math.random() * max) | 0;\r\n\r\n    var random = function () {\r\n        seed += (seed * seed) | 5;\r\n        // Shift off bits, discarding the sign. Discarding the sign is\r\n        // important because OR w/ 5 can give us + or - numbers.\r\n        return (seed >>> 32) * 2.3283064365386963e-10;\r\n    };\r\n\r\n    random.uint32 = function () {\r\n       seed += (seed * seed) | 5;\r\n        // Shift off bits, discarding the sign. Discarding the sign is\r\n        // important because OR w/ 5 can give us + or - numbers.\r\n        return (seed >>> 0);\r\n    };\r\n    random.fract53 = function () {\r\n      return random() +\r\n        (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\r\n    };\r\n    random.version = 'Alea 0.9';\r\n    random.args = args;\r\n\r\n    return random;\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/Invwk.js\n **/","import Mash from './Mash';\r\n\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function Alea () {\r\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\r\n    var args = Array.prototype.slice.call(arguments);\r\n    var s0 = 0;\r\n    var s1 = 0;\r\n    var s2 = 0;\r\n    var c = 1;\r\n\r\n    if (args.length == 0) {\r\n      args = [+new Date];\r\n    }\r\n    var mash = Mash();\r\n    s0 = mash(' ');\r\n    s1 = mash(' ');\r\n    s2 = mash(' ');\r\n\r\n    for (var i = 0; i < args.length; i++) {\r\n      s0 -= mash(args[i]);\r\n      if (s0 < 0) {\r\n        s0 += 1;\r\n      }\r\n      s1 -= mash(args[i]);\r\n      if (s1 < 0) {\r\n        s1 += 1;\r\n      }\r\n      s2 -= mash(args[i]);\r\n      if (s2 < 0) {\r\n        s2 += 1;\r\n      }\r\n    }\r\n    mash = null;\r\n\r\n    var random = function () {\r\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\r\n      s0 = s1;\r\n      s1 = s2;\r\n      return s2 = t - (c = t | 0);\r\n    };\r\n    random.uint32 = function () {\r\n      return random() * 0x100000000; // 2^32\r\n    };\r\n    random.fract53 = function () {\r\n      return random() +\r\n        (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\r\n    };\r\n    random.version = 'Alea 0.9';\r\n    random.args = args;\r\n    return random;\r\n\r\n  };\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/Alea.js\n **/","import Mash from './Mash';\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function KISS07() {\r\n  // George Marsaglia, 2007-06-23\r\n  //http://groups.google.com/group/comp.lang.fortran/msg/6edb8ad6ec5421a5\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var x = 123456789;\r\n  var y = 362436069;\r\n  var z = 21288629;\r\n  var w = 14921776;\r\n  var c = 0;\r\n\r\n  if (args.length == 0) {\r\n    args = [+new Date];\r\n  }\r\n  var mash = Mash();\r\n  for (var i = 0; i < args.length; i++) {\r\n    x ^= mash(args[i]) * 0x100000000; // 2^32\r\n    y ^= mash(args[i]) * 0x100000000;\r\n    z ^= mash(args[i]) * 0x100000000;\r\n    w ^= mash(args[i]) * 0x100000000;\r\n  }\r\n  if (y === 0) {\r\n    y = 1;\r\n  }\r\n  c ^= z >>> 31;\r\n  z &= 0x7fffffff;\r\n  if ((z % 7559) === 0) {\r\n    z++;\r\n  }\r\n  w &= 0x7fffffff;\r\n  if ((w % 7559) === 0) {\r\n    w++;\r\n  }\r\n  mash = null;\r\n\r\n  var uint32 = function () {\r\n    var t;\r\n\r\n    x += 545925293;\r\n    x >>>= 0;\r\n\r\n    y ^= y << 13;\r\n    y ^= y >>> 17;\r\n    y ^= y << 5;\r\n\r\n    t = z + w + c;\r\n    z = w;\r\n    c = t >>> 31;\r\n    w = t & 0x7fffffff;\r\n\r\n    return x + y + w >>> 0;\r\n  };\r\n\r\n  var random = function () {\r\n    return uint32() * 2.3283064365386963e-10; // 2^-32\r\n  };\r\n  random.uint32 = uint32;\r\n  random.fract53 = function () {\r\n    return random() +\r\n      (uint32() & 0x1fffff) * 1.1102230246251565e-16; // 2^-53\r\n  };\r\n  random.args = args;\r\n  random.version = 'KISS07 0.9';\r\n\r\n  return random;\r\n};\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/KISS07.js\n **/","import Mash from './Mash';\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function Kybos() {\r\n  // Johannes Baagøe <baagoe@baagoe.com>, 2010\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var s0 = 0;\r\n  var s1 = 0;\r\n  var s2 = 0;\r\n  var c = 1;\r\n  var s = [];\r\n  var k = 0;\r\n\r\n  var mash = Mash();\r\n  var s0 = mash(' ');\r\n  var s1 = mash(' ');\r\n  var s2 = mash(' ');\r\n  for (var j = 0; j < 8; j++) {\r\n    s[j] = mash(' ');\r\n  }\r\n\r\n  if (args.length == 0) {\r\n    args = [+new Date];\r\n  }\r\n  for (var i = 0; i < args.length; i++) {\r\n    s0 -= mash(args[i]);\r\n    if (s0 < 0) {\r\n      s0 += 1;\r\n    }\r\n    s1 -= mash(args[i]);\r\n    if (s1 < 0) {\r\n      s1 += 1;\r\n    }\r\n    s2 -= mash(args[i]);\r\n    if (s2 < 0) {\r\n      s2 += 1;\r\n    }\r\n    for (var j = 0; j < 8; j++) {\r\n      s[j] -= mash(args[i]);\r\n      if (s[j] < 0) {\r\n        s[j] += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  var random = function () {\r\n    var a = 2091639;\r\n    k = s[k] * 8 | 0;\r\n    var r = s[k];\r\n    var t = a * s0 + c * 2.3283064365386963e-10; // 2^-32\r\n    s0 = s1;\r\n    s1 = s2;\r\n    s2 = t - (c = t | 0);\r\n    s[k] -= s2;\r\n    if (s[k] < 0) {\r\n      s[k] += 1;\r\n    }\r\n    return r;\r\n  };\r\n  random.uint32 = function () {\r\n    return random() * 0x100000000; // 2^32\r\n  };\r\n  random.fract53 = function () {\r\n    return random() +\r\n      (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\r\n  };\r\n  random.addNoise = function () {\r\n    for (var i = arguments.length - 1; i >= 0; i--) {\r\n      for (j = 0; j < 8; j++) {\r\n        s[j] -= mash(arguments[i]);\r\n        if (s[j] < 0) {\r\n          s[j] += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  random.version = 'Kybos 0.9';\r\n  random.args = args;\r\n  return random;\r\n\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/Kybos.js\n **/","import Mash from './Mash';\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function LFib() {\r\n  // Johannes Baagøe <baagoe@baagoe.com>, 2010\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var k0 = 255,\r\n    k1 = 52,\r\n    k2 = 0;\r\n  var s = [];\r\n\r\n  var mash = Mash();\r\n  if (args.length === 0) {\r\n    args = [+new Date()];\r\n  }\r\n  for (var j = 0; j < 256; j++) {\r\n    s[j] = mash(' ');\r\n    s[j] -= mash(' ') * 4.76837158203125e-7; // 2^-21\r\n    if (s[j] < 0) {\r\n      s[j] += 1;\r\n    }\r\n  }\r\n  for (var i = 0; i < args.length; i++) {\r\n    for (var j = 0; j < 256; j++) {\r\n      s[j] -= mash(args[i]);\r\n      s[j] -= mash(args[i]) * 4.76837158203125e-7; // 2^-21\r\n      if (s[j] < 0) {\r\n        s[j] += 1;\r\n      }\r\n    }\r\n  }\r\n  mash = null;\r\n\r\n  var random = function () {\r\n    k0 = (k0 + 1) & 255;\r\n    k1 = (k1 + 1) & 255;\r\n    k2 = (k2 + 1) & 255;\r\n\r\n    var x = s[k0] - s[k1];\r\n    if (x < 0.0) {\r\n      x += 1.0;\r\n    }\r\n    x -= s[k2];\r\n    if (x < 0.0) {\r\n      x += 1.0;\r\n    }\r\n    return s[k0] = x;\r\n  }\r\n\r\n  random.uint32 = function () {\r\n    return random() * 0x100000000 >>> 0; // 2^32\r\n  };\r\n  random.fract53 = random;\r\n  random.version = 'LFib 0.9';\r\n  random.args = args;\r\n\r\n  return random;\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/LFib.js\n **/","import Mash from './Mash';\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function LFIB4() {\r\n  // George Marsaglia's LFIB4,\r\n  //http://groups.google.com/group/sci.crypt/msg/eb4ddde782b17051\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var k0 = 0,\r\n    k1 = 58,\r\n    k2 = 119,\r\n    k3 = 178;\r\n\r\n  var s = [];\r\n\r\n  var mash = Mash();\r\n  if (args.length === 0) {\r\n    args = [+new Date()];\r\n  }\r\n  for (var j = 0; j < 256; j++) {\r\n    s[j] = mash(' ');\r\n    s[j] -= mash(' ') * 4.76837158203125e-7; // 2^-21\r\n    if (s[j] < 0) {\r\n      s[j] += 1;\r\n    }\r\n  }\r\n  for (var i = 0; i < args.length; i++) {\r\n    for (var j = 0; j < 256; j++) {\r\n      s[j] -= mash(args[i]);\r\n      s[j] -= mash(args[i]) * 4.76837158203125e-7; // 2^-21\r\n      if (s[j] < 0) {\r\n        s[j] += 1;\r\n      }\r\n    }\r\n  }\r\n  mash = null;\r\n\r\n  var random = function () {\r\n    var x;\r\n\r\n    k0 = (k0 + 1) & 255;\r\n    k1 = (k1 + 1) & 255;\r\n    k2 = (k2 + 1) & 255;\r\n    k3 = (k3 + 1) & 255;\r\n\r\n    x = s[k0] - s[k1];\r\n    if (x < 0) {\r\n      x += 1;\r\n    }\r\n    x -= s[k2];\r\n    if (x < 0) {\r\n      x += 1;\r\n    }\r\n    x -= s[k3];\r\n    if (x < 0) {\r\n      x += 1;\r\n    }\r\n\r\n    return s[k0] = x;\r\n  }\r\n\r\n  random.uint32 = function () {\r\n    return random() * 0x100000000 >>> 0; // 2^32\r\n  };\r\n  random.fract53 = random;\r\n  random.version = 'LFIB4 0.9';\r\n  random.args = args;\r\n\r\n  return random;\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/LFIB4.js\n **/","import Mash from './Mash';\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function MRG32k3a() {\r\n  // Copyright (c) 1998, 2002 Pierre L'Ecuyer, DIRO, Université de Montréal.\r\n  // http://www.iro.umontreal.ca/~lecuyer/\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var m1 = 4294967087;\r\n  var m2 = 4294944443;\r\n  var s10 = 12345,\r\n    s11 = 12345,\r\n    s12 = 123,\r\n    s20 = 12345,\r\n    s21 = 12345,\r\n    s22 = 123;\r\n\r\n  if (args.length === 0) {\r\n    args = [+new Date()];\r\n  }\r\n  var mash = Mash();\r\n  for (var i = 0; i < args.length; i++) {\r\n    s10 += mash(args[i]) * 0x100000000; // 2 ^ 32\r\n    s11 += mash(args[i]) * 0x100000000;\r\n    s12 += mash(args[i]) * 0x100000000;\r\n    s20 += mash(args[i]) * 0x100000000;\r\n    s21 += mash(args[i]) * 0x100000000;\r\n    s22 += mash(args[i]) * 0x100000000;\r\n  }\r\n  s10 %= m1;\r\n  s11 %= m1;\r\n  s12 %= m1;\r\n  s20 %= m2;\r\n  s21 %= m2;\r\n  s22 %= m2;\r\n  mash = null;\r\n\r\n  var uint32 = function () {\r\n    var m1 = 4294967087;\r\n    var m2 = 4294944443;\r\n    var a12 = 1403580;\r\n    var a13n = 810728;\r\n    var a21 = 527612;\r\n    var a23n = 1370589;\r\n\r\n    var k, p1, p2;\r\n\r\n    /* Component 1 */\r\n    p1 = a12 * s11 - a13n * s10;\r\n    k = p1 / m1 | 0;\r\n    p1 -= k * m1;\r\n    if (p1 < 0) p1 += m1;\r\n    s10 = s11;\r\n    s11 = s12;\r\n    s12 = p1;\r\n\r\n    /* Component 2 */\r\n    p2 = a21 * s22 - a23n * s20;\r\n    k = p2 / m2 | 0;\r\n    p2 -= k * m2;\r\n    if (p2 < 0) p2 += m2;\r\n    s20 = s21;\r\n    s21 = s22;\r\n    s22 = p2;\r\n\r\n    /* Combination */\r\n    if (p1 <= p2) return p1 - p2 + m1;\r\n    else return p1 - p2;\r\n  };\r\n\r\n  var random = function () {\r\n    return uint32() * 2.3283064365386963e-10; // 2^-32\r\n  };\r\n  random.uint32 = uint32;\r\n  random.fract53 = function () {\r\n    return random() +\r\n      (uint32() & 0x1fffff) * 1.1102230246251565e-16; // 2^-53\r\n  };\r\n  random.version = 'MRG32k3a 0.9';\r\n  random.args = args;\r\n\r\n  return random;\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/MRG32k3a.js\n **/","import Mash from './Mash';\r\n\r\n// From http://baagoe.com/en/RandomMusings/javascript/\r\nexport default function Xorshift03() {\r\n  // George Marsaglia, 13 May 2003\r\n  // http://groups.google.com/group/comp.lang.c/msg/e3c4ea1169e463ae\r\n  var args = Array.prototype.slice.call(arguments);\r\n  var x = 123456789,\r\n    y = 362436069,\r\n    z = 521288629,\r\n    w = 88675123,\r\n    v = 886756453;\r\n\r\n  if (args.length == 0) {\r\n    args = [+new Date];\r\n  }\r\n  var mash = Mash();\r\n  for (var i = 0; i < args.length; i++) {\r\n    x ^= mash(args[i]) * 0x100000000; // 2^32\r\n    y ^= mash(args[i]) * 0x100000000;\r\n    z ^= mash(args[i]) * 0x100000000;\r\n    v ^= mash(args[i]) * 0x100000000;\r\n    w ^= mash(args[i]) * 0x100000000;\r\n  }\r\n  mash = null;\r\n\r\n  var uint32 = function () {\r\n    var t = (x ^ (x >>> 7)) >>> 0;\r\n    x = y;\r\n    y = z;\r\n    z = w;\r\n    w = v;\r\n    v = (v ^ (v << 6)) ^ (t ^ (t << 13)) >>> 0;\r\n    return ((y + y + 1) * v) >>> 0;\r\n  }\r\n\r\n  var random = function () {\r\n    return uint32() * 2.3283064365386963e-10; // 2^-32\r\n  };\r\n  random.uint32 = uint32;\r\n  random.fract53 = function () {\r\n    return random() +\r\n      (uint32() & 0x1fffff) * 1.1102230246251565e-16; // 2^-53\r\n  };\r\n  random.version = 'Xorshift03 0.9';\r\n  random.args = args;\r\n  return random;\r\n\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ./../support/js/Xorshift03.js\n **/","import * as d3 from 'd3';\r\n\r\nexport default function renderHistogram(id, data) {\r\n\r\n    var formatCount = d3.format(\",.0f\");\r\n\r\n    var svg = d3.select(id),\r\n        margin = { top: 10, right: 30, bottom: 30, left: 30 },\r\n        width = +svg.attr(\"width\") - margin.left - margin.right,\r\n        height = +svg.attr(\"height\") - margin.top - margin.bottom,\r\n        g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    var x = d3.scaleLinear()\r\n        .rangeRound([0, width]);\r\n\r\n    var bins = d3.histogram()\r\n        .domain(x.domain())\r\n        .thresholds(x.ticks(20))\r\n        (data);\r\n\r\n    var y = d3.scaleLinear()\r\n        .domain([0, d3.max(bins, function (d) { return d.length; })])\r\n        .range([height, 0]);\r\n\r\n    var bar = g.selectAll(\".bar\")\r\n        .data(bins)\r\n        .enter().append(\"g\")\r\n        .attr(\"class\", \"bar\")\r\n        .attr(\"transform\", function (d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; });\r\n\r\n    bar.append(\"rect\")\r\n        .attr(\"x\", 1)\r\n        .attr(\"width\", x(bins[0].x1) - x(bins[0].x0) - 1)\r\n        .attr(\"height\", function (d) { return height - y(d.length); });\r\n\r\n    bar.append(\"text\")\r\n        .attr(\"dy\", \".75em\")\r\n        .attr(\"y\", 6)\r\n        .attr(\"x\", (x(bins[0].x1) - x(bins[0].x0)) / 2)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .text(function (d) { return formatCount(d.length); });\r\n\r\n    g.append(\"g\")\r\n        .attr(\"class\", \"axis axis--x\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x));\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/renderHistogram.js\n **/","// https://d3js.org Version 4.4.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.4.0\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar range = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant$1([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant$1(slice.call(_)) : constant$1(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar pairs = function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nfunction linear(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar area = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar pi$1 = Math.PI;\nvar tau$1 = 2 * pi$1;\nvar epsilon = 1e-6;\nvar tauEpsilon = tau$1 - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      if (da < 0) da = da % tau$1 + tau$1;\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$1)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nvar slice$1 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$1.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke(q) {\n  if (!q._start) {\n    try { start(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar constant$2 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar epsilon$1 = 1e-12;\nvar pi$2 = Math.PI;\nvar halfPi$1 = pi$2 / 2;\nvar tau$2 = 2 * pi$2;\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$2(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$1,\n        a1 = endAngle.apply(this, arguments) - halfPi$1,\n        da = Math.abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$2 - epsilon$1) {\n      context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$1) {\n        context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n          rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$1) {\n        var p0 = asin(rp / r0 * Math.sin(ap)),\n            p1 = asin(rp / r1 * Math.sin(ap));\n        if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * Math.cos(a01),\n          y01 = r1 * Math.sin(a01),\n          x10 = r0 * Math.cos(a10),\n          y10 = r0 * Math.sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$1) {\n        var x11 = r1 * Math.cos(a11),\n            y11 = r1 * Math.sin(a11),\n            x00 = r0 * Math.cos(a00),\n            y00 = r0 * Math.sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$2) {\n          var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$1) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$1) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n    return [Math.cos(a) * r, Math.sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$2(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x,\n      y$$1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$2(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$1 = function() {\n  var x0 = x,\n      x1 = null,\n      y0 = constant$2(0),\n      y1 = y,\n      defined = constant$2(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$2(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$2(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$2(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$1 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$1,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$2(0),\n      endAngle = constant$2(tau$2),\n      padAngle = constant$2(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$2(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$1().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$2);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$2);\n  }\n};\n\nvar cross$1 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\nvar kx = Math.sin(tau$2 / 10) * kr;\nvar ky = -Math.cos(tau$2 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$2 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross$1,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$2(circle),\n      size = constant$2(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$2(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$2(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop = function() {};\n\nfunction point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$1(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$1(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$2(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$1) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$1) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$3(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$2 = Array.prototype.slice;\n\nvar none = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$1 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$2([]),\n      order = none$1,\n      offset = none,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$2(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$2(slice$2.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n};\n\nvar ascending$1 = function(series) {\n  var sums = series.map(sum$1);\n  return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$1(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$1(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$1),\n      order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$1(series).reverse();\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis$1(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$2 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed$1 = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis$1((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear$1(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential$1(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential$1(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear$1(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = (function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = color$$1(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$2);\nvar rgbBasisClosed = rgbSpline(basisClosed$1);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar interpolateNumber = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolate(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: interpolateNumber(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolate = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? interpolateNumber\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : interpolateNumber)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar noop$1 = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set$2(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set$2(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set$2(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke$1() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) interval = setInterval(poke$1, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond = 1e3;\nvar durationMinute = 6e4;\nvar durationHour = 36e5;\nvar durationDay = 864e5;\nvar durationWeek = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nvar formatSpecifier = function(specifier) {\n  return new FormatSpecifier(specifier);\n};\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity$3(x) {\n  return x;\n}\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$3 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$3.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$4() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$4(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolate,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$3.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, interpolateNumber);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$4() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$4().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$4(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant$4(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt() {\n  return pow().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$3.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$3.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar durationSecond$1 = 1000;\nvar durationMinute$1 = durationSecond$1 * 60;\nvar durationHour$1 = durationMinute$1 * 60;\nvar durationDay$1 = durationHour$1 * 24;\nvar durationWeek$1 = durationDay$1 * 7;\nvar durationMonth = durationDay$1 * 30;\nvar durationYear = durationDay$1 * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, interpolateNumber),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond$1],\n    [second$$1,  5,  5 * durationSecond$1],\n    [second$$1, 15, 15 * durationSecond$1],\n    [second$$1, 30, 30 * durationSecond$1],\n    [minute$$1,  1,      durationMinute$1],\n    [minute$$1,  5,  5 * durationMinute$1],\n    [minute$$1, 15, 15 * durationMinute$1],\n    [minute$$1, 30, 30 * durationMinute$1],\n    [  hour$$1,  1,      durationHour$1  ],\n    [  hour$$1,  3,  3 * durationHour$1  ],\n    [  hour$$1,  6,  6 * durationHour$1  ],\n    [  hour$$1, 12, 12 * durationHour$1  ],\n    [   day$$1,  1,      durationDay$1   ],\n    [   day$$1,  2,  2 * durationDay$1   ],\n    [  week,  1,      durationWeek$1  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point$5 = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point$5(node, event);\n};\n\nfunction none$2() {}\n\nvar selector = function(selector) {\n  return selector == null ? none$2 : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$5(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$2;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$2(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise$1() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise$1);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point$5(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point$5(node, touches[i]);\n  }\n\n  return points;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$3(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$3(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$3(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$3(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$3(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$3(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start$1(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start$1(name) ? init : set$3;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$1) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar slice$4 = Array.prototype.slice;\n\nvar identity$5 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon$2 = 1e-6;\n\nfunction translateX(scale0, scale1, d) {\n  var x = scale0(d);\n  return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n}\n\nfunction translateY(scale0, scale1, d) {\n  var y = scale0(d);\n  return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        transform = orient === top || orient === bottom ? translateX : translateY,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\"),\n        k = orient === top || orient === left ? -1 : 1,\n        x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon$2)\n          .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$4.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr > dx * dx + dy * dy;\n}\n\nfunction distance2(circle, x, y) {\n  var dx = circle.x - x,\n      dy = circle.y - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // If there are only three elements in the front-chain…\n    if ((k = a.previous) === (j = b.next)) {\n      // If the new circle intersects the third circle,\n      // rotate the front chain to try the next position.\n      if (intersects(j._, c._)) {\n        a = b, b = j, --i;\n        continue pack;\n      }\n    }\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    else {\n      sj = j._.r, sk = k._.r;\n      do {\n        if (sj <= sk) {\n          if (intersects(j._, c._)) {\n            b = j, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          j = j.next, sj += j._.r;\n        } else {\n          if (intersects(k._, c._)) {\n            a = k, a.next = b, b.previous = a, --i;\n            continue pack;\n          }\n          k = k.previous, sk += k._.r;\n        }\n      } while (j !== k.next);\n    }\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle a to centroid.\n    aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c._, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$6(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nvar index$1 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$6(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((y1 - y0) > (x1 - x0)) {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    } else {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nfunction x$1(d) {\n  return d.x + d.vx;\n}\n\nfunction y$1(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$7(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index$2(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index$2,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$7(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$7(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$2(d) {\n  return d.x;\n}\n\nfunction y$2(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$7(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$3 = function(x) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$7(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$3 = function(y) {\n  var strength = constant$7(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$7(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$7(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$8(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$8(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$8(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$1) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$3\n      && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$3\n      && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$3) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$3) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$3) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$3) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$3 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      var site = cell.site,\n          halfedges = cell.halfedges,\n          j = -1,\n          m = halfedges.length,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this,\n        i0, i1 = that._found || 0,\n        cell = that.cells[i1] || that.cells[i1 = 0],\n        dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy;\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$3) * epsilon$3, Math.round(y$$1(d, i, data) / epsilon$3) * epsilon$3];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$9(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$10 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$6 = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  return node.__zoom || identity$6;\n}\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$6;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$1,\n      extent = defaultExtent,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$1();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$1();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$1();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$1();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$1();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$1();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (exports.event.touches.length === n) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$1();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$1();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type$1),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type$1),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type$1(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty$1(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent$1,\n      filter = defaultFilter$2,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type$1(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type$1(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$2();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$2();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$2();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty$1(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$2();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$11([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$11(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar tau$3 = pi$3 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$3 - padAngle * n) / k;\n    dx = k ? padAngle : tau$3 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius$1(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius$1,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$5.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$2,\n        sa1 = endAngle.apply(this, argv) - halfPi$2,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$2,\n        ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$12(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar quarterPi = pi$4 / 4;\nvar tau$4 = pi$4 * 2;\n\nvar degrees$1 = 180 / pi$4;\nvar radians = pi$4 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log$1 = Math.log;\nvar pow$1 = Math.pow;\nvar sin$1 = Math.sin;\nvar sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt$1 = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$2() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(feature, stream) {\n    streamGeometry(feature.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$2;\n  },\n  sphere: function() {\n    areaSum.add(tau$4);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area$2 = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range$1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$4) phi1 = 90;\n    else if (deltaSum < -epsilon$4) phi0 = -90;\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    boundsPoint(lambda, phi);\n  }\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n  range$1[0] = lambda0$1, range$1[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range$1 = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$2,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt$1(cx * cx + cy * cy + cz * cz),\n      u = x0 * x + y0 * y + z0 * z,\n      v = m && -acos(u) / m, // area weight\n      w = atan2(m, u); // line weight\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid$1 = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n};\n\nvar constant$13 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$4;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n}\n\nvar circle$1 = function() {\n  var center = constant$13([0, 0]),\n      radius = constant$13(90),\n      precision = constant$13(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$13([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$13(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$13(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$2,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$2,\n  point: noop$2,\n  lineStart: lengthLineStart,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$2;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$2 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$2(object$1);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n      .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$2 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$7 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$2,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$2,\n  lineEnd: noop$2,\n  polygonStart: noop$2,\n  polygonEnd: noop$2,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt$1(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$4);\n        break;\n      }\n    }\n  },\n  result: noop$2\n};\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$2(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$2(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$2(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$3 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$7) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar sum$2 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$2.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$4,\n          k = sinPhi0 * sinPhi1;\n\n      sum$2.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$4 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$4, -halfPi$3]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$4\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$3;\n    stream.point(-pi$4, phi);\n    stream.point(0, phi);\n    stream.point(pi$4, phi);\n    stream.point(pi$4, 0);\n    stream.point(pi$4, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$4, -phi);\n    stream.point(-pi$4, 0);\n    stream.point(-pi$4, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$4) {\n    var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$4;\n            point1[1] += epsilon$4;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt$1(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$4) < epsilon$4,\n        meridian = polar || delta < epsilon$4;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$4 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n};\n\nvar transform$1 = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt$1(a * a + b * b + c * c),\n          phi2 = asin$1(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$4 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin$1(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$4) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt$1(c) / n;\n\n  function project(x, y) {\n    var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign$1(r0y), asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt$1(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin$1(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt$1(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin$1(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$3];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$4);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      clipAuto;\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    if (!arguments.length) return clipAuto ? null : clipExtent();\n    if (clipAuto = _ == null) {\n      var k = pi$4 * scale(),\n          t = translate();\n      _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n    }\n    clipExtent(_);\n    return m;\n  };\n\n  return m.clipExtent(null);\n}\n\nfunction tany(y) {\n  return tan((halfPi$3 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n      f = cy0 * pow$1(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n    else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n    var r = f / pow$1(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign$1(fy), 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$4) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign$1(gy), g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$7 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$8 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$7, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$7, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin$1);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$4);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$3];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = range;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.entries = entries;\nexports.keys = keys;\nexports.values = values;\nexports.map = map$1;\nexports.set = set;\nexports.nest = nest;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential;\nexports.easeLinear = linear;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonHull = hull;\nexports.polygonContains = contains;\nexports.polygonLength = length$1;\nexports.path = path;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.arc = arc;\nexports.area = area$1;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle;\nexports.symbolCross = cross$1;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$1;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$1;\nexports.stackOrderReverse = reverse;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.interpolate = interpolate;\nexports.interpolateArray = array$1;\nexports.interpolateDate = date;\nexports.interpolateNumber = interpolateNumber;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateBasis = basis$2;\nexports.interpolateBasisClosed = basisClosed$1;\nexports.quantize = quantize;\nexports.dispatch = dispatch;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.formatLocale = formatLocale;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatLocale = formatLocale$1;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.scaleBand = band;\nexports.scalePoint = point$4;\nexports.scaleIdentity = identity$4;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow;\nexports.scaleSqrt = sqrt;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.scaleSequential = sequential;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.creator = creator;\nexports.customEvent = customEvent;\nexports.local = local;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$3;\nexports.forceY = y$3;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomIdentity = identity$6;\nexports.zoomTransform = transform;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area$2;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid$1;\nexports.geoCircle = circle$1;\nexports.geoClipExtent = extent$1;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoDistance = distance;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$8;\nexports.geoInterpolate = interpolate$2;\nexports.geoLength = length$2;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index$3;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform$1;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/d3/build/d3.js\n ** module id = 20\n ** module chunks = 0\n **/"],"sourceRoot":""}